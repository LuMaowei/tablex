{"version":3,"sources":["E:/WebRoot/tablex/examples/Playground.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","E_WebRoot_tablex_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_5__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_7__","assign","mdxType","id","parentName","className","docz__WEBPACK_IMPORTED_MODULE_8__","__position","__code","__scope","this","Playground","Props","Table","flatten","Input","style","height","_React$Component","Demo","_this","E_WebRoot_tablex_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","E_WebRoot_tablex_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","E_WebRoot_tablex_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","call","columns","dataIndex","key","title","width","fixed","validator","value","row","valid","message","editor","index","onchange","ref","antd__WEBPACK_IMPORTED_MODULE_10__","defaultValue","onChange","e","newValue","target","column-1","maxWidth","align","render","Date","getTime","columnLeafs","leafs","data","generateData","children","state","current","pageSize","total","length","E_WebRoot_tablex_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","E_WebRoot_tablex_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","count","arguments","undefined","prefix","Array","fill","map","rowIndex","reduce","rowData","column","columnIndex","parentId","pageIndex","setState","_this$state","pageAttr","onPageChange","bind","onRefresh","_src_index__WEBPACK_IMPORTED_MODULE_9__","rowKey","editable","loading","editToolsConfig","position","tableId","selectMode","alwaysValidate","validateTrigger","dataControled","orderNumber","isAppend","pagination","React","Component","isMDXComponent"],"mappings":"2+BAaMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAE5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,qCADR,qCAGAL,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,wBADZ,0DAILP,OAAAE,EAAA,EAAAF,CAACQ,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,o2GAAs4GC,QAAS,CACh7GZ,MAAOa,KAAOA,KAAKb,MAAQA,EAC3Bc,eACAC,UACAC,UACAC,YACAC,WACCC,MAAO,CACRC,OAAQ,KACPf,QAAQ,cATX,SAAAgB,GAuBI,SAAAC,EAAYtB,GAAO,IAAAuB,EAAAtB,OAAAuB,EAAA,EAAAvB,CAAAY,KAAAS,GACjBC,EAAAtB,OAAAwB,EAAA,EAAAxB,CAAAY,KAAAZ,OAAAyB,EAAA,EAAAzB,CAAAqB,GAAAK,KAAAd,KAAMb,IACN,IAAM4B,EAAU,CAAC,CACfC,UAAW,WACXC,IAAK,WACLC,MAAO,SACPC,MAAO,IACPC,MAAO,OACPC,UAAW,SAACC,EAAOC,GACjB,OAAKD,EAOE,CACLE,OAAO,EACPC,QAAS,IARF,CACLD,OAAO,EACPC,QAAS,+BASfC,OAAQ,SAACJ,EAAOC,EAAKI,EAAOC,EAAUC,GACpC,OAAOzC,OAAAE,EAAA,EAAAF,CAAC0C,EAAA,EAAD,CAAOC,aAAcT,EAAOO,IAAKA,EAAKG,SAAU,SAAAC,GACrD,IAAIC,EAAWD,EAAEE,OAAOb,MACxBM,EAAS,CACPQ,WAAYF,KAEb1C,QAAQ,YAEZ,CACDwB,UAAW,KACXE,MAAO,SACPD,IAAK,YACLoB,SAAU,IACVlB,MAAO,IACPmB,MAAO,UACN,CACDtB,UAAW,YACXC,IAAK,YACLC,MAAO,SACPC,MAAO,IACPmB,MAAO,UACN,CACDtB,UAAW,MACXC,IAAK,WACLC,MAAO,MACPC,MAAO,IACPmB,MAAO,QACPC,OAAQ,WACN,OAAO,IAAIC,MAAOC,aAGhBC,EAActC,YAAQW,GAAS4B,MACjCC,EAAOlC,EAAKmC,aAAaH,EAAa,KArDzB,OAsDjBE,EAAK,GAAGE,SAAWpC,EAAKmC,aAAaH,EAAa,GAAI,iBACtDhC,EAAKqC,MAAQ,CACXH,KAAMA,EACN7B,QAASA,EACTiC,QAAS,EACTC,SAAU,GACVC,MAAON,EAAKO,QA5DGzC,EAvBvB,OAAAtB,OAAAgE,EAAA,EAAAhE,CAAAqB,EAAAD,GAAApB,OAAAiE,EAAA,EAAAjE,CAAAqB,EAAA,EAAAQ,IAAA,eAAAK,MAAA,SAWiBP,GAAqC,IAA5BuC,EAA4BC,UAAAJ,OAAA,QAAAK,IAAAD,UAAA,GAAAA,UAAA,GAApB,GAAIE,EAAgBF,UAAAJ,OAAA,QAAAK,IAAAD,UAAA,GAAAA,UAAA,GAAP,MACzC,OAAO,IAAIG,MAAMJ,GAAOK,KAAK,GAAGC,IAAI,SAACrC,EAAKsC,GACxC,OAAO9C,EAAQ+C,OAAO,SAACC,EAASC,EAAQC,GAEtC,OADAF,EAAQC,EAAOhD,WAAayC,EAAS,IAAMI,EAAW,UAAYI,EAC3DF,GACN,CACDtE,GAAIgE,EAASI,EACbK,SAAU,aAlBpB9E,OAAAiE,EAAA,EAAAjE,CAAAqB,EAAA,EAAAQ,IAAA,oBAAAK,MAAA,eAAAL,IAAA,eAAAK,MAAA,SAyFiB6C,EAAWlB,GACtBjD,KAAKoE,SAAS,CACZpB,QAASmB,EACTlB,eA5FR,CAAAhC,IAAA,YAAAK,MAAA,SAgGc6C,EAAWlB,GACnBjD,KAAKoE,SAAS,CACZpB,QAASmB,EACTlB,eAnGR,CAAAhC,IAAA,SAAAK,MAAA,WAuGa,IAAA+C,EAOHrE,KAAK+C,MALPC,EAFKqB,EAELrB,QACAC,EAHKoB,EAGLpB,SACAC,EAJKmB,EAILnB,MACAnC,EALKsD,EAKLtD,QACA6B,EANKyB,EAMLzB,KAEE0B,EAAW,CACbtB,UACAC,WACAC,QACAqB,aAAcvE,KAAKuE,aAAaC,KAAKxE,MACrCyE,UAAWzE,KAAKyE,UAAUD,KAAKxE,OAGjC,OAAOZ,OAAAE,EAAA,EAAAF,CAACsF,EAAA,EAAD,CAAOC,OAAO,KAAKC,UAAU,EAAMC,SAAS,EAAO9D,QAASA,EAAS+D,gBAAiB,CAC3FC,SAAU,UACTnC,KAAMA,EAAMoC,QAAQ,QAAQC,WAAW,WAAWC,gBAAgB,EAAMC,gBAAgB,WAAWC,eAAe,EAAMC,aAAa,EAAMC,UAAU,EAAMC,WAAYjB,EAAU9E,QAAQ,cAzHlMiB,EAAA,CAUiB+E,IAAMC,2LAwH3BzG,EAAW0G,gBAAiB","file":"static/js/examples-playground.b847d28d.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from \"docz\";\nimport Table,{ flatten } from \"../src/index\";\nimport {Input} from \"antd\";\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"change-the-source-code-to-preview\"\n    }}>{`Change the source code to preview`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import Table, { flatten, unflatten } from \"tablex\";\n`}</code></pre>\n    <Playground __position={0} __code={'class Demo extends React.Component {\\n    generateData(columns, count = 20, prefix = \\'Row\\') {\\n      return new Array(count).fill(0).map((row, rowIndex) => {\\n        return columns.reduce(\\n          (rowData, column, columnIndex) => {\\n            rowData[column.dataIndex] =\\n              prefix + \\' \\' + rowIndex + \\' - Col \\' + columnIndex\\n            return rowData\\n          },\\n          {\\n            id: prefix + rowIndex,\\n            parentId: null,\\n          },\\n        )\\n      })\\n    }\\n    constructor(props) {\\n      super(props)\\n      const columns = [\\n        {\\n          dataIndex: \\'column-1\\',\\n          key: \\'column-1\\',\\n          title: \\'number\\',\\n          width: 200,\\n          fixed: \\'left\\',\\n          validator: (value, row) => {\\n            if (!value) {\\n              return { valid: false, message: \\'请输入column-1\\' }\\n            }\\n            return { valid: true, message: \\'\\' }\\n          },\\n          editor: (value, row, index, onchange, ref) => {\\n            return (\\n              <Input\\n                defaultValue={value}\\n                ref={ref}\\n                onChange={e => {\\n                  let newValue = e.target.value\\n                  onchange({\\n                    \\'column-1\\': newValue,\\n                  })\\n                }}\\n              />\\n            )\\n          },\\n        },\\n        {\\n          dataIndex: \\'id\\',\\n          title: \\'nick-1\\',\\n          key: \\'column-21\\',\\n          maxWidth: 300,\\n          width: 150,\\n          align: \\'center\\',\\n        },\\n        {\\n          dataIndex: \\'column-31\\',\\n          key: \\'column-31\\',\\n          title: \\'nick-2\\',\\n          width: 150,\\n          align: \\'center\\',\\n        },\\n        {\\n          dataIndex: \\'age\\',\\n          key: \\'column-4\\',\\n          title: \\'age\\',\\n          width: 150,\\n          align: \\'right\\',\\n          render: () => {\\n            return new Date().getTime()\\n          },\\n        },\\n      ]\\n      const columnLeafs = flatten(columns).leafs\\n      let data = this.generateData(columnLeafs, 100)\\n      data[3].children = this.generateData(columnLeafs, 10, \\'row-children-\\')\\n\\n      this.state = {\\n        data: data,\\n        columns: columns,\\n        current: 1,\\n        pageSize: 40,\\n        total: data.length,\\n      }\\n    }\\n    componentDidMount() {}\\n    onPageChange(pageIndex, pageSize) {\\n      this.setState({\\n        current: pageIndex,\\n        pageSize,\\n      })\\n    }\\n    onRefresh(pageIndex, pageSize) {\\n      this.setState({\\n        current: pageIndex,\\n        pageSize,\\n      })\\n    }\\n    render() {\\n      let { current, pageSize, total, columns, data } = this.state\\n      let pageAttr = {\\n        current,\\n        pageSize,\\n        total,\\n        onPageChange: this.onPageChange.bind(this),\\n        onRefresh: this.onRefresh.bind(this),\\n      }\\n      //pageAttr = false;\\n      return (\\n        <Table\\n          rowKey=\\\"id\\\"\\n          editable={true}\\n          loading={false}\\n          columns={columns}\\n          editToolsConfig={{\\n            position: \\'bottom\\',\\n          }}\\n          data={data}\\n          tableId=\\\"table\\\"\\n          selectMode=\\\"multiple\\\"\\n          alwaysValidate={true}\\n          validateTrigger=\\\"onChange\\\"\\n          dataControled={true}\\n          orderNumber={true}\\n          isAppend={true}\\n          pagination={pageAttr}\\n        />\\n      )\\n    }\\n  }'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Table,\n      flatten,\n      Input\n    }} style={{\n      height: 600\n    }} mdxType=\"Playground\">\n {class Demo extends React.Component {\n        generateData(columns, count = 20, prefix = \"Row\") {\n          return new Array(count).fill(0).map((row, rowIndex) => {\n            return columns.reduce((rowData, column, columnIndex) => {\n              rowData[column.dataIndex] = prefix + \" \" + rowIndex + \" - Col \" + columnIndex;\n              return rowData;\n            }, {\n              id: prefix + rowIndex,\n              parentId: null\n            });\n          });\n        }\n\n        constructor(props) {\n          super(props);\n          const columns = [{\n            dataIndex: \"column-1\",\n            key: \"column-1\",\n            title: \"number\",\n            width: 200,\n            fixed: \"left\",\n            validator: (value, row) => {\n              if (!value) {\n                return {\n                  valid: false,\n                  message: \"请输入column-1\"\n                };\n              }\n\n              return {\n                valid: true,\n                message: \"\"\n              };\n            },\n            editor: (value, row, index, onchange, ref) => {\n              return <Input defaultValue={value} ref={ref} onChange={e => {\n                let newValue = e.target.value;\n                onchange({\n                  \"column-1\": newValue\n                });\n              }} mdxType=\"Input\" />;\n            }\n          }, {\n            dataIndex: \"id\",\n            title: \"nick-1\",\n            key: \"column-21\",\n            maxWidth: 300,\n            width: 150,\n            align: \"center\"\n          }, {\n            dataIndex: \"column-31\",\n            key: \"column-31\",\n            title: \"nick-2\",\n            width: 150,\n            align: \"center\"\n          }, {\n            dataIndex: \"age\",\n            key: \"column-4\",\n            title: \"age\",\n            width: 150,\n            align: \"right\",\n            render: () => {\n              return new Date().getTime();\n            }\n          }];\n          const columnLeafs = flatten(columns).leafs;\n          let data = this.generateData(columnLeafs, 100);\n          data[3].children = this.generateData(columnLeafs, 10, \"row-children-\");\n          this.state = {\n            data: data,\n            columns: columns,\n            current: 1,\n            pageSize: 40,\n            total: data.length\n          };\n        }\n\n        componentDidMount() {}\n\n        onPageChange(pageIndex, pageSize) {\n          this.setState({\n            current: pageIndex,\n            pageSize\n          });\n        }\n\n        onRefresh(pageIndex, pageSize) {\n          this.setState({\n            current: pageIndex,\n            pageSize\n          });\n        }\n\n        render() {\n          let {\n            current,\n            pageSize,\n            total,\n            columns,\n            data\n          } = this.state;\n          let pageAttr = {\n            current,\n            pageSize,\n            total,\n            onPageChange: this.onPageChange.bind(this),\n            onRefresh: this.onRefresh.bind(this)\n          }; //pageAttr = false;\n\n          return <Table rowKey=\"id\" editable={true} loading={false} columns={columns} editToolsConfig={{\n            position: \"bottom\"\n          }} data={data} tableId=\"table\" selectMode=\"multiple\" alwaysValidate={true} validateTrigger=\"onChange\" dataControled={true} orderNumber={true} isAppend={true} pagination={pageAttr} mdxType=\"Table\" />;\n        }\n\n      }}\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}