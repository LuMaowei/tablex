(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"./doc/Basic/Simple.mdx":function(n,e,t){"use strict";t.r(e),t.d(e,"default",(function(){return I}));var a=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js"),o=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js"),l=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js"),r=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js"),d=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js"),c=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),u=t("./node_modules/react/index.js"),i=t.n(u),m=t("./node_modules/@mdx-js/react/dist/index.es.js"),s=t("./node_modules/docz/dist/index.esm.js"),h=t("../tablex/lib/index.js"),p=t.n(h),x=t("./node_modules/antd/es/input/index.js"),w={},g="wrapper";function I(n){var e=n.components,t=Object(c.a)(n,["components"]);return Object(m.b)(g,Object.assign({},w,t,{components:e,mdxType:"MDXLayout"}),Object(m.b)("h1",{id:"\u7528\u6cd5\u793a\u4f8b"},"\u7528\u6cd5\u793a\u4f8b"),Object(m.b)("pre",null,Object(m.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),'import Table, { flatten, unflatten } from "tablex";\n')),Object(m.b)("h2",{id:"\u7b80\u5355\u7528\u4f8b"},"\u7b80\u5355\u7528\u4f8b"),Object(m.b)(s.c,{__position:0,__code:"class Demo extends React.Component {\n    generateData(columns, count = 20, prefix = 'Row') {\n      return new Array(count).fill(0).map((row, rowIndex) => {\n        return columns.reduce(\n          (rowData, column, columnIndex) => {\n            if (column.dataIndex !== 'id') {\n              rowData[column.dataIndex] = Math.floor(Math.random() * 100 + 1)\n            } else {\n              rowData[column.dataIndex] =\n                prefix + ' ' + rowIndex + ' - Col ' + columnIndex\n            }\n            return rowData\n          },\n          {\n            id: prefix + rowIndex,\n            parentId: null,\n          },\n        )\n      })\n    }\n    constructor(props) {\n      super(props)\n      const columns = [\n        {\n          dataIndex: 'id',\n          title: 'id',\n          key: 'id',\n          width: 150,\n          align: 'center',\n        },\n        {\n          dataIndex: 'column-1',\n          key: 'column-1',\n          title: 'column-1',\n          width: 100,\n        },\n\n        {\n          dataIndex: 'column-2',\n          key: 'column-2',\n          title: 'column-2',\n          width: 150,\n          align: 'center',\n        },\n\n        {\n          dataIndex: 'column-3',\n          key: 'column-3',\n          title: 'column-3',\n          align: 'right',\n        },\n        {\n          dataIndex: 'column-4',\n          key: 'column-4',\n          title: 'column-4',\n          width: 100,\n          align: 'center',\n        },\n      ]\n\n      let data = this.generateData(columns, 20)\n\n      this.state = {\n        data: data,\n        columns: columns,\n      }\n    }\n    render() {\n      let { columns, data } = this.state\n      return <Table rowKey=\"id\" columns={columns} data={data} />\n    }\n  }",__scope:{props:this?this.props:t,Playground:s.c,Props:s.d,Table:p.a,flatten:h.flatten,Input:x.a},style:{height:400},mdxType:"Playground"},function(n){function e(n){var t;Object(a.a)(this,e);var r=[{dataIndex:"id",title:"id",key:"id",width:150,align:"center"},{dataIndex:"column-1",key:"column-1",title:"column-1",width:100},{dataIndex:"column-2",key:"column-2",title:"column-2",width:150,align:"center"},{dataIndex:"column-3",key:"column-3",title:"column-3",align:"right"},{dataIndex:"column-4",key:"column-4",title:"column-4",width:100,align:"center"}],d=(t=Object(o.a)(this,Object(l.a)(e).call(this,n))).generateData(r,20);return t.state={data:d,columns:r},t}return Object(d.a)(e,n),Object(r.a)(e,[{key:"generateData",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Row";return new Array(e).fill(0).map((function(e,a){return n.reduce((function(n,e,o){return"id"!==e.dataIndex?n[e.dataIndex]=Math.floor(100*Math.random()+1):n[e.dataIndex]=t+" "+a+" - Col "+o,n}),{id:t+a,parentId:null})}))}}]),Object(r.a)(e,[{key:"render",value:function(){var n=this.state,e=n.columns,t=n.data;return Object(m.b)(p.a,{rowKey:"id",columns:e,data:t,mdxType:"Table"})}}]),e}(i.a.Component)),Object(m.b)("h2",{id:"\u6dfb\u52a0\u5e8f\u53f7"},"\u6dfb\u52a0\u5e8f\u53f7"),Object(m.b)(s.c,{__position:1,__code:"class Demo extends React.Component {\n    generateData(columns, count = 20, prefix = 'Row') {\n      return new Array(count).fill(0).map((row, rowIndex) => {\n        return columns.reduce(\n          (rowData, column, columnIndex) => {\n            if (column.dataIndex !== 'id') {\n              rowData[column.dataIndex] = Math.floor(Math.random() * 100 + 1)\n            } else {\n              rowData[column.dataIndex] =\n                prefix + ' ' + rowIndex + ' - Col ' + columnIndex\n            }\n            return rowData\n          },\n          {\n            id: prefix + rowIndex,\n            parentId: null,\n          },\n        )\n      })\n    }\n    constructor(props) {\n      super(props)\n      const columns = [\n        {\n          dataIndex: 'id',\n          title: 'id',\n          key: 'id',\n          width: 150,\n          align: 'center',\n        },\n        {\n          dataIndex: 'column-1',\n          key: 'column-1',\n          title: 'column-1',\n          width: 100,\n        },\n\n        {\n          dataIndex: 'column-2',\n          key: 'column-2',\n          title: 'column-2',\n          width: 150,\n          align: 'center',\n        },\n\n        {\n          dataIndex: 'column-3',\n          key: 'column-3',\n          title: 'column-3',\n          align: 'right',\n        },\n        {\n          dataIndex: 'column-4',\n          key: 'column-4',\n          title: 'column-4',\n          width: 100,\n          align: 'center',\n        },\n      ]\n\n      let data = this.generateData(columns, 20)\n\n      this.state = {\n        data: data,\n        columns: columns,\n      }\n    }\n    render() {\n      let { columns, data } = this.state\n      return (\n        <Table rowKey=\"id\" columns={columns} data={data} orderNumber={true} />\n      )\n    }\n  }",__scope:{props:this?this.props:t,Playground:s.c,Props:s.d,Table:p.a,flatten:h.flatten,Input:x.a},style:{height:400},mdxType:"Playground"},function(n){function e(n){var t;Object(a.a)(this,e);var r=[{dataIndex:"id",title:"id",key:"id",width:150,align:"center"},{dataIndex:"column-1",key:"column-1",title:"column-1",width:100},{dataIndex:"column-2",key:"column-2",title:"column-2",width:150,align:"center"},{dataIndex:"column-3",key:"column-3",title:"column-3",align:"right"},{dataIndex:"column-4",key:"column-4",title:"column-4",width:100,align:"center"}],d=(t=Object(o.a)(this,Object(l.a)(e).call(this,n))).generateData(r,20);return t.state={data:d,columns:r},t}return Object(d.a)(e,n),Object(r.a)(e,[{key:"generateData",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Row";return new Array(e).fill(0).map((function(e,a){return n.reduce((function(n,e,o){return"id"!==e.dataIndex?n[e.dataIndex]=Math.floor(100*Math.random()+1):n[e.dataIndex]=t+" "+a+" - Col "+o,n}),{id:t+a,parentId:null})}))}}]),Object(r.a)(e,[{key:"render",value:function(){var n=this.state,e=n.columns,t=n.data;return Object(m.b)(p.a,{rowKey:"id",columns:e,data:t,orderNumber:!0,mdxType:"Table"})}}]),e}(i.a.Component)),Object(m.b)("h2",{id:"\u81ea\u5b9a\u4e49\u5e8f\u53f7\u5217"},"\u81ea\u5b9a\u4e49\u5e8f\u53f7\u5217"),Object(m.b)(s.c,{__position:2,__code:"class Demo extends React.Component {\n    generateData(columns, count = 20, prefix = 'Row') {\n      return new Array(count).fill(0).map((row, rowIndex) => {\n        return columns.reduce(\n          (rowData, column, columnIndex) => {\n            rowData[column.dataIndex] =\n              prefix + ' ' + rowIndex + ' - Col ' + columnIndex\n            return rowData\n          },\n          {\n            id: prefix + rowIndex,\n            parentId: null,\n          },\n        )\n      })\n    }\n    constructor(props) {\n      super(props)\n      const columns = [\n        {\n          dataIndex: 'column-1',\n          key: 'column-1',\n          title: 'number',\n          width: 200,\n        },\n        {\n          dataIndex: 'id',\n          title: 'nick-1',\n          key: 'column-21',\n          align: 'center',\n          width: 200,\n        },\n        {\n          dataIndex: 'column-31',\n          key: 'column-31',\n          title: 'nick-2',\n          width: 150,\n          align: 'center',\n        },\n\n        {\n          dataIndex: 'age',\n          key: 'column-4',\n          title: 'age',\n          align: 'right',\n          width: 200,\n        },\n      ]\n\n      let data = this.generateData(columns, 20)\n\n      data.forEach(d => {\n        d.children = this.generateData(columns, 5, 'children-' + d.id)\n      })\n\n      this.state = {\n        data: data,\n        columns: columns,\n      }\n    }\n    render() {\n      let { columns, data } = this.state\n      return (\n        <Table\n          rowKey=\"id\"\n          columns={columns}\n          data={data}\n          selectMode=\"multiple\"\n          orderNumber={{\n            width: 100,\n            title: 'No.',\n            align: 'left',\n            resizable: true,\n            fixed: 'left',\n            render: function(value, row, index, extra) {\n              let { orders = [] } = extra\n              return orders.join('-')\n            },\n          }}\n        />\n      )\n    }\n  }",__scope:{props:this?this.props:t,Playground:s.c,Props:s.d,Table:p.a,flatten:h.flatten,Input:x.a},style:{height:600},mdxType:"Playground"},function(n){function e(n){var t;Object(a.a)(this,e),t=Object(o.a)(this,Object(l.a)(e).call(this,n));var r=[{dataIndex:"column-1",key:"column-1",title:"number",width:200},{dataIndex:"id",title:"nick-1",key:"column-21",align:"center",width:200},{dataIndex:"column-31",key:"column-31",title:"nick-2",width:150,align:"center"},{dataIndex:"age",key:"column-4",title:"age",align:"right",width:200}],d=t.generateData(r,20);return d.forEach((function(n){n.children=t.generateData(r,5,"children-"+n.id)})),t.state={data:d,columns:r},t}return Object(d.a)(e,n),Object(r.a)(e,[{key:"generateData",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Row";return new Array(e).fill(0).map((function(e,a){return n.reduce((function(n,e,o){return n[e.dataIndex]=t+" "+a+" - Col "+o,n}),{id:t+a,parentId:null})}))}}]),Object(r.a)(e,[{key:"render",value:function(){var n=this.state,e=n.columns,t=n.data;return Object(m.b)(p.a,{rowKey:"id",columns:e,data:t,selectMode:"multiple",orderNumber:{width:100,title:"No.",align:"left",resizable:!0,fixed:"left",render:function(n,e,t,a){var o=a.orders;return(void 0===o?[]:o).join("-")}},mdxType:"Table"})}}]),e}(i.a.Component)),Object(m.b)("h2",{id:"\u884c\u9ad8\u8bbe\u7f6e"},"\u884c\u9ad8\u8bbe\u7f6e"),Object(m.b)(s.c,{__position:3,__code:"class Demo extends React.Component {\n    generateData(columns, count = 20, prefix = 'Row') {\n      return new Array(count).fill(0).map((row, rowIndex) => {\n        return columns.reduce(\n          (rowData, column, columnIndex) => {\n            if (column.dataIndex !== 'id') {\n              rowData[column.dataIndex] = Math.floor(Math.random() * 100 + 1)\n            } else {\n              rowData[column.dataIndex] =\n                prefix + ' ' + rowIndex + ' - Col ' + columnIndex\n            }\n            return rowData\n          },\n          {\n            id: prefix + rowIndex,\n            parentId: null,\n          },\n        )\n      })\n    }\n    constructor(props) {\n      super(props)\n      const columns = [\n        {\n          dataIndex: 'id',\n          title: 'id',\n          key: 'id',\n          width: 150,\n          align: 'center',\n        },\n        {\n          dataIndex: 'column-1',\n          key: 'column-1',\n          title: 'column-1',\n          width: 100,\n        },\n\n        {\n          dataIndex: 'column-2',\n          key: 'column-2',\n          title: 'column-2',\n          width: 150,\n          align: 'center',\n        },\n\n        {\n          dataIndex: 'column-3',\n          key: 'column-3',\n          title: 'column-3',\n          align: 'right',\n        },\n        {\n          dataIndex: 'column-4',\n          key: 'column-4',\n          title: 'column-4',\n          width: 100,\n          align: 'center',\n        },\n      ]\n\n      let data = this.generateData(columns, 20)\n\n      this.state = {\n        data: data,\n        columns: columns,\n      }\n    }\n    render() {\n      let { columns, data } = this.state\n      return (\n        <Table\n          rowKey=\"id\"\n          columns={columns}\n          data={data}\n          rowHeight={(row, index) => {\n            if (index % 2 === 0) {\n              return 80\n            }\n            return 30\n          }}\n        />\n      )\n    }\n  }",__scope:{props:this?this.props:t,Playground:s.c,Props:s.d,Table:p.a,flatten:h.flatten,Input:x.a},style:{height:400},mdxType:"Playground"},function(n){function e(n){var t;Object(a.a)(this,e);var r=[{dataIndex:"id",title:"id",key:"id",width:150,align:"center"},{dataIndex:"column-1",key:"column-1",title:"column-1",width:100},{dataIndex:"column-2",key:"column-2",title:"column-2",width:150,align:"center"},{dataIndex:"column-3",key:"column-3",title:"column-3",align:"right"},{dataIndex:"column-4",key:"column-4",title:"column-4",width:100,align:"center"}],d=(t=Object(o.a)(this,Object(l.a)(e).call(this,n))).generateData(r,20);return t.state={data:d,columns:r},t}return Object(d.a)(e,n),Object(r.a)(e,[{key:"generateData",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Row";return new Array(e).fill(0).map((function(e,a){return n.reduce((function(n,e,o){return"id"!==e.dataIndex?n[e.dataIndex]=Math.floor(100*Math.random()+1):n[e.dataIndex]=t+" "+a+" - Col "+o,n}),{id:t+a,parentId:null})}))}}]),Object(r.a)(e,[{key:"render",value:function(){var n=this.state,e=n.columns,t=n.data;return Object(m.b)(p.a,{rowKey:"id",columns:e,data:t,rowHeight:function(n,e){return e%2===0?80:30},mdxType:"Table"})}}]),e}(i.a.Component)),Object(m.b)("h2",{id:"\u5206\u9875"},"\u5206\u9875"),Object(m.b)(s.c,{__position:4,__code:"class Demo extends React.Component {\n    generateData(columns, count = 20, prefix = 'Row') {\n      return new Array(count).fill(0).map((row, rowIndex) => {\n        return columns.reduce(\n          (rowData, column, columnIndex) => {\n            if (column.dataIndex !== 'id') {\n              rowData[column.dataIndex] = Math.floor(Math.random() * 100 + 1)\n            } else {\n              rowData[column.dataIndex] =\n                prefix + ' ' + rowIndex + ' - Col ' + columnIndex\n            }\n            return rowData\n          },\n          {\n            id: prefix + rowIndex,\n            parentId: null,\n          },\n        )\n      })\n    }\n    constructor(props) {\n      super(props)\n      const columns = [\n        {\n          dataIndex: 'id',\n          title: 'id',\n          key: 'id',\n          width: 150,\n          align: 'center',\n        },\n        {\n          dataIndex: 'column-1',\n          key: 'column-1',\n          title: 'column-1',\n          width: 100,\n        },\n\n        {\n          dataIndex: 'column-2',\n          key: 'column-2',\n          title: 'column-2',\n          width: 150,\n          align: 'center',\n        },\n\n        {\n          dataIndex: 'column-3',\n          key: 'column-3',\n          title: 'column-3',\n          align: 'right',\n        },\n        {\n          dataIndex: 'column-4',\n          key: 'column-4',\n          title: 'column-4',\n          width: 100,\n          align: 'center',\n        },\n      ]\n\n      let data = this.generateData(columns, 50)\n\n      this.state = {\n        data: data,\n        columns: columns,\n        current: 1,\n        pageSize: 10,\n        total: data.length,\n      }\n    }\n    onPageChange(pageIndex, pageSize) {\n      this.setState({\n        current: pageIndex,\n        pageSize,\n      })\n    }\n    onRefresh(pageIndex, pageSize) {\n      this.setState({\n        current: pageIndex,\n        pageSize,\n      })\n    }\n    render() {\n      let { columns, data, current, pageSize, total } = this.state\n      return (\n        <Table\n          rowKey=\"id\"\n          columns={columns}\n          selectMode=\"multiple\"\n          checkStrictly={true}\n          onSelectChange={function(a, b, c, d) {\n            console.log('onSelectChange rows2:', a, b, c)\n            return true\n          }}\n          data={data}\n          pagination={{\n            current,\n            pageSize,\n            total,\n            onPageChange: this.onPageChange.bind(this),\n            onRefresh: this.onRefresh.bind(this),\n          }}\n        />\n      )\n    }\n  }",__scope:{props:this?this.props:t,Playground:s.c,Props:s.d,Table:p.a,flatten:h.flatten,Input:x.a},style:{height:400},mdxType:"Playground"},function(n){function e(n){var t;Object(a.a)(this,e);var r=[{dataIndex:"id",title:"id",key:"id",width:150,align:"center"},{dataIndex:"column-1",key:"column-1",title:"column-1",width:100},{dataIndex:"column-2",key:"column-2",title:"column-2",width:150,align:"center"},{dataIndex:"column-3",key:"column-3",title:"column-3",align:"right"},{dataIndex:"column-4",key:"column-4",title:"column-4",width:100,align:"center"}],d=(t=Object(o.a)(this,Object(l.a)(e).call(this,n))).generateData(r,50);return t.state={data:d,columns:r,current:1,pageSize:10,total:d.length},t}return Object(d.a)(e,n),Object(r.a)(e,[{key:"generateData",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Row";return new Array(e).fill(0).map((function(e,a){return n.reduce((function(n,e,o){return"id"!==e.dataIndex?n[e.dataIndex]=Math.floor(100*Math.random()+1):n[e.dataIndex]=t+" "+a+" - Col "+o,n}),{id:t+a,parentId:null})}))}}]),Object(r.a)(e,[{key:"onPageChange",value:function(n,e){this.setState({current:n,pageSize:e})}},{key:"onRefresh",value:function(n,e){this.setState({current:n,pageSize:e})}},{key:"render",value:function(){var n=this.state,e=n.columns,t=n.data,a=n.current,o=n.pageSize,l=n.total;return Object(m.b)(p.a,{rowKey:"id",columns:e,selectMode:"multiple",checkStrictly:!0,onSelectChange:function(n,e,t,a){return console.log("onSelectChange rows2:",n,e,t),!0},data:t,pagination:{current:a,pageSize:o,total:l,onPageChange:this.onPageChange.bind(this),onRefresh:this.onRefresh.bind(this)},mdxType:"Table"})}}]),e}(i.a.Component)),Object(m.b)("h2",{id:"\u81ea\u5b9a\u4e49\u8868\u5934\u6807\u9898"},"\u81ea\u5b9a\u4e49\u8868\u5934\u6807\u9898"),Object(m.b)(s.c,{__position:5,__code:"class Demo extends React.Component {\n    generateData(columns, count = 20, prefix = 'Row') {\n      return new Array(count).fill(0).map((row, rowIndex) => {\n        return columns.reduce(\n          (rowData, column, columnIndex) => {\n            if (column.dataIndex !== 'id') {\n              rowData[column.dataIndex] = Math.floor(Math.random() * 100 + 1)\n            } else {\n              rowData[column.dataIndex] =\n                prefix + ' ' + rowIndex + ' - Col ' + columnIndex\n            }\n            return rowData\n          },\n          {\n            id: prefix + rowIndex,\n            parentId: null,\n          },\n        )\n      })\n    }\n    constructor(props) {\n      super(props)\n      const columns = [\n        {\n          dataIndex: 'id',\n          title: 'id',\n          key: 'id',\n          width: 150,\n          align: 'center',\n          titleRender: function() {\n            return <span style={{ color: '#ccc' }}>titleRender</span>\n          },\n        },\n        {\n          dataIndex: 'column-5',\n          key: 'column-5',\n          title: 'column-5',\n          width: 100,\n          align: 'center',\n        },\n        {\n          dataIndex: 'column-6',\n          key: 'column-6',\n          title: 'column-6',\n          align: 'center',\n        },\n      ]\n\n      let data = this.generateData(columns, 20)\n\n      this.state = {\n        data: data,\n        columns: columns,\n      }\n    }\n    render() {\n      let { columns, data } = this.state\n      return (\n        <Table rowKey=\"id\" columns={columns} data={data} orderNumber={true} />\n      )\n    }\n  }",__scope:{props:this?this.props:t,Playground:s.c,Props:s.d,Table:p.a,flatten:h.flatten,Input:x.a},style:{height:400},mdxType:"Playground"},function(n){function e(n){var t;Object(a.a)(this,e);var r=[{dataIndex:"id",title:"id",key:"id",width:150,align:"center",titleRender:function(){return Object(m.b)("span",{style:{color:"#ccc"}},"titleRender")}},{dataIndex:"column-5",key:"column-5",title:"column-5",width:100,align:"center"},{dataIndex:"column-6",key:"column-6",title:"column-6",align:"center"}],d=(t=Object(o.a)(this,Object(l.a)(e).call(this,n))).generateData(r,20);return t.state={data:d,columns:r},t}return Object(d.a)(e,n),Object(r.a)(e,[{key:"generateData",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Row";return new Array(e).fill(0).map((function(e,a){return n.reduce((function(n,e,o){return"id"!==e.dataIndex?n[e.dataIndex]=Math.floor(100*Math.random()+1):n[e.dataIndex]=t+" "+a+" - Col "+o,n}),{id:t+a,parentId:null})}))}}]),Object(r.a)(e,[{key:"render",value:function(){var n=this.state,e=n.columns,t=n.data;return Object(m.b)(p.a,{rowKey:"id",columns:e,data:t,orderNumber:!0,mdxType:"Table"})}}]),e}(i.a.Component)),Object(m.b)("h2",{id:"\u591a\u8868\u5934"},"\u591a\u8868\u5934"),Object(m.b)(s.c,{__position:6,__code:"class Demo extends React.Component {\n    generateData(columns, count = 20, prefix = 'Row') {\n      return new Array(count).fill(0).map((row, rowIndex) => {\n        return columns.reduce(\n          (rowData, column, columnIndex) => {\n            if (column.dataIndex !== 'id') {\n              rowData[column.dataIndex] = Math.floor(Math.random() * 100 + 1)\n            } else {\n              rowData[column.dataIndex] =\n                prefix + ' ' + rowIndex + ' - Col ' + columnIndex\n            }\n            return rowData\n          },\n          {\n            id: prefix + rowIndex,\n            parentId: null,\n          },\n        )\n      })\n    }\n    constructor(props) {\n      super(props)\n      const columns = [\n        {\n          dataIndex: 'id',\n          title: 'id',\n          key: 'id',\n          width: 150,\n          align: 'center',\n          onHeaderCell: function() {\n            console.log('onHeadCell')\n            return {\n              style: {\n                backgroundColor: '#eaeaea',\n              },\n              onClick: () => {\n                alert('clicked the header cell id')\n              },\n            }\n          },\n        },\n        {\n          key: 'column-group-1',\n          title: 'column group',\n          onHeaderCell: function() {\n            return {\n              style: {\n                backgroundColor: '#eaeaea',\n              },\n              onClick: () => {\n                alert('clicked the header cell column-group-1')\n              },\n            }\n          },\n          children: [\n            {\n              dataIndex: 'column-1',\n              key: 'column-1',\n              title: 'column-1',\n              width: 100,\n            },\n            {\n              dataIndex: 'column-2',\n              key: 'column-2',\n              title: 'column-2',\n              width: 100,\n              children: [\n                {\n                  dataIndex: 'column-3',\n                  key: 'column-3',\n                  title: 'column-3',\n                  width: 100,\n                },\n                {\n                  dataIndex: 'column-4',\n                  key: 'column-4',\n                  title: 'column-4',\n                  width: 100,\n                  onHeaderCell: function() {\n                    return {\n                      style: {\n                        backgroundColor: '#eaeaea',\n                      },\n                      onClick: () => {\n                        alert('clicked the header cell column-4')\n                      },\n                    }\n                  },\n                },\n              ],\n            },\n          ],\n        },\n\n        {\n          dataIndex: 'column-5',\n          key: 'column-5',\n          title: 'column-5',\n          width: 100,\n          align: 'center',\n        },\n        {\n          dataIndex: 'column-6',\n          key: 'column-6',\n          title: 'column-6',\n          align: 'center',\n        },\n      ]\n\n      let data = this.generateData(columns, 20)\n\n      this.state = {\n        data: data,\n        columns: columns,\n      }\n    }\n    render() {\n      let { columns, data } = this.state\n      return (\n        <Table rowKey=\"id\" columns={columns} data={data} orderNumber={true} />\n      )\n    }\n  }",__scope:{props:this?this.props:t,Playground:s.c,Props:s.d,Table:p.a,flatten:h.flatten,Input:x.a},style:{height:400},mdxType:"Playground"},function(n){function e(n){var t;Object(a.a)(this,e);var r=[{dataIndex:"id",title:"id",key:"id",width:150,align:"center",onHeaderCell:function(){return console.log("onHeadCell"),{style:{backgroundColor:"#eaeaea"},onClick:function(){alert("clicked the header cell id")}}}},{key:"column-group-1",title:"column group",onHeaderCell:function(){return{style:{backgroundColor:"#eaeaea"},onClick:function(){alert("clicked the header cell column-group-1")}}},children:[{dataIndex:"column-1",key:"column-1",title:"column-1",width:100},{dataIndex:"column-2",key:"column-2",title:"column-2",width:100,children:[{dataIndex:"column-3",key:"column-3",title:"column-3",width:100},{dataIndex:"column-4",key:"column-4",title:"column-4",width:100,onHeaderCell:function(){return{style:{backgroundColor:"#eaeaea"},onClick:function(){alert("clicked the header cell column-4")}}}}]}]},{dataIndex:"column-5",key:"column-5",title:"column-5",width:100,align:"center"},{dataIndex:"column-6",key:"column-6",title:"column-6",align:"center"}],d=(t=Object(o.a)(this,Object(l.a)(e).call(this,n))).generateData(r,20);return t.state={data:d,columns:r},t}return Object(d.a)(e,n),Object(r.a)(e,[{key:"generateData",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Row";return new Array(e).fill(0).map((function(e,a){return n.reduce((function(n,e,o){return"id"!==e.dataIndex?n[e.dataIndex]=Math.floor(100*Math.random()+1):n[e.dataIndex]=t+" "+a+" - Col "+o,n}),{id:t+a,parentId:null})}))}}]),Object(r.a)(e,[{key:"render",value:function(){var n=this.state,e=n.columns,t=n.data;return Object(m.b)(p.a,{rowKey:"id",columns:e,data:t,orderNumber:!0,mdxType:"Table"})}}]),e}(i.a.Component)),Object(m.b)("h2",{id:"\u591a\u8868\u5934\u8bbe\u7f6e\u8868\u5934\u9ad8\u5ea6"},"\u591a\u8868\u5934\u8bbe\u7f6e\u8868\u5934\u9ad8\u5ea6"),Object(m.b)(s.c,{__position:7,__code:"class Demo extends React.Component {\n    generateData(columns, count = 20, prefix = 'Row') {\n      return new Array(count).fill(0).map((row, rowIndex) => {\n        return columns.reduce(\n          (rowData, column, columnIndex) => {\n            if (column.dataIndex !== 'id') {\n              rowData[column.dataIndex] = Math.floor(Math.random() * 100 + 1)\n            } else {\n              rowData[column.dataIndex] =\n                prefix + ' ' + rowIndex + ' - Col ' + columnIndex\n            }\n            return rowData\n          },\n          {\n            id: prefix + rowIndex,\n            parentId: null,\n          },\n        )\n      })\n    }\n    constructor(props) {\n      super(props)\n      const columns = [\n        {\n          dataIndex: 'id',\n          title: 'id',\n          key: 'id',\n          width: 150,\n          align: 'center',\n        },\n        {\n          key: 'column-group-1',\n          title: 'column group',\n          children: [\n            {\n              dataIndex: 'column-1',\n              key: 'column-1',\n              title: 'column-1',\n              width: 100,\n            },\n            {\n              dataIndex: 'column-2',\n              key: 'column-2',\n              title: 'column-2',\n              width: 100,\n              children: [\n                {\n                  dataIndex: 'column-3',\n                  key: 'column-3',\n                  title: 'column-3',\n                  width: 100,\n                },\n                {\n                  dataIndex: 'column-4',\n                  key: 'column-4',\n                  title: 'column-4',\n                  width: 100,\n                },\n              ],\n            },\n          ],\n        },\n\n        {\n          dataIndex: 'column-5',\n          key: 'column-5',\n          title: 'column-5',\n          width: 100,\n          align: 'center',\n        },\n        {\n          dataIndex: 'column-6',\n          key: 'column-6',\n          title: 'column-6',\n          align: 'center',\n        },\n      ]\n\n      let data = this.generateData(columns, 20)\n\n      this.state = {\n        data: data,\n        columns: columns,\n      }\n    }\n    render() {\n      let { columns, data } = this.state\n      return (\n        <Table\n          rowKey=\"id\"\n          columns={columns}\n          data={data}\n          orderNumber={true}\n          headerRowHeight={[30, 50, 70]}\n        />\n      )\n    }\n  }",__scope:{props:this?this.props:t,Playground:s.c,Props:s.d,Table:p.a,flatten:h.flatten,Input:x.a},style:{height:400},mdxType:"Playground"},function(n){function e(n){var t;Object(a.a)(this,e);var r=[{dataIndex:"id",title:"id",key:"id",width:150,align:"center"},{key:"column-group-1",title:"column group",children:[{dataIndex:"column-1",key:"column-1",title:"column-1",width:100},{dataIndex:"column-2",key:"column-2",title:"column-2",width:100,children:[{dataIndex:"column-3",key:"column-3",title:"column-3",width:100},{dataIndex:"column-4",key:"column-4",title:"column-4",width:100}]}]},{dataIndex:"column-5",key:"column-5",title:"column-5",width:100,align:"center"},{dataIndex:"column-6",key:"column-6",title:"column-6",align:"center"}],d=(t=Object(o.a)(this,Object(l.a)(e).call(this,n))).generateData(r,20);return t.state={data:d,columns:r},t}return Object(d.a)(e,n),Object(r.a)(e,[{key:"generateData",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Row";return new Array(e).fill(0).map((function(e,a){return n.reduce((function(n,e,o){return"id"!==e.dataIndex?n[e.dataIndex]=Math.floor(100*Math.random()+1):n[e.dataIndex]=t+" "+a+" - Col "+o,n}),{id:t+a,parentId:null})}))}}]),Object(r.a)(e,[{key:"render",value:function(){var n=this.state,e=n.columns,t=n.data;return Object(m.b)(p.a,{rowKey:"id",columns:e,data:t,orderNumber:!0,headerRowHeight:[30,50,70],mdxType:"Table"})}}]),e}(i.a.Component)),Object(m.b)("h2",{id:"\u9690\u85cf\u8868\u5934"},"\u9690\u85cf\u8868\u5934"),Object(m.b)(s.c,{__position:8,__code:"class Demo extends React.Component {\n    generateData(columns, count = 20, prefix = 'Row') {\n      return new Array(count).fill(0).map((row, rowIndex) => {\n        return columns.reduce(\n          (rowData, column, columnIndex) => {\n            if (column.dataIndex !== 'id') {\n              rowData[column.dataIndex] = Math.floor(Math.random() * 100 + 1)\n            } else {\n              rowData[column.dataIndex] =\n                prefix + ' ' + rowIndex + ' - Col ' + columnIndex\n            }\n            return rowData\n          },\n          {\n            id: prefix + rowIndex,\n            parentId: null,\n          },\n        )\n      })\n    }\n    constructor(props) {\n      super(props)\n      const columns = [\n        {\n          dataIndex: 'id',\n          title: 'id',\n          key: 'id',\n          width: 150,\n          align: 'center',\n        },\n\n        {\n          dataIndex: 'column-5',\n          key: 'column-5',\n          title: 'column-5',\n          width: 100,\n          align: 'center',\n        },\n        {\n          dataIndex: 'column-6',\n          key: 'column-6',\n          title: 'column-6',\n          align: 'center',\n        },\n      ]\n\n      let data = this.generateData(columns, 20)\n\n      this.state = {\n        data: data,\n        columns: columns,\n      }\n    }\n    render() {\n      let { columns, data } = this.state\n      return (\n        <Table rowKey=\"id\" columns={columns} data={data} showHeader={false} />\n      )\n    }\n  }",__scope:{props:this?this.props:t,Playground:s.c,Props:s.d,Table:p.a,flatten:h.flatten,Input:x.a},style:{height:400},mdxType:"Playground"},function(n){function e(n){var t;Object(a.a)(this,e);var r=[{dataIndex:"id",title:"id",key:"id",width:150,align:"center"},{dataIndex:"column-5",key:"column-5",title:"column-5",width:100,align:"center"},{dataIndex:"column-6",key:"column-6",title:"column-6",align:"center"}],d=(t=Object(o.a)(this,Object(l.a)(e).call(this,n))).generateData(r,20);return t.state={data:d,columns:r},t}return Object(d.a)(e,n),Object(r.a)(e,[{key:"generateData",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Row";return new Array(e).fill(0).map((function(e,a){return n.reduce((function(n,e,o){return"id"!==e.dataIndex?n[e.dataIndex]=Math.floor(100*Math.random()+1):n[e.dataIndex]=t+" "+a+" - Col "+o,n}),{id:t+a,parentId:null})}))}}]),Object(r.a)(e,[{key:"render",value:function(){var n=this.state,e=n.columns,t=n.data;return Object(m.b)(p.a,{rowKey:"id",columns:e,data:t,showHeader:!1,mdxType:"Table"})}}]),e}(i.a.Component)),Object(m.b)("h2",{id:"\u884c\u8fb9\u6846\u3001\u884chover\u3001\u5947\u5076\u884c\u6837\u5f0f"},"\u884c\u8fb9\u6846\u3001\u884chover\u3001\u5947\u5076\u884c\u6837\u5f0f"),Object(m.b)(s.c,{__position:9,__code:"class Demo extends React.Component {\n    generateData(columns, count = 20, prefix = 'Row') {\n      return new Array(count).fill(0).map((row, rowIndex) => {\n        return columns.reduce(\n          (rowData, column, columnIndex) => {\n            if (column.dataIndex !== 'id') {\n              rowData[column.dataIndex] = Math.floor(Math.random() * 100 + 1)\n            } else {\n              rowData[column.dataIndex] =\n                prefix + ' ' + rowIndex + ' - Col ' + columnIndex\n            }\n            return rowData\n          },\n          {\n            id: prefix + rowIndex,\n            parentId: null,\n          },\n        )\n      })\n    }\n    constructor(props) {\n      super(props)\n      const columns = [\n        {\n          dataIndex: 'id',\n          title: 'id',\n          key: 'id',\n          width: 150,\n          align: 'center',\n        },\n\n        {\n          dataIndex: 'column-5',\n          key: 'column-5',\n          title: 'column-5',\n          width: 100,\n          align: 'center',\n        },\n        {\n          dataIndex: 'column-6',\n          key: 'column-6',\n          title: 'column-6',\n          align: 'center',\n        },\n      ]\n\n      let data = this.generateData(columns, 20)\n\n      this.state = {\n        data: data,\n        columns: columns,\n      }\n    }\n    render() {\n      let { columns, data } = this.state\n      return (\n        <Table\n          rowKey=\"id\"\n          columns={columns}\n          data={data}\n          orderNumber={false}\n          bordered={false}\n          striped={false}\n          hoverable={false}\n        />\n      )\n    }\n  }",__scope:{props:this?this.props:t,Playground:s.c,Props:s.d,Table:p.a,flatten:h.flatten,Input:x.a},style:{height:400},mdxType:"Playground"},function(n){function e(n){var t;Object(a.a)(this,e);var r=[{dataIndex:"id",title:"id",key:"id",width:150,align:"center"},{dataIndex:"column-5",key:"column-5",title:"column-5",width:100,align:"center"},{dataIndex:"column-6",key:"column-6",title:"column-6",align:"center"}],d=(t=Object(o.a)(this,Object(l.a)(e).call(this,n))).generateData(r,20);return t.state={data:d,columns:r},t}return Object(d.a)(e,n),Object(r.a)(e,[{key:"generateData",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Row";return new Array(e).fill(0).map((function(e,a){return n.reduce((function(n,e,o){return"id"!==e.dataIndex?n[e.dataIndex]=Math.floor(100*Math.random()+1):n[e.dataIndex]=t+" "+a+" - Col "+o,n}),{id:t+a,parentId:null})}))}}]),Object(r.a)(e,[{key:"render",value:function(){var n=this.state,e=n.columns,t=n.data;return Object(m.b)(p.a,{rowKey:"id",columns:e,data:t,orderNumber:!1,bordered:!1,striped:!1,hoverable:!1,mdxType:"Table"})}}]),e}(i.a.Component)),Object(m.b)("h2",{id:"\u6811\u5f62\u6570\u636e"},"\u6811\u5f62\u6570\u636e"),Object(m.b)(s.c,{__position:10,__code:"class Demo extends React.Component {\n    generateData(columns, count = 20, prefix = 'Row') {\n      return new Array(count).fill(0).map((row, rowIndex) => {\n        return columns.reduce(\n          (rowData, column, columnIndex) => {\n            if (column.dataIndex !== 'id') {\n              rowData[column.dataIndex] = Math.floor(Math.random() * 100 + 1)\n            } else {\n              rowData[column.dataIndex] =\n                prefix + ' ' + rowIndex + ' - Col ' + columnIndex\n            }\n\n            return rowData\n          },\n          {\n            id: prefix + rowIndex,\n            parentId: null,\n          },\n        )\n      })\n    }\n    constructor(props) {\n      super(props)\n      const columns = [\n        {\n          dataIndex: 'id',\n          title: 'id',\n          key: 'id',\n          width: 150,\n        },\n        {\n          dataIndex: 'column-1',\n          key: 'column-1',\n          title: 'column-1',\n          width: 100,\n        },\n\n        {\n          dataIndex: 'column-2',\n          key: 'column-2',\n          title: 'column-2',\n          width: 150,\n          align: 'center',\n        },\n\n        {\n          dataIndex: 'column-3',\n          key: 'column-3',\n          title: 'column-3',\n          align: 'right',\n        },\n        {\n          dataIndex: 'column-4',\n          key: 'column-4',\n          title: 'column-4',\n          width: 100,\n          align: 'center',\n        },\n      ]\n\n      let data = this.generateData(columns, 20)\n\n      data[0].children = this.generateData(columns, 5, 'Row-0-children-')\n      data[0].children[0].children = this.generateData(\n        columns,\n        5,\n        'Row-0-children-0-',\n      )\n\n      data[3].children = this.generateData(columns, 5, 'Row-3-children-')\n      data[3].children[0].children = this.generateData(\n        columns,\n        5,\n        'Row-3-children-0-',\n      )\n\n      this.state = {\n        data: data,\n        columns: columns,\n      }\n    }\n    render() {\n      let { columns, data } = this.state\n      return (\n        <Table\n          rowKey=\"id\"\n          columns={columns}\n          data={data}\n          selectMode=\"multiple\"\n          orderNumber={false}\n          checkStrictly={false}\n        />\n      )\n    }\n  }",__scope:{props:this?this.props:t,Playground:s.c,Props:s.d,Table:p.a,flatten:h.flatten,Input:x.a},style:{height:400},mdxType:"Playground"},function(n){function e(n){var t;Object(a.a)(this,e);var r=[{dataIndex:"id",title:"id",key:"id",width:150},{dataIndex:"column-1",key:"column-1",title:"column-1",width:100},{dataIndex:"column-2",key:"column-2",title:"column-2",width:150,align:"center"},{dataIndex:"column-3",key:"column-3",title:"column-3",align:"right"},{dataIndex:"column-4",key:"column-4",title:"column-4",width:100,align:"center"}],d=(t=Object(o.a)(this,Object(l.a)(e).call(this,n))).generateData(r,20);return d[0].children=t.generateData(r,5,"Row-0-children-"),d[0].children[0].children=t.generateData(r,5,"Row-0-children-0-"),d[3].children=t.generateData(r,5,"Row-3-children-"),d[3].children[0].children=t.generateData(r,5,"Row-3-children-0-"),t.state={data:d,columns:r},t}return Object(d.a)(e,n),Object(r.a)(e,[{key:"generateData",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Row";return new Array(e).fill(0).map((function(e,a){return n.reduce((function(n,e,o){return"id"!==e.dataIndex?n[e.dataIndex]=Math.floor(100*Math.random()+1):n[e.dataIndex]=t+" "+a+" - Col "+o,n}),{id:t+a,parentId:null})}))}}]),Object(r.a)(e,[{key:"render",value:function(){var n=this.state,e=n.columns,t=n.data;return Object(m.b)(p.a,{rowKey:"id",columns:e,data:t,selectMode:"multiple",orderNumber:!1,checkStrictly:!1,mdxType:"Table"})}}]),e}(i.a.Component)),Object(m.b)("h2",{id:"\u6811\u5f62\u6837\u5f0f"},"\u6811\u5f62\u6837\u5f0f"),Object(m.b)(s.c,{__position:11,__code:"class Demo extends React.Component {\n    generateData(columns, count = 20, prefix = 'Row') {\n      return new Array(count).fill(0).map((row, rowIndex) => {\n        return columns.reduce(\n          (rowData, column, columnIndex) => {\n            if (column.dataIndex !== 'id') {\n              rowData[column.dataIndex] = Math.floor(Math.random() * 100 + 1)\n            } else {\n              rowData[column.dataIndex] =\n                prefix + ' ' + rowIndex + ' - Col ' + columnIndex\n            }\n\n            return rowData\n          },\n          {\n            id: prefix + rowIndex,\n            parentId: null,\n          },\n        )\n      })\n    }\n    constructor(props) {\n      super(props)\n      const columns = [\n        {\n          dataIndex: 'id',\n          title: 'id',\n          key: 'id',\n        },\n      ]\n\n      let data = this.generateData(columns, 20)\n\n      data[0].children = this.generateData(columns, 5, 'Row-0-children-')\n      data[0].children[0].children = this.generateData(\n        columns,\n        5,\n        'Row-0-children-0-',\n      )\n\n      data[3].children = this.generateData(columns, 5, 'Row-3-children-')\n      data[3].children[0].children = this.generateData(\n        columns,\n        5,\n        'Row-3-children-0-',\n      )\n\n      this.state = {\n        data: data,\n        columns: columns,\n      }\n    }\n    render() {\n      let { columns, data } = this.state\n      return (\n        <Table\n          rowKey=\"id\"\n          columns={columns}\n          data={data}\n          indentSize={30}\n          selectMode=\"none\"\n          orderNumber={false}\n          checkStrictly={false}\n          showHeader={false}\n          bordered={false}\n          striped={false}\n          hoverable={false}\n        />\n      )\n    }\n  }",__scope:{props:this?this.props:t,Playground:s.c,Props:s.d,Table:p.a,flatten:h.flatten,Input:x.a},style:{height:400},mdxType:"Playground"},function(n){function e(n){var t;Object(a.a)(this,e);var r=[{dataIndex:"id",title:"id",key:"id"}],d=(t=Object(o.a)(this,Object(l.a)(e).call(this,n))).generateData(r,20);return d[0].children=t.generateData(r,5,"Row-0-children-"),d[0].children[0].children=t.generateData(r,5,"Row-0-children-0-"),d[3].children=t.generateData(r,5,"Row-3-children-"),d[3].children[0].children=t.generateData(r,5,"Row-3-children-0-"),t.state={data:d,columns:r},t}return Object(d.a)(e,n),Object(r.a)(e,[{key:"generateData",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Row";return new Array(e).fill(0).map((function(e,a){return n.reduce((function(n,e,o){return"id"!==e.dataIndex?n[e.dataIndex]=Math.floor(100*Math.random()+1):n[e.dataIndex]=t+" "+a+" - Col "+o,n}),{id:t+a,parentId:null})}))}}]),Object(r.a)(e,[{key:"render",value:function(){var n=this.state,e=n.columns,t=n.data;return Object(m.b)(p.a,{rowKey:"id",columns:e,data:t,indentSize:30,selectMode:"none",orderNumber:!1,checkStrictly:!1,showHeader:!1,bordered:!1,striped:!1,hoverable:!1,mdxType:"Table"})}}]),e}(i.a.Component)),Object(m.b)("h2",{id:"\u6839\u636e\u884c\u6570\u636e\u6761\u6570\u81ea\u52a8\u9ad8\u5ea6"},"\u6839\u636e\u884c\u6570\u636e\u6761\u6570\u81ea\u52a8\u9ad8\u5ea6"),Object(m.b)(s.c,{__position:12,__code:"class Demo extends React.Component {\n    generateData(columns, count = 20, prefix = 'Row') {\n      return new Array(count).fill(0).map((row, rowIndex) => {\n        return columns.reduce(\n          (rowData, column, columnIndex) => {\n            if (column.dataIndex !== 'id') {\n              rowData[column.dataIndex] = Math.floor(Math.random() * 100 + 1)\n            } else {\n              rowData[column.dataIndex] =\n                prefix + ' ' + rowIndex + ' - Col ' + columnIndex\n            }\n            return rowData\n          },\n          {\n            id: prefix + rowIndex,\n            parentId: null,\n          },\n        )\n      })\n    }\n    constructor(props) {\n      super(props)\n      const columns = [\n        {\n          dataIndex: 'id',\n          title: 'id',\n          key: 'id',\n          width: 150,\n          align: 'center',\n        },\n        {\n          dataIndex: 'column-1',\n          key: 'column-1',\n          title: 'column-1',\n          width: 100,\n        },\n\n        {\n          dataIndex: 'column-2',\n          key: 'column-2',\n          title: 'column-2',\n          width: 150,\n          align: 'center',\n        },\n\n        {\n          dataIndex: 'column-3',\n          key: 'column-3',\n          title: 'column-3',\n          align: 'right',\n        },\n        {\n          dataIndex: 'column-4',\n          key: 'column-4',\n          title: 'column-4',\n          width: 100,\n          align: 'center',\n        },\n      ]\n\n      let data = this.generateData(columns, 20)\n\n      this.state = {\n        data: data,\n        columns: columns,\n      }\n    }\n    render() {\n      let { columns, data } = this.state\n      return (\n        <Table rowKey=\"id\" columns={columns} autoHeight={true} data={data} />\n      )\n    }\n  }",__scope:{props:this?this.props:t,Playground:s.c,Props:s.d,Table:p.a,flatten:h.flatten,Input:x.a},mdxType:"Playground"},function(n){function e(n){var t;Object(a.a)(this,e);var r=[{dataIndex:"id",title:"id",key:"id",width:150,align:"center"},{dataIndex:"column-1",key:"column-1",title:"column-1",width:100},{dataIndex:"column-2",key:"column-2",title:"column-2",width:150,align:"center"},{dataIndex:"column-3",key:"column-3",title:"column-3",align:"right"},{dataIndex:"column-4",key:"column-4",title:"column-4",width:100,align:"center"}],d=(t=Object(o.a)(this,Object(l.a)(e).call(this,n))).generateData(r,20);return t.state={data:d,columns:r},t}return Object(d.a)(e,n),Object(r.a)(e,[{key:"generateData",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Row";return new Array(e).fill(0).map((function(e,a){return n.reduce((function(n,e,o){return"id"!==e.dataIndex?n[e.dataIndex]=Math.floor(100*Math.random()+1):n[e.dataIndex]=t+" "+a+" - Col "+o,n}),{id:t+a,parentId:null})}))}}]),Object(r.a)(e,[{key:"render",value:function(){var n=this.state,e=n.columns,t=n.data;return Object(m.b)(p.a,{rowKey:"id",columns:e,autoHeight:!0,data:t,mdxType:"Table"})}}]),e}(i.a.Component)))}I&&I===Object(I)&&Object.isExtensible(I)&&Object.defineProperty(I,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"doc\\Basic\\Simple.mdx"}}),I.isMDXComponent=!0}}]);
//# sourceMappingURL=doc-basic-simple.2beb4b021e7ba56ef6ab.js.map