{"version":3,"sources":["E:/WebRoot/tablex/src/GroupHeader.js","E:/WebRoot/tablex/src/ExpandIcon.js","E:/WebRoot/tablex/src/Checkbox.js","E:/WebRoot/tablex/src/BaseTable.js","E:/WebRoot/tablex/src/utils.js"],"names":["Column","_ref","cell","depth","h","columnDepth","headerHeight","react_default","a","createElement","className","style","height","ColumnGroup","_ref2","title","children","display","alignItems","justifyContent","borderRight","borderTop","renderColumns","_ref3","columns","cells","columnList","map","d","i","columnIndex","findIndex","c","key","arr","filter","__placeholder__","frozen","childrens","notFrozenColumns","getTreeLeafs","length","GroupHeader_ColumnGroup","Object","assign","dataIndex","__depth","GroupHeader_Column","GroupHeader","props","Fragment","MemoHeader","_ref4","_ref4$cells","_ref4$headerHeight","useMemo","ExpandLoading","viewBox","data-icon","width","fill","aria-hidden","focusable","ExpandIcon","loading","expandable","expanded","onExpand","isLeaf","cls","undefined","marginLeft","onClick","e","stopPropagation","Checkbox","indeterminate","onChange","value","checked","disabled","type","Table","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getScrollbarSize","components","expandIconProps","rowData","rowKey","Array","state","loadingKeys","indexOf","isLoadingChildren","setLoadingChildren","bl","callback","nextKeys","toConsumableArray","push","splice","setState","data","cloneDeep","loadChildrenData","row","fn","res","constructor","name","then","onRowExpand","rowIndex","headerRenderer","headerIndex","src_GroupHeader","rowHeight","onScroll","scrollLeft","horizontalScrollDirection","getRowsByKeys","keys","arguments","rows","_this$state","flatData","forEach","k","find","r","isSingleSelect","selectMode","isMultipleSelect","isDisabledSelect","disabledSelectKeys","isExtraColumn","onSelectChange","selectedRowKeys","concat","rowEventHandlers","_ref5","event","isSelected","isDisabledCheck","onCheckChange","checkStrictly","addChecked","removeChecked","onCheckAllChange","addAllChecked","removeAllChecked","_this$state2","nextSelected","halfCheckedKeys","parentKeys","__parents","p","checkboxCellRender","_ref6","_this$state3","attr","src_Checkbox","checkboxHeadRender","_ref7","_this$state4","isCheckedAll","orderNumberCellRender","_ref8","rowClassName","_ref9","_this$state5","tempCls","record","index","join","tableApi","getSelectedKeys","prevProps","orderNumber","initRef","assertThisInitialized","_this$state6","_addCheckedKeyWithDis","addCheckedKeyWithDisabled","nextHalflCheckedKeys","_this$state7","_removeCheckedKey","removeCheckedKey","expandColumnKey","dataKey","_this$state8","checkboxColumn","__type","orderNumberColumn","cellRenderer","es","fixed","classPrefix","overscanRowCount","nextProps","prevState","resizable","dataSource","nextState","_nextState","columnsArr","unshift","align","_treeToList","treeToList","leafs","maxDepth","list","hasOwnProperty","render","_ref10","cellData","column","React","isValidElement","defineProperty","Component","AutoResizeTable","_ref11","BaseTable_Table","defaultProps","idField","treeList","roots","getChildren","item","parents","tempArr","__parent","sortedArr","sort","b","treeToFlatten","getDataListWithExpanded","expandedKeys","setChildren","cArr","treeFilter","node","nextChildrens","getScrollbarWidth","navigator","userAgent","scrollbarWidth","oP","document","styles","overflowY","body","appendChild","offsetWidth","clientWidth","remove","addCheckedKey","nextHalfCheckedKeys","halfIndex","parentHalfCheckedKeys","childrenSelectedKeys","ck","_loop","pNode","childrensAllChecked","cKey","j","newHalflCheckedKeys","childrenKeys","_loop2","m","_loop3","childrensAllUnChecked","_ref3$disabledSelectK","isEnabled","itemKey","parentEnableSelect","pArr","isEnableSelect","_loop4","__webpack_require__","__webpack_exports__"],"mappings":"6lCAGMA,EAAS,SAAAC,GAAgD,IAA7CC,EAA6CD,EAA7CC,KAAMC,EAAuCF,EAAvCE,MAClBC,GADyDH,EAAhCI,YACNF,EAAQ,GAD8BF,EAAnBK,aAE1C,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4BC,MAAO,CAAEC,OAAQR,IACzDF,IAKDW,EAAc,SAAAC,GAAuC,IAApCC,EAAoCD,EAApCC,MAAOC,EAA6BF,EAA7BE,SAAUV,EAAmBQ,EAAnBR,aACtC,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYC,MAAO,CAAEM,QAAS,UAC3CV,EAAAC,EAAAC,cAAA,OACEE,MAAO,CACLC,OAAQN,EACRW,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,YAAa,sBAGdL,GAEHR,EAAAC,EAAAC,cAAA,OACEE,MAAO,CACLC,OAAQN,EACRW,QAAS,OACTI,UAAW,sBAGZL,KAMHM,EAAgB,SAAhBA,EAAgBC,GAMhB,IALJC,EAKID,EALJC,QACAC,EAIIF,EAJJE,MACAC,EAGIH,EAHJG,WACArB,EAEIkB,EAFJlB,YACAC,EACIiB,EADJjB,aAEA,OAAOkB,EAAQG,IAAI,SAACC,EAAGC,GACrB,IAAIC,EAAcJ,EAAWK,UAAU,SAAAC,GAAC,OAAIA,EAAEC,MAAQL,EAAEK,MACpD/B,EAAOuB,EAAMK,GAEbI,EAAMR,EAAWS,OAAO,SAAAP,GAAC,OAAKA,EAAEQ,kBAEhCC,EAAS,GACbH,EAAI,KAAOG,EAASH,EAAI,GAAGG,QAE3B,IAAIC,EAAYV,EAAEZ,UAAY,GAE9B,GAAe,SAAXqB,GAAgC,UAAXA,EACvBC,EAAYA,EAAUH,OAAO,SAAAP,GAAC,QAAMA,EAAES,aACjC,CACLC,EAAYA,EAAUH,OAAO,SAAAP,GAAC,OAAKA,EAAES,SAErC,IAGIE,EAHQC,YAAaF,GAGIH,OAAO,SAAAP,GAAC,OAAKA,EAAES,SAC5C,GAAIC,EAAUG,OAAS,GAAiC,IAA5BF,EAAiBE,OAC3C,OAAO,KAIX,OAAIH,EAAUG,OAAS,EAEnBlC,EAAAC,EAAAC,cAACiC,EAADC,OAAAC,OAAA,CACEX,IAAKL,EAAEiB,WAAahB,GAChBD,EAFN,CAGEzB,MAAOyB,EAAEkB,QACTzC,YAAaA,EACbH,KAAMA,EACNI,aAAcA,IAEbgB,EAAc,CACbE,QAASc,EACTb,QACAC,aACArB,cACAC,kBAONC,EAAAC,EAAAC,cAACsC,EAADJ,OAAAC,OAAA,CACEX,IAAKL,EAAEiB,WAAahB,GAChBD,EAFN,CAGE1B,KAAMuB,EAAMK,GACZ3B,MAAOyB,EAAEkB,QACTzC,YAAaA,EACbC,aAAcA,QAMtB,SAAS0C,EAAYC,GACnB,OAAO1C,EAAAC,EAAAC,cAACF,EAAAC,EAAM0C,SAAP,KAAiB5B,EAAc2B,IAGxC,IAAME,EAAa,SAAAC,GAMb,IAAAC,EAAAD,EALJ3B,aAKI,IAAA4B,EALI,GAKJA,EAJJ7B,EAII4B,EAJJ5B,QACAE,EAGI0B,EAHJ1B,WACArB,EAEI+C,EAFJ/C,YAEIiD,EAAAF,EADJ9C,oBACI,IAAAgD,EADW,GACXA,EAaJ,OAZsBC,kBAAQ,WAC5B,OACEhD,EAAAC,EAAAC,cAACuC,EAAD,CACEvB,MAAOA,EACPD,QAASA,EACTE,WAAYA,EACZrB,YAAaA,EACbC,aAAcA,KAGjB,CAACmB,KAKS0B,ICjIf,SAASK,IACP,OACEjD,EAAAC,EAAAC,cAAA,OACEgD,QAAQ,gBACR/C,UAAU,sBACVgD,YAAU,UACVC,MAAM,MACN/C,OAAO,MACPgD,KAAK,eACLC,cAAY,OACZC,UAAU,SAEVvD,EAAAC,EAAAC,cAAA,QAAMmB,EAAE,4eAKd,IAAMmC,EAAa,SAAAd,GAAS,IACpBe,EAA2Df,EAA3De,QAASC,EAAkDhB,EAAlDgB,WAAYC,EAAsCjB,EAAtCiB,SAAUC,EAA4BlB,EAA5BkB,SAAUC,EAAkBnB,EAAlBmB,OAAQjE,EAAU8C,EAAV9C,MAEnDkE,EAAM,oBAEV,OAAgB,IAAZL,EACKzD,EAAAC,EAAAC,cAAC+C,EAAD,WAGUc,IAAfL,EACK,OAGM,IAAXG,EAEAC,IADe,IAAbH,EACK,YAEA,aAGTG,EAAM,iCAIN9D,EAAAC,EAAAC,cAAA,QACEC,UAAW2D,EACX1D,MAAO,CAAE4D,WAAoB,GAARpE,GACrBqE,QAAS,SAAAC,GACPA,EAAEC,kBACFP,GAAUD,QAMHH,4KCpDf,IAAMY,EAAW,SAAA1B,GAAS,IAChB2B,EAAsD3B,EAAtD2B,cAAeC,EAAuC5B,EAAvC4B,SAAUC,EAA6B7B,EAA7B6B,MAAOC,EAAsB9B,EAAtB8B,QAASC,EAAa/B,EAAb+B,SAE3CX,EAAM,GAcV,OAZsB,IAAlBO,IACAP,EAAM,mCAGM,IAAZU,IACAV,EAAM,6BAGO,IAAbW,IACAX,EAAM,6BAIN9D,EAAAC,EAAAC,cAAA,QACIC,UAAW,mBAAqB2D,EAChCG,QAAS,SAAAC,GACLA,EAAEC,kBACsB,oBAAbG,GAAuC,GAAZG,GAClCH,GAAUE,EAAS9B,EAAM6B,SAIjCvE,EAAAC,EAAAC,cAAA,SACIwE,KAAK,WACLH,MAAOA,EACPE,SAAUA,EACVtE,UAAU,2BAEdH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,6BAKbiE,kMCzBTO,cACF,SAAAA,EAAYjC,GAAO,IAAAkC,EAAA,OAAAxC,OAAAyC,EAAA,EAAAzC,CAAA0C,KAAAH,IACfC,EAAAxC,OAAA2C,EAAA,EAAA3C,CAAA0C,KAAA1C,OAAA4C,EAAA,EAAA5C,CAAAuC,GAAAM,KAAAH,KAAMpC,KAqIVwC,iBAAmB,WACf,OAAO,GAvIQN,EA0InBO,WAAa,CACT3B,WAAYA,GA3IGoB,EA8InBQ,gBAAkB,SAAA1F,GAAiB,IAAd2F,EAAc3F,EAAd2F,QAEb3D,EAAM2D,EADGT,EAAKlC,MAAM4C,QAGxB,MAAO,CACHA,OAAQ5D,EACR2D,UACAxB,SAAQwB,EAAQ5E,oBAAoB8E,OACpC9B,QAASmB,EAAKY,MAAMC,YAAYC,QAAQhE,IAAQ,IAtJrCkD,EA6JnBe,kBAAoB,SAAAjE,GAGhB,OAFsBkD,EAAKY,MAArBC,YAEaC,QAAQhE,IAAQ,GAhKpBkD,EAsKnBgB,mBAAqB,SAAClE,EAAKmE,EAAIC,GAAa,IAClCL,EAAgBb,EAAKY,MAArBC,YAEFnE,EAAImE,EAAYC,QAAQhE,GAExBqE,EAAQ3D,OAAA4D,EAAA,EAAA5D,CAAOqD,IAER,IAAPI,GACW,IAAPvE,GACAyE,EAASE,KAAKvE,GAGdJ,GAAK,GACLyE,EAASG,OAAO5E,EAAG,GAI3BsD,EAAKuB,SAAS,CACVV,YAAaM,EACbK,KAAMC,IAAUzB,EAAKY,MAAMY,SAzLhBxB,EAgMnB0B,iBAAmB,SAAC5E,EAAK6E,GACrB,IAAIC,EAAK5B,EAAKlC,MAAM4D,iBAEpB,GAAkB,oBAAPE,EAAmB,CAC1B,IAAIC,EAAMD,EAAGD,GAETE,GAAgC,YAAzBA,EAAIC,YAAYC,OACvB/B,EAAKgB,mBAAmBlE,GAAK,GAE7B+E,EAAIG,KAAK,SAAA7E,GACL6C,EAAKgB,mBAAmBlE,GAAK,KAGjC+E,EAAG,MAAO,SAAAvC,GACNU,EAAKgB,mBAAmBlE,GAAK,QA9M1BkD,EAoNnBiC,YAAc,SAAAtG,GAA6C,IAA1CoD,EAA0CpD,EAA1CoD,SAAU0B,EAAgC9E,EAAhC8E,QAAmBC,GAAa/E,EAAvBuG,SAAuBvG,EAAb+E,QAEtCD,GACAA,EAAQ5E,oBAAoB8E,OAC5BF,EAAQ5E,SAASyB,OAAS,IAKb,IAAbyB,GACAiB,EAAK0B,iBAAiBhB,EAAQD,IA9NnBT,EAkOnBmC,eAAiB,SAAA/F,GAAqC,IAAlCE,EAAkCF,EAAlCE,MAAOD,EAA2BD,EAA3BC,QAAS+F,EAAkBhG,EAAlBgG,YAChC,OACIhH,EAAAC,EAAAC,cAAC+G,EAAD,CACI/F,MAAOA,EACPD,QAAS2D,EAAKY,MAAMvE,QACpBE,WAAYF,EACZnB,YAAa8E,EAAKY,MAAM1F,YACxBkH,YAAaA,EACbjH,aAAc6E,EAAKY,MAAM0B,aA1OlBtC,EA+OnBuC,SAAW,SAAAtE,GAA+CA,EAA5CuE,WAA4CvE,EAAhCwE,2BA/OPzC,EAkPnB0C,cAAgB,WAAe,IAAdC,EAAcC,UAAAtF,OAAA,QAAA6B,IAAAyD,UAAA,GAAAA,UAAA,GAAP,GAChBC,EAAO,GADgBC,EAEK9C,EAAKY,MAA/BF,EAFqBoC,EAErBpC,OAAkB3D,EAFG+F,EAEbC,SASd,OAPAJ,EAAKK,QAAQ,SAAAC,GACT,IAAItB,EAAM5E,EAAImG,KAAK,SAAAC,GAAC,OAAIA,EAAEzC,KAAYuC,IAC3B,MAAPtB,GACAkB,EAAKxB,KAAK7D,OAAOC,OAAO,GAAIkE,MAI7BkB,GA7PQ7C,EAiQnBoD,eAAiB,WACb,MAAiC,WAA1BpD,EAAKY,MAAMyC,YAlQHrD,EAsQnBsD,iBAAmB,WACf,MAAiC,aAA1BtD,EAAKY,MAAMyC,YAvQHrD,EA2QnBuD,iBAAmB,SAAAzG,GAEf,OADSkD,EAAKY,MAAM4C,mBAAmB5G,UAAU,SAAAH,GAAC,OAAIA,IAAMK,KAAQ,GA5QrDkD,EAiRnByD,cAAgB,WAAe,IAAd3D,EAAc8C,UAAAtF,OAAA,QAAA6B,IAAAyD,UAAA,GAAAA,UAAA,GAAP,GACpB,MAAO,CAAC,oBAAqB,wBAAwB9B,QAAQhB,IAAS,GAlRvDE,EAqRnB0D,eAAiB,SAAAhD,GAAU,IACjBiD,EAAoB3D,EAAKY,MAAzB+C,gBACFjH,EAAIiH,EAAgB7C,QAAQJ,GAC5BS,EAAW,GAAGyC,OAAOD,GAEzB,IAAI3D,EAAKuD,iBAAiB7C,GAA1B,CAIA,GAAIV,EAAKoD,iBAEDjC,EADAzE,GAAK,EACM,GAEA,CAACgE,OAEb,KAAIV,EAAKsD,mBAOZ,OANI5G,GAAK,EACLyE,EAASG,OAAO5E,EAAG,GAEnByE,EAASE,KAAKX,GAMmB,oBAA9BV,EAAKlC,MAAM4F,gBAClB1D,EAAKlC,MAAM4F,eACPvC,EACAnB,EAAK0C,cAAcvB,GACnBT,GAIRV,EAAKuB,SAAS,CAAEoC,gBAAiBxC,MAtTlBnB,EAyTnB6D,iBAAmB,CACfxE,QAAS,SAAAyE,GAA0C,IAAvCrD,EAAuCqD,EAAvCrD,QAAmBC,GAAoBoD,EAA9B5B,SAA8B4B,EAApBpD,QAAoBoD,EAAZC,MAKnC,GAJI/D,EAAKoD,kBACLpD,EAAK0D,eAAehD,GAGpBV,EAAKsD,mBAAoB,KAErBU,EADsBhE,EAAKY,MAAzB+C,gBAC2B7C,QAAQJ,IAAW,GACnCV,EAAKiE,gBAAgBvD,EAAQD,IACjCT,EAAKkE,eAAeF,EAAYtD,MAnUtCV,EAwUnBkE,cAAgB,SAACjD,EAAItB,IACgB,IAA7BK,EAAKY,MAAMuD,cACXnE,EAAK0D,eAAe/D,IAET,IAAPsB,EACAjB,EAAKoE,WAAWzE,GAEhBK,EAAKqE,cAAc1E,IA/UZK,EAuZnBsE,iBAAmB,SAAArD,IACJ,IAAPA,EACAjB,EAAKuE,gBAELvE,EAAKwE,oBA3ZMxE,EA+ZnBuE,cAAgB,WAAM,IAAAE,EACSzE,EAAKY,MAA1BF,EADY+D,EACZ/D,OAAQqC,EADI0B,EACJ1B,SACV2B,EAAe,GACf3H,EAAM,GAEVgG,EAASC,QAAQ,SAAAvG,GACb,IAAIwG,EAAIxG,EAAEiE,IAEAV,EAAKiE,gBAAgBhB,EAAGxG,KAG9BiI,EAAarD,KAAK4B,GAClBlG,EAAIsE,KAAK5E,MAIwB,oBAA9BuD,EAAKlC,MAAM4F,gBAClB1D,EAAKlC,MAAM4F,eAAegB,EAAc3H,EAAK,IAGjDiD,EAAKuB,SAAS,CACVoC,gBAAiBe,EACjBC,gBAAiB,GACjBnD,KAAMC,IAAUzB,EAAKY,MAAMY,SAtbhBxB,EA0bnBwE,iBAAmB,WAC0B,oBAA9BxE,EAAKlC,MAAM4F,gBAClB1D,EAAKlC,MAAM4F,eAAe,GAAI,GAAI,IAGtC1D,EAAKuB,SAAS,CACVoC,gBAAiB,GACjBgB,gBAAiB,GACjBnD,KAAMC,IAAUzB,EAAKY,MAAMY,SAlchBxB,EAucnBiE,gBAAkB,SAACnH,EAAK2D,GACpB,IAAI1D,EAAMiD,EAAKY,MAAM4C,mBACjBvC,EAAKlE,EAAI+D,QAAQhE,IAAQ,EAE7B,IAAW,IAAPmE,EAGA,IAFA,IAAI2D,EAAanE,EAAQoE,WAAa,GAE7BnI,EAAI,EAAGA,EAAIkI,EAAWtH,OAAQZ,IAAK,CACxC,IAAMoI,EAAIF,EAAWlI,GACrB,GAAIK,EAAI+D,QAAQgE,IAAM,EAAG,CACrB7D,GAAK,EACL,OAIZ,OAAOA,GAtdQjB,EAydnB+E,mBAAqB,SAAAC,GAAiB,IAAdvE,EAAcuE,EAAdvE,QAAcwE,EACiBjF,EAAKY,MAAlDF,EAD4BuE,EAC5BvE,OAAQiD,EADoBsB,EACpBtB,gBAAiBgB,EADGM,EACHN,gBAC3B7H,EAAM2D,EAAQC,GAEdwE,EAAO,GAcX,OAZIvB,EAAgB7C,QAAQhE,IAAQ,IAChCoI,EAAKtF,SAAU,GAGf+E,EAAgB7D,QAAQhE,IAAQ,IAChCoI,EAAKzF,eAAgB,GAGrBO,EAAKiE,gBAAgBnH,EAAK2D,KAC1ByE,EAAKrF,UAAW,GAIhBzE,EAAAC,EAAAC,cAAC6J,EAAD3H,OAAAC,OAAA,CACIgD,QAASA,EACTd,MAAO7C,EACP4C,SAAUM,EAAKkE,eACXgB,KAhfGlF,EAqfnBoF,mBAAqB,SAAAC,GAKjB,IALkC,IAAd5E,EAAc4E,EAAd5E,QAAc6E,EAC2BtF,EAAKY,MAA5D+C,EAD4B2B,EAC5B3B,gBAAiBgB,EADWW,EACXX,gBAAiB5B,EADNuC,EACMvC,SAAUrC,EADhB4E,EACgB5E,OAE9C6E,GAAe,EAEV7I,EAAI,EAAGA,EAAIqG,EAASzF,OAAQZ,IAAK,CACtC,IAAMI,EAAMiG,EAASrG,GAAGgE,GAExB,IAAIV,EAAKiE,gBAAgBnH,EAAKiG,EAASrG,MAID,IAAlCiH,EAAgB7C,QAAQhE,GAAa,CACrCyI,GAAe,EACf,OAIR,IAAIL,EAAO,GAUX,OARqB,IAAjBK,EACAL,EAAKtF,SAAU,GAEX+D,EAAgBrG,OAAS,GAAKqH,EAAgBrH,OAAS,KACvD4H,EAAKzF,eAAgB,GAKzBrE,EAAAC,EAAAC,cAAC6J,EAAD3H,OAAAC,OAAA,CACIgD,QAASA,GACLyE,EAFR,CAGIxF,SAAUM,EAAKsE,qBArhBRtE,EA0hBnBwF,sBAAwB,SAAAC,GAAkB,IAAfvD,EAAeuD,EAAfvD,SACvB,OAAO9G,EAAAC,EAAAC,cAAA,YAAO4G,EAAW,IA3hBVlC,EA8hBnB0F,aAAe,SAAAC,GAA2B,IAAxBlF,EAAwBkF,EAAxBlF,QAASyB,EAAeyD,EAAfzD,SAAe0D,EACJ5F,EAAKY,MAAjCF,EADgCkF,EAChClF,OAAQiD,EADwBiC,EACxBjC,gBACV7G,EAAM2D,EAAQC,GACdsD,GAAa,EAEbL,EAAgB7C,QAAQhE,IAAQ,IAChCkH,GAAa,GAGjB,IAAI9E,EAAM,GAENgD,EAAW,IAAM,EACjBhD,EAAImC,KAAK,oBAETnC,EAAImC,KAAK,mBAGT2C,GACA9E,EAAImC,KAAK,wBAGb,IAAIwE,EAAU,GAOd,MANuC,oBAA5B7F,EAAKlC,MAAM4H,eAClBG,EAAU7F,EAAKlC,MAAM4H,aAAaI,OAAQC,QAG9CF,GAAW3G,EAAImC,KAAKwE,GAEb3G,EAAI8G,KAAK,MA1jBDhG,EA6jBnBiG,SAAW,CACPC,gBAAiB,WACb,OAAOlG,EAAKY,MAAM+C,kBA7jBtB3D,EAAKY,MAAQ,CACTvE,QAAS,GACTE,WAAY,GACZrB,YAAa,EACbsG,KAAM,GACNuB,SAAU,GACVlC,YAAa,GACbsF,UAAW,KACX7D,UAAW,GACXqB,gBAAiB,GACjBH,mBAAoB,GACpBmB,gBAAiB,GACjBtB,WAAY,GACZ3C,OAAQ,GACR0F,aAAa,EACbjC,eAAe,GAGU,oBAAlBrG,EAAMuI,SACbvI,EAAMuI,QAAN7I,OAAA8I,EAAA,EAAA9I,CAAAwC,IArBWA,0EAqVRlD,GAAK,IAAAyJ,EAORrG,KAAKU,MALL+C,EAFQ4C,EAER5C,gBACAjD,EAHQ6F,EAGR7F,OACAqC,EAJQwD,EAIRxD,SACA4B,EALQ4B,EAKR5B,gBACAnB,EANQ+C,EAMR/C,mBANQgD,EAYRC,YAA0B,CAC1B3J,MACA6G,kBACAjD,SACAqC,WACA4B,kBACAnB,uBARiBrC,EAVTqF,EAUR7C,gBACiB+C,EAXTF,EAWR7B,gBAUqC,oBAA9BzE,KAAKpC,MAAM4F,gBAClBxD,KAAKpC,MAAM4F,eACPvC,EACAjB,KAAKwC,cAAcvB,GACnBT,GAIRR,KAAKqB,SAAS,CACVoC,gBAAiBxC,EACjBwD,gBAAiB+B,EACjBlF,KAAMC,IAAUvB,KAAKU,MAAMY,8CAKrB1E,GAAK,IAAA6J,EAC8CzG,KAAKU,MAA5D+C,EADSgD,EACThD,gBAAiBjD,EADRiG,EACQjG,OAAQqC,EADhB4D,EACgB5D,SAAU4B,EAD1BgC,EAC0BhC,gBAD1BiC,EAMXC,YAAiB,CACjB/J,MACA6G,kBACAjD,SACAqC,WACA4B,oBAPiBxD,EAJNyF,EAIXjD,gBACiB+C,EALNE,EAKXjC,gBASqC,oBAA9BzE,KAAKpC,MAAM4F,gBAClBxD,KAAKpC,MAAM4F,eACPvC,EACAjB,KAAKwC,cAAcvB,GACnBT,GAIRR,KAAKqB,SAAS,CACVoC,gBAAiBxC,EACjBwD,gBAAiB+B,EACjBlF,KAAMC,IAAUvB,KAAKU,MAAMY,yCAiL/B,IAAI1D,EAAQoC,KAAKpC,MAEbgJ,EAAkB5G,KAAKpC,MAAMgJ,iBAE5BA,GAAmB5G,KAAKpC,MAAMzB,QAAQiB,OAAS,IAChDwJ,EAAkB5G,KAAKpC,MAAMzB,QAAQ,GAAG0K,SANvC,IAAAC,EAS8C9G,KAAKU,MAAlD1F,EATD8L,EASC9L,YAAaqB,EATdyK,EASczK,WAAYiF,EAT1BwF,EAS0BxF,KAAMc,EAThC0E,EASgC1E,UAEjC2E,EAAiB1K,EAAW2G,KAC5B,SAAAzG,GAAC,MAAiB,sBAAbA,EAAEyK,SAEPC,EAAoB5K,EAAW2G,KAC/B,SAAAzG,GAAC,MAAiB,yBAAbA,EAAEyK,SAYX,OATID,IACAA,EAAeG,aAAelH,KAAK6E,mBACnCkC,EAAe9E,eAAiBjC,KAAKkF,oBAGrC+B,IACAA,EAAkBC,aAAelH,KAAKsF,uBAItCpK,EAAAC,EAAAC,cAAC+L,EAAA,EAAD7J,OAAAC,OAAA,GACQK,EADR,CAEIwJ,OAAO,EACP9F,KAAMA,EACNnF,QAASE,EACTuK,gBAAiBA,EACjBvL,UAAU,iBACVgM,YAAY,QACZjH,iBAAkBJ,KAAKI,iBACvBE,gBAAiBN,KAAKM,gBACtBD,WAAYL,KAAKK,WACjB0B,YAAa/B,KAAK+B,YAClBK,UAAWA,EACXnH,aAAc,EAAED,EAAc,GAAKoH,GACnCH,eAAgBjC,KAAKiC,eACrBI,SAAUrC,KAAKqC,SACfsB,iBAAkB3D,KAAK2D,iBACvB6B,aAAcxF,KAAKwF,aACnB8B,iBAAkB,wDAxlBEC,EAAWC,GAAW,IAE9ChH,EAQA+G,EARA/G,OACArE,EAOAoL,EAPApL,QACAwC,EAMA4I,EANA5I,QACAwE,EAKAoE,EALApE,WACAG,EAIAiE,EAJAjE,mBACA4C,EAGAqB,EAHArB,YACAjC,EAEAsD,EAFAtD,cACAwD,EACAF,EADAE,UAGAnG,EAAOiG,EAAUjG,MAAQiG,EAAUG,YAAc,GAEjDC,EAAY,KAEhB,GAAIH,EAAUvB,YAAcsB,EAAW,KAAAK,EAC/BC,EAAa,GAAGnE,OAAOvH,GAGR,aAAfgH,GACA0E,EAAWC,QAAQ,CACflL,IAAK,oBACLiK,QAAS,oBACTG,OAAQ,oBACR1I,MAAO,GACPyJ,MAAO,YAIK,IAAhB7B,GACA2B,EAAWC,QAAQ,CACflL,IAAK,uBACLY,UAAW,uBACXwJ,OAAQ,uBACR1I,MAAO,GACP5C,MAAO,MACPqM,MAAO,WArBoB,IAAAC,EA0BsBC,YACrDJ,GADSxL,EA1BsB2L,EA0B7BE,MAA6BlN,EA1BAgN,EA0BVG,SA1BUH,EA0BaI,KAK3CtF,QAAQ,SAAAvG,GACTA,EAAES,OAAST,EAAE6K,MACb7K,EAAEK,IAAML,EAAEK,KAAOL,EAAEiB,UACnBjB,EAAEsK,QAAUtK,EAAEiB,UAETjB,EAAE8L,eAAe,eAClB9L,EAAEkL,UAAYA,GAGM,oBAAblL,EAAE+L,SACT/L,EAAE2K,aAAe,SAAAqB,GAOX,IANFC,EAMED,EANFC,SAIAjI,GAEEgI,EALFpM,QAKEoM,EAJFE,OAIEF,EAHF9L,YAGE8L,EAFFhI,SACAyB,EACEuG,EADFvG,SAEIiB,EAAI1G,EAAE+L,OAAOE,EAAUjI,EAASyB,GAEpC,OAAI0G,IAAMC,eAAe1F,GACdA,EAGPA,GAAKA,EAAEtH,UACH+M,IAAMC,eAAe1F,EAAEtH,UAChBsH,EAAEtH,SAGVsH,MAQV2E,EAAA,CACLpH,SACArE,QAAS0L,EACTxL,WAAYA,EACZrB,YAAaA,EACbsG,KAAMA,EACNuB,SARoBoF,YAAW3G,EAAMd,GAAnC4H,KASFzJ,UAAWA,EACXwE,aACAG,sBATKhG,OAAAsL,EAAA,EAAAtL,CAAAsK,EAAA,SAULpH,GAVKlD,OAAAsL,EAAA,EAAAtL,CAAAsK,EAAA,cAWL1B,GAXK5I,OAAAsL,EAAA,EAAAtL,CAAAsK,EAAA,gBAYL3D,GAZJ0D,EAASC,EAeL,oBAAqBL,IACrBI,EAAUlE,gBAAkB8D,EAAU9D,iBAAmB,IAG7DkE,EAAU1B,UAAYsB,EAG1B,OAAOI,SApIKe,IAAMG,WAwnBpBC,EAAkB,SAAAlL,GACpB,OACI1C,EAAAC,EAAAC,cAAC+L,EAAA,EAAD,KACK,SAAA4B,GAAA,IAAGzK,EAAHyK,EAAGzK,MAAO/C,EAAVwN,EAAUxN,OAAV,OACGL,EAAAC,EAAAC,cAAC4N,EAAD1L,OAAAC,OAAA,GAAWK,EAAX,CAAkBU,MAAOA,EAAO/C,OAAQA,QAMxDuN,EAAgBG,aAAe,CAC3BzI,OAAQ,MACRrE,QAAS,GACTuL,WAAY,GACZvE,WAAY,SACZM,gBAAiB,GACjBH,mBAAoB,GACpB4C,aAAa,EACbjC,eAAe,EACfwD,WAAW,GA8BAqB,sQCxrBR,SAASb,EAAWpL,GAczB,IAd8C,IAAhBqM,EAAgBxG,UAAAtF,OAAA,QAAA6B,IAAAyD,UAAA,GAAAA,UAAA,GAAN,KACpCyG,EAAWtM,GAAO,GAGlBqL,EAAQ,GAGRkB,EAAQ,GAGRhB,EAAO,GAEPD,EAAW,EAEN3L,EAAI,EAAGA,EAAI2M,EAAS/L,OAAQZ,IAAK,CACxC,IAAMD,EAAI4M,EAAS3M,GAEnB,GAAKD,EAAL,CAIA,IAAMU,EAAYV,EAAEZ,UAAY,GAEhCY,EAAEkB,QAAU,EAEZ2K,EAAKjH,KAAK5E,GACV6M,EAAMjI,KAAK5E,GAEPU,EAAUG,OAAS,EACrBiM,EAAY9M,EAAG,EAAG,IAElB2L,EAAM/G,KAAK5E,IAIf,SAAS8M,EAAYC,EAAMxO,EAAOyO,GAGhC,IAFA,IAAMC,EAAUF,EAAK3N,UAAY,GAExBa,EAAI,EAAGA,EAAIgN,EAAQpM,OAAQZ,IAAK,CACvC,IAAMD,EAAIiN,EAAQhN,GACZS,EAAYV,EAAEZ,UAAY,GAEhCY,EAAEkB,QAAU3C,EAAQ,EACpByB,EAAEkN,SAAW,CACX/N,MAAO4N,EAAK5N,MACZkB,IAAK0M,EAAKJ,GACV5K,MAAOgL,EAAKhL,OAGd/B,EAAEoI,UAAY,GAAGjB,OAAO6F,GAAS7F,OAAO,CAAC4F,EAAKJ,KAE9Cd,EAAKjH,KAAK5E,GAENU,EAAUG,OAAS,EACrBiM,EAAY9M,EAAGA,EAAEkB,QAAS,GAAGiG,OAAOnH,EAAEoI,YAEtCuD,EAAM/G,KAAK5E,IAKjB,GAAI2L,EAAM9K,OAAS,EAAG,CACpB,IAAIsM,EAAY,GAAGhG,OAAOwE,GAC1BwB,EAAUC,KAAK,SAACxO,EAAGyO,GAAJ,OAAUA,EAAEnM,QAAUtC,EAAEsC,UACvC0K,EAAWuB,EAAU,GAAGjM,QAG1B,MAAO,CAAE2K,OAAMF,QAAOkB,QAAOjB,YAGxB,SAAS0B,EAAchN,GAW5B,IAVA,IAAIsM,EAAWtM,GAAO,GAGlBqL,EAAQ,GAERkB,EAAQ,GAGRhB,EAAO,GAEF5L,EAAI,EAAGA,EAAI2M,EAAS/L,OAAQZ,IAAK,CACxC,IAAMD,EAAI4M,EAAS3M,GAEnB,GAAKD,EAAL,CAGA,IAAMU,EAAYV,EAAEZ,UAAY,GAEhCyM,EAAKjH,KAAK5E,GACV6M,EAAMjI,KAAK5E,GAEPU,EAAUG,OAAS,EACrBiM,EAAY9M,EAAG,GAEf2L,EAAM/G,KAAK5E,IAIf,SAAS8M,EAAYC,EAAMxO,GAGzB,IAFA,IAAM0O,EAAUF,EAAK3N,UAAY,GAExBa,EAAI,EAAGA,EAAIgN,EAAQpM,OAAQZ,IAAK,CACvC,IAAMD,EAAIiN,EAAQhN,GACZS,EAAYV,EAAEZ,UAAY,GAEhCyM,EAAKjH,KAAK5E,GAENU,EAAUG,OAAS,EACrBiM,EAAY9M,EAAGzB,EAAQ,GAEvBoN,EAAM/G,KAAK5E,IAKjB,MAAO,CAAE6L,OAAMF,QAAOkB,SAGjB,SAASjM,EAAaN,GAK3B,IAJA,IAAIsM,EAAWtM,GAAO,GAElBqL,EAAQ,GAEH1L,EAAI,EAAGA,EAAI2M,EAAS/L,OAAQZ,IAAK,CACxC,IAAMD,EAAI4M,EAAS3M,GAEnB,GAAKD,GAIaA,EAAEZ,UAAY,IAElByB,OAAS,EACrBiM,EAAY9M,EAAG,GAEf2L,EAAM/G,KAAK5E,GAIf,SAAS8M,EAAYC,EAAMxO,GAGzB,IAFA,IAAM0O,EAAUF,EAAK3N,UAAY,GAExBa,EAAI,EAAGA,EAAIgN,EAAQpM,OAAQZ,IAAK,CACvC,IAAMD,EAAIiN,EAAQhN,IACAD,EAAEZ,UAAY,IAElByB,OAAS,EACrBiM,EAAY9M,EAAGzB,EAAQ,GAEvBoN,EAAM/G,KAAK5E,IAKjB,OAAO2L,EAGF,SAAS4B,EAAwB1B,GAGtC,IAHuE,IAA3B2B,EAA2BrH,UAAAtF,OAAA,QAAA6B,IAAAyD,UAAA,GAAAA,UAAA,GAAZ,GAAIlC,EAAQkC,UAAAtF,OAAA,EAAAsF,UAAA,QAAAzD,EACnEpC,EAAM,GAEDL,EAAI,EAAGA,EAAI4L,EAAKhL,OAAQZ,IAAK,CACpC,IAAID,EAAI6L,EAAK5L,GAEbD,EAAEkB,QAAU,EAEZZ,EAAIsE,KAAK5E,GAELwN,EAAanJ,QAAQrE,EAAEiE,KAAY,GACjCjE,EAAEZ,UACJqO,EAAYzN,EAAG,GAKrB,SAASyN,EAAYrN,EAAG7B,GAEtB,IADA,IAAImP,EAAOtN,EAAEhB,SACJa,EAAI,EAAGA,EAAIyN,EAAK7M,OAAQZ,IAAK,CACpC,IAAID,EAAI0N,EAAKzN,GACbD,EAAEkB,QAAU3C,EAAQ,EACpB+B,EAAIsE,KAAK5E,GAELwN,EAAanJ,QAAQrE,EAAEiE,KAAY,GACjCjE,EAAEZ,UACJqO,EAAYzN,EAAGzB,EAAQ,IAM/B,OAAO+B,EAGF,SAASqN,EAAWrN,EAAK6E,GAM9B,IALA,IAAIyH,EAAWtM,GAAO,GAGlBuM,EAAQ,GAEH5M,EAAI,EAAGA,EAAI2M,EAAS/L,OAAQZ,IAAK,CACxC,IAAMD,EAAI4M,EAAS3M,IAIR,IAFFkF,EAAGnF,EAAGC,KAGTD,EAAEZ,UAAYY,EAAEZ,SAASyB,OAAS,IACpCb,EAAEZ,SAAW0N,EAAY9M,IAG3B6M,EAAMjI,KAAK5E,IAIf,SAAS8M,EAAYc,GAKnB,IAJA,IAAMX,EAAUW,EAAKxO,UAAY,GAE3ByO,EAAgB,GAEb5N,EAAI,EAAGA,EAAIgN,EAAQpM,OAAQZ,IAAK,CACvC,IAAMD,EAAIiN,EAAQhN,IAIP,IAFFkF,EAAGnF,EAAGC,KAGTD,EAAEZ,UAAYY,EAAEZ,SAASyB,OAAS,IACpCb,EAAEZ,SAAW0N,EAAY9M,IAG3B6N,EAAcjJ,KAAK5E,IAIvB,OAAO6N,EAGT,OAAOhB,EAGF,SAASiB,IAGd,GAFgBC,UAAUC,UAEZ3J,QAAQ,WAAa,EACjC,OAAO,EAGT,IAMEpE,EACAgO,EAPEC,EAAKC,SAAStP,cAAc,KAC9BuP,EAAS,CACPrM,MAAO,QACP/C,OAAQ,QACRqP,UAAW,UAKf,IAAKpO,KAAKmO,EACRF,EAAGnP,MAAMkB,GAAKmO,EAAOnO,GAMvB,OAJAkO,SAASG,KAAKC,YAAYL,GAC1BD,EAAiBC,EAAGM,YAAcN,EAAGO,YACrCP,EAAGQ,SAEIT,EAWF,SAASU,EAATtQ,GAMJ,IALDgC,EAKChC,EALDgC,IACA6G,EAIC7I,EAJD6I,gBACAjD,EAGC5F,EAHD4F,OACAqC,EAECjI,EAFDiI,SACA4B,EACC7J,EADD6J,gBAEIxD,EAAW,GAAGyC,OAAOD,GACrB0H,EAAsB,GAAGzH,OAAOe,GAChChD,EAAMoB,EAASG,KAAK,SAAAzG,GAAC,OAAIA,EAAEiE,KAAY5D,IACvC8H,EAAa,GAAGhB,OAAOjC,EAAIkD,WAAa,IAE5C,IAAsC,IAAlClB,EAAgB7C,QAAQhE,GAAa,CACvC,IAAIwO,EAAYD,EAAoBvK,QAAQhE,GACxCwO,GAAa,GACfD,EAAoB/J,OAAOgK,EAAW,GAExCnK,EAASE,KAAKvE,GAIhB,IAAIyO,EAAwB,GAGxBC,EAAuB,GAE3BzI,EAAS/F,OAAO,SAAAP,GACd,IACIwE,GADOxE,EAAEoI,WAAa,IACZ/D,QAAQhE,IAAQ,EAC1B2O,EAAKhP,EAAEiE,GAMX,OALIO,IACmC,IAAjC0C,EAAgB7C,QAAQ2K,IAC1BD,EAAqBnK,KAAKoK,GAGvBxK,IAGTE,EAAWA,EAASyC,OAAO4H,GAE3B,IAlCC,IAAAE,EAAA,SAkCQhP,GACP,IAAIoI,EAAIF,EAAWlI,GAEfiP,EAAQ5I,EAASG,KAAK,SAAAzG,GACxB,OAAOA,EAAEiE,KAAYoE,IAGnB3H,EAAY,GACZwO,IACFxO,EAAYwO,EAAM9P,UAAY,IAMhC,IAFA,IAAI+P,GAAsB,EAEjBlP,EAAI,EAAGA,EAAIS,EAAUG,OAAQZ,IAAK,CACzC,IAAMmP,EAAO1O,EAAUT,GAAGgE,GAC1B,IAAgC,IAA5BS,EAASL,QAAQ+K,GAAc,CACjCD,GAAsB,EACtB,OAKJ,IAA4B,IAAxBA,EAA8B,EACH,IAAzBzK,EAASL,QAAQgE,IACnB3D,EAASE,KAAKyD,GAIhB,IAAI7B,EAAIoI,EAAoBzO,UAAU,SAAAH,GAAC,OAAIA,IAAMqI,IAC7C7B,GAAK,GACPoI,EAAoB/J,OAAO2B,EAAG,QAIhC,IAAoC,IAAhC0B,EAAgB7D,QAAQgE,GAAW,CACrCyG,EAAsBlK,KAAKyD,GAG3B,IAAIgH,EAAI3K,EAASvE,UAAU,SAAAH,GAAC,OAAIA,IAAMqI,IAClCgH,GAAK,GACP3K,EAASG,OAAOwK,EAAG,KA1ClBpP,EAAIkI,EAAWtH,OAAS,EAAGZ,GAAK,EAAGA,IAAKgP,EAAxChP,GAgDT,IAAIqP,EAAsBV,EAAoBzH,OAAO2H,GAErD,MAAO,CACL5H,gBAAiBxC,EACjBwD,gBAAiBoH,GAId,SAASlF,EAATlL,GAMJ,IALDmB,EAKCnB,EALDmB,IACA6G,EAIChI,EAJDgI,gBACAjD,EAGC/E,EAHD+E,OACAqC,EAECpH,EAFDoH,SACA4B,EACChJ,EADDgJ,gBAEIxD,EAAW,GAAGyC,OAAOD,GACrB0H,EAAsB,GAAGzH,OAAOe,GAEhChD,EAAMoB,EAASG,KAAK,SAAAzG,GAAC,OAAIA,EAAEiE,KAAY5D,IAEvC8H,EAAa,GAAGhB,OAAOjC,EAAIkD,WAAa,IAGxC0G,EAAwB,GAGxBS,EAAe,GAYnB,GAVAjJ,EAAS/F,OAAO,SAAAP,GACd,IACIwE,GADOxE,EAAEoI,WAAa,IACZ/D,QAAQhE,IAAQ,EAI9B,OAHImE,GACF+K,EAAa3K,KAAK5E,EAAEiE,IAEfO,IAIL+K,EAAa1O,OAAS,EACxB,IAD2B,IAAA2O,EAAA,SAClBvP,GACP,IAAMuG,EAAI+I,EAAatP,GAGnBoP,EAAI3K,EAASvE,UAAU,SAAAH,GAAC,OAAIA,IAAMwG,IAClC6I,GAAK,GACP3K,EAASG,OAAOwK,EAAG,GAIrB,IAAII,EAAIb,EAAoBzO,UAAU,SAAAH,GAAC,OAAIA,IAAMwG,IAC7CiJ,GAAK,GACPb,EAAoB/J,OAAO4K,EAAG,IAZzBxP,EAAI,EAAGA,EAAIsP,EAAa1O,OAAQZ,IAAKuP,EAArCvP,GAkBX,IAAIA,EAAIyE,EAASvE,UAAU,SAAAH,GAAC,OAAIA,IAAMK,IAClCJ,GAAK,GACPyE,EAASG,OAAO5E,EAAG,GAIrB,IAAIoP,EAAIT,EAAoBzO,UAAU,SAAAH,GAAC,OAAIA,IAAMK,IAC7CgP,GAAK,GACPT,EAAoB/J,OAAOwK,EAAG,GAGhC,IAtDC,IAAAK,EAAA,SAsDQzP,GASP,IARA,IAAIoI,EAAIF,EAAWlI,GACfS,EAAY4F,EAAS/F,OAAO,SAAAP,GAC9B,OAAQA,EAAEoI,WAAa,IAAI/D,QAAQgE,IAAM,IAIvCsH,GAAwB,EAEnB1P,EAAI,EAAGA,EAAIS,EAAUG,OAAQZ,IAAK,CACzC,IAAMmP,EAAO1O,EAAUT,GAAGgE,GAC1B,GAAIS,EAASL,QAAQ+K,IAAS,EAAG,CAC/BO,GAAwB,EACxB,OAKJ,IAA8B,IAA1BA,EAAgC,CAElC,IAAIN,EAAI3K,EAASvE,UAAU,SAAAH,GAAC,OAAIA,IAAMqI,IAClCgH,GAAK,GACP3K,EAASG,OAAOwK,EAAG,GAIrB,IAAI7I,EAAIoI,EAAoBzO,UAAU,SAAAH,GAAC,OAAIA,IAAMqI,IAC7C7B,GAAK,GACPoI,EAAoB/J,OAAO2B,EAAG,QAIhC,IAAoC,IAAhC0B,EAAgB7D,QAAQgE,GAAW,CACrCyG,EAAsBlK,KAAKyD,GAG3B,IAAIgH,EAAI3K,EAASvE,UAAU,SAAAH,GAAC,OAAIA,IAAMqI,IAClCgH,GAAK,GACP3K,EAASG,OAAOwK,EAAG,KAtClBpP,EAAIkI,EAAWtH,OAAS,EAAGZ,GAAK,EAAGA,IAAKyP,EAAxCzP,GA4CT,IAAIqP,EAAsBV,EAAoBzH,OAAO2H,GAErD,MAAO,CACL5H,gBAAiBxC,EACjBwD,gBAAiBoH,GAad,SAAStF,EAATrK,GAOJ,IANDU,EAMCV,EANDU,IACA6G,EAKCvH,EALDuH,gBACAjD,EAICtE,EAJDsE,OACAqC,EAGC3G,EAHD2G,SACA4B,EAECvI,EAFDuI,gBAEC0H,EAAAjQ,EADDoH,0BACC,IAAA6I,EADoB,GACpBA,EACGlL,EAAW,GAAGyC,OAAOD,GACrB0H,EAAsB,GAAGzH,OAAOe,GAChChD,EAAMoB,EAASG,KAAK,SAAAzG,GAAC,OAAIA,EAAEiE,KAAY5D,IACvC8H,EAAa,GAAGhB,OAAOjC,EAAIkD,WAAa,IAG5C,SAASyH,EAAUC,GACjB,OAAgD,IAAzC/I,EAAmB1C,QAAQyL,GAIpC,IAAuB,IAAnBD,EAAUxP,GACZ,MAAO,CACL6G,kBACAgB,mBAMJ,IADA,IAAI6H,GAAqB,EAChB9P,EAAI,EAAGA,EAAIkI,EAAWtH,OAAQZ,IAAK,CAE1C,IAAsB,IAAlB4P,EADO1H,EAAWlI,IACO,CAC3B8P,GAAqB,EACrB,OAIJ,IAA2B,IAAvBA,EACF,MAAO,CACL7I,kBACAgB,mBAIJ,IAAsC,IAAlChB,EAAgB7C,QAAQhE,GAAa,CACvC,IAAIwO,EAAYD,EAAoBvK,QAAQhE,GACxCwO,GAAa,GACfD,EAAoB/J,OAAOgK,EAAW,GAGxCnK,EAASE,KAAKvE,GAIhB,IAAIyO,EAAwB,GAGxBC,EAAuB,GAE3BzI,EAAS/F,OAAO,SAAAP,GACd,IAAIgQ,EAAOhQ,EAAEoI,WAAa,GACtB5D,EAAKwL,EAAK3L,QAAQhE,IAAQ,EAC1B2O,EAAKhP,EAAEiE,GACX,GAAIO,IACmC,IAAjC0C,EAAgB7C,QAAQ2K,GAAY,CAItC,IAFA,IAAIiB,EAAiBJ,EAAUb,GAEtB/O,EAAI,EAAGA,EAAI+P,EAAKnP,OAAQZ,IAAK,CAEpC,IAAuB,IAAnB4P,EADQG,EAAK/P,IACa,CAC5BgQ,GAAiB,EACjB,OAIJA,GAAkBlB,EAAqBnK,KAAKoK,GAGhD,OAAOxK,IAGTE,EAAWA,EAASyC,OAAO4H,GAE3B,IA5EC,IAAAmB,EAAA,SA4EQjQ,GACP,IAAIoI,EAAIF,EAAWlI,GAEfiP,EAAQ5I,EAASG,KAAK,SAAAzG,GACxB,OAAOA,EAAEiE,KAAYoE,IAGnB3H,EAAY,GACZwO,IACFxO,EAAYwO,EAAM9P,UAAY,IAMhC,IAFA,IAAI+P,GAAsB,EAEjBlP,EAAI,EAAGA,EAAIS,EAAUG,OAAQZ,IAAK,CACzC,IAAMmP,EAAO1O,EAAUT,GAAGgE,GAC1B,GAAI4L,EAAUT,KAAqC,IAA5B1K,EAASL,QAAQ+K,GAAc,CACpDD,GAAsB,EACtB,OAKJ,IAA4B,IAAxBA,EAA8B,EACH,IAAzBzK,EAASL,QAAQgE,IACnBwH,EAAUxH,IAAM3D,EAASE,KAAKyD,GAIhC,IAAI7B,EAAIoI,EAAoBzO,UAAU,SAAAH,GAAC,OAAIA,IAAMqI,IAC7C7B,GAAK,GACPoI,EAAoB/J,OAAO2B,EAAG,QAIhC,IAAoC,IAAhC0B,EAAgB7D,QAAQgE,GAAW,CACrCwH,EAAUxH,IAAMyG,EAAsBlK,KAAKyD,GAG3C,IAAIgH,EAAI3K,EAASvE,UAAU,SAAAH,GAAC,OAAIA,IAAMqI,IAClCgH,GAAK,GACP3K,EAASG,OAAOwK,EAAG,KA1ClBpP,EAAIkI,EAAWtH,OAAS,EAAGZ,GAAK,EAAGA,IAAKiQ,EAAxCjQ,GAgDT,IAAIqP,EAAsBV,EAAoBzH,OAAO2H,GAErD,MAAO,CACL5H,gBAAiBxC,EACjBwD,gBAAiBoH,GAhnBrBa,EAAAnQ,EAAAoQ,EAAA,sBAAA1E,IAAAyE,EAAAnQ,EAAAoQ,EAAA,sBAAA9C,IAAA6C,EAAAnQ,EAAAoQ,EAAA,sBAAAxP,IAAAuP,EAAAnQ,EAAAoQ,EAAA,sBAAAzC,IAAAwC,EAAAnQ,EAAAoQ,EAAA,sBAAAhG,IAAA+F,EAAAnQ,EAAAoQ,EAAA,sBAAApG","file":"static/js/examples-index~examples-props.8bb7843e.js","sourcesContent":["import React, { useMemo } from \"react\";\r\nimport { getTreeLeafs } from \"./utils\";\r\n\r\nconst Column = ({ cell, depth, columnDepth, headerHeight }) => {\r\n  let h = (columnDepth - depth + 1) * headerHeight;\r\n  return (\r\n    <div className=\"table-head-group-children\" style={{ height: h }}>\r\n      {cell}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ColumnGroup = ({ title, children, headerHeight }) => {\r\n  return (\r\n    <div className=\"GroupCell\" style={{ display: \"block\" }}>\r\n      <div\r\n        style={{\r\n          height: headerHeight,\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          borderRight: \"1px solid #eeeeee\"\r\n        }}\r\n      >\r\n        {title}\r\n      </div>\r\n      <div\r\n        style={{\r\n          height: headerHeight,\r\n          display: \"flex\",\r\n          borderTop: \"1px solid #eeeeee\"\r\n        }}\r\n      >\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst renderColumns = ({\r\n  columns,\r\n  cells,\r\n  columnList,\r\n  columnDepth,\r\n  headerHeight\r\n}) => {\r\n  return columns.map((d, i) => {\r\n    let columnIndex = columnList.findIndex(c => c.key === d.key);\r\n    let cell = cells[columnIndex];\r\n\r\n    let arr = columnList.filter(d => !d.__placeholder__);\r\n\r\n    let frozen = \"\";\r\n    arr[0] && (frozen = arr[0].frozen);\r\n\r\n    let childrens = d.children || [];\r\n\r\n    if (frozen === \"left\" || frozen === \"right\") {\r\n      childrens = childrens.filter(d => !!d.frozen);\r\n    } else {\r\n      childrens = childrens.filter(d => !d.frozen);\r\n\r\n      let leafs = getTreeLeafs(childrens);\r\n\r\n      //当非冻结列下的子级别均被冻结，则不渲染分组表头\r\n      let notFrozenColumns = leafs.filter(d => !d.frozen);\r\n      if (childrens.length > 0 && notFrozenColumns.length === 0) {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    if (childrens.length > 0) {\r\n      return (\r\n        <ColumnGroup\r\n          key={d.dataIndex || i}\r\n          {...d}\r\n          depth={d.__depth}\r\n          columnDepth={columnDepth}\r\n          cell={cell}\r\n          headerHeight={headerHeight}\r\n        >\r\n          {renderColumns({\r\n            columns: childrens,\r\n            cells,\r\n            columnList,\r\n            columnDepth,\r\n            headerHeight\r\n          })}\r\n        </ColumnGroup>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Column\r\n        key={d.dataIndex || i}\r\n        {...d}\r\n        cell={cells[columnIndex]}\r\n        depth={d.__depth}\r\n        columnDepth={columnDepth}\r\n        headerHeight={headerHeight}\r\n      />\r\n    );\r\n  });\r\n};\r\n\r\nfunction GroupHeader(props) {\r\n  return <React.Fragment>{renderColumns(props)}</React.Fragment>;\r\n}\r\n\r\nconst MemoHeader = ({\r\n  cells = [],\r\n  columns,\r\n  columnList,\r\n  columnDepth,\r\n  headerHeight = 40\r\n}) => {\r\n  const memoizedValue = useMemo(() => {\r\n    return (\r\n      <GroupHeader\r\n        cells={cells}\r\n        columns={columns}\r\n        columnList={columnList}\r\n        columnDepth={columnDepth}\r\n        headerHeight={headerHeight}\r\n      />\r\n    );\r\n  }, [cells]);\r\n\r\n  return memoizedValue;\r\n};\r\n\r\nexport default MemoHeader;\r\n","import React from \"react\";\r\n\r\nfunction ExpandLoading() {\r\n  return (\r\n    <svg\r\n      viewBox=\"0 0 1024 1024\"\r\n      className=\"tablex-loading-icon\"\r\n      data-icon=\"loading\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      fill=\"currentColor\"\r\n      aria-hidden=\"true\"\r\n      focusable=\"false\"\r\n    >\r\n      <path d=\"M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 0 0-94.3-139.9 437.71 437.71 0 0 0-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nconst ExpandIcon = props => {\r\n  let { loading, expandable, expanded, onExpand, isLeaf, depth } = props;\r\n\r\n  let cls = \"table__expandicon\";\r\n\r\n  if (loading === true) {\r\n    return <ExpandLoading />;\r\n  }\r\n\r\n  if (expandable === undefined) {\r\n    return null;\r\n  }\r\n\r\n  if (isLeaf === false) {\r\n    if (expanded === true) {\r\n      cls += \" expanded\";\r\n    } else {\r\n      cls += \" collapsed\";\r\n    }\r\n  } else {\r\n    cls = \"table__expandicon--placeholder\";\r\n  }\r\n\r\n  return (\r\n    <span\r\n      className={cls}\r\n      style={{ marginLeft: depth * 20 }}\r\n      onClick={e => {\r\n        e.stopPropagation();\r\n        onExpand(!expanded);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ExpandIcon;\r\n","import React from \"react\";\r\n\r\nconst Checkbox = props => {\r\n    let { indeterminate, onChange, value, checked, disabled } = props;\r\n\r\n    let cls = \"\";\r\n\r\n    if (indeterminate === true) {\r\n        cls = \"table__checkbox--indeterminate\";\r\n    }\r\n\r\n    if (checked === true) {\r\n        cls = \"table__checkbox--checked\";\r\n    }\r\n\r\n    if (disabled === true) {\r\n        cls = \"table__checkbox--disabled\";\r\n    }\r\n\r\n    return (\r\n        <span\r\n            className={\"table__checkbox \" + cls}\r\n            onClick={e => {\r\n                e.stopPropagation();\r\n                if (typeof onChange === \"function\" && disabled != true) {\r\n                    onChange(!checked, props.value);\r\n                }\r\n            }}\r\n        >\r\n            <input\r\n                type=\"checkbox\"\r\n                value={value}\r\n                disabled={disabled}\r\n                className=\"table__checkbox__input\"\r\n            />\r\n            <span className=\"table__checkbox__inner\" />\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default Checkbox;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport BaseTable, { AutoResizer, unflatten } from \"react-base-table\";\r\nimport cloneDeep from \"lodash/cloneDeep\";\r\nimport {\r\n    treeToList,\r\n    removeCheckedKey,\r\n    addCheckedKeyWithDisabled\r\n} from \"./utils\";\r\nimport TableHeader from \"./GroupHeader\";\r\nimport ExpandIcon from \"./ExpandIcon\";\r\nimport Checkbox from \"./Checkbox\";\r\n\r\nimport \"./styles.css\";\r\n\r\nclass Table extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            columns: [],\r\n            columnList: [],\r\n            columnDepth: 0,\r\n            data: [],\r\n            flatData: [],\r\n            loadingKeys: [],\r\n            prevProps: null,\r\n            rowHeight: 40,\r\n            selectedRowKeys: [],\r\n            disabledSelectKeys: [],\r\n            halfCheckedKeys: [],\r\n            selectMode: \"\",\r\n            rowKey: \"\",\r\n            orderNumber: false,\r\n            checkStrictly: false\r\n        };\r\n\r\n        if (typeof props.initRef === \"function\") {\r\n            props.initRef(this);\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        let {\r\n            rowKey,\r\n            columns,\r\n            loading,\r\n            selectMode,\r\n            disabledSelectKeys,\r\n            orderNumber,\r\n            checkStrictly,\r\n            resizable\r\n        } = nextProps;\r\n\r\n        let data = nextProps.data || nextProps.dataSource || [];\r\n\r\n        let nextState = null;\r\n\r\n        if (prevState.prevProps !== nextProps) {\r\n            let columnsArr = [].concat(columns);\r\n\r\n            //\r\n            if (selectMode === \"multiple\") {\r\n                columnsArr.unshift({\r\n                    key: \"__checkbox_column\",\r\n                    dataKey: \"__checkbox_column\",\r\n                    __type: \"__checkbox_column\",\r\n                    width: 50,\r\n                    align: \"center\"\r\n                });\r\n            }\r\n\r\n            if (orderNumber === true) {\r\n                columnsArr.unshift({\r\n                    key: \"__ordernumber_column\",\r\n                    dataIndex: \"__ordernumber_column\",\r\n                    __type: \"__ordernumber_column\",\r\n                    width: 50,\r\n                    title: \"No.\",\r\n                    align: \"center\"\r\n                });\r\n            }\r\n            //\r\n\r\n            let { leafs: columnList, maxDepth: columnDepth, list } = treeToList(\r\n                columnsArr\r\n            );\r\n\r\n            //兼容antd table column的属性\r\n            list.forEach(d => {\r\n                d.frozen = d.fixed;\r\n                d.key = d.key || d.dataIndex;\r\n                d.dataKey = d.dataIndex;\r\n\r\n                if (!d.hasOwnProperty(\"resizable\")) {\r\n                    d.resizable = resizable;\r\n                }\r\n\r\n                if (typeof d.render === \"function\") {\r\n                    d.cellRenderer = ({\r\n                        cellData,\r\n                        columns,\r\n                        column,\r\n                        columnIndex,\r\n                        rowData,\r\n                        rowIndex\r\n                    }) => {\r\n                        let r = d.render(cellData, rowData, rowIndex);\r\n\r\n                        if (React.isValidElement(r)) {\r\n                            return r;\r\n                        }\r\n\r\n                        if (r && r.children) {\r\n                            if (React.isValidElement(r.children)) {\r\n                                return r.children;\r\n                            }\r\n                        }\r\n                        return r;\r\n                    };\r\n                }\r\n            });\r\n            //\r\n\r\n            let { list: dataArr } = treeToList(data, rowKey);\r\n\r\n            nextState = {\r\n                rowKey,\r\n                columns: columnsArr,\r\n                columnList: columnList,\r\n                columnDepth: columnDepth,\r\n                data: data,\r\n                flatData: dataArr,\r\n                loading: !!loading,\r\n                selectMode,\r\n                disabledSelectKeys,\r\n                rowKey,\r\n                orderNumber,\r\n                checkStrictly\r\n            };\r\n\r\n            if (\"selectedRowKeys\" in nextProps) {\r\n                nextState.selectedRowKeys = nextProps.selectedRowKeys || [];\r\n            }\r\n\r\n            nextState.prevProps = nextProps;\r\n        }\r\n\r\n        return nextState;\r\n    }\r\n\r\n    getScrollbarSize = () => {\r\n        return 6;\r\n    };\r\n\r\n    components = {\r\n        ExpandIcon: ExpandIcon\r\n    };\r\n\r\n    expandIconProps = ({ rowData }) => {\r\n        let rowKey = this.props.rowKey;\r\n        let key = rowData[rowKey];\r\n\r\n        return {\r\n            rowKey: key,\r\n            rowData,\r\n            isLeaf: rowData.children instanceof Array ? false : true,\r\n            loading: this.state.loadingKeys.indexOf(key) > -1\r\n        };\r\n    };\r\n\r\n    /**\r\n     * 行是否正在加载子级\r\n     */\r\n    isLoadingChildren = key => {\r\n        let { loadingKeys } = this.state;\r\n\r\n        return loadingKeys.indexOf(key) > -1;\r\n    };\r\n\r\n    /**\r\n     * 设置行的子级加载状态\r\n     */\r\n    setLoadingChildren = (key, bl, callback) => {\r\n        let { loadingKeys } = this.state;\r\n\r\n        let i = loadingKeys.indexOf(key);\r\n\r\n        let nextKeys = [...loadingKeys];\r\n\r\n        if (bl === true) {\r\n            if (i === -1) {\r\n                nextKeys.push(key);\r\n            }\r\n        } else {\r\n            if (i > -1) {\r\n                nextKeys.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            loadingKeys: nextKeys,\r\n            data: cloneDeep(this.state.data)\r\n        });\r\n    };\r\n\r\n    /**\r\n     * 异步加载子级数据\r\n     */\r\n    loadChildrenData = (key, row) => {\r\n        let fn = this.props.loadChildrenData;\r\n\r\n        if (typeof fn === \"function\") {\r\n            let res = fn(row);\r\n\r\n            if (res && res.constructor.name === \"Promise\") {\r\n                this.setLoadingChildren(key, true);\r\n\r\n                res.then(childrens => {\r\n                    this.setLoadingChildren(key, false);\r\n                });\r\n\r\n                res.catch(e => {\r\n                    this.setLoadingChildren(key, false);\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onRowExpand = ({ expanded, rowData, rowIndex, rowKey }) => {\r\n        if (\r\n            rowData &&\r\n            rowData.children instanceof Array &&\r\n            rowData.children.length > 0\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (expanded === true) {\r\n            this.loadChildrenData(rowKey, rowData);\r\n        }\r\n    };\r\n\r\n    headerRenderer = ({ cells, columns, headerIndex }) => {\r\n        return (\r\n            <TableHeader\r\n                cells={cells}\r\n                columns={this.state.columns}\r\n                columnList={columns}\r\n                columnDepth={this.state.columnDepth}\r\n                headerIndex={headerIndex}\r\n                headerHeight={this.state.rowHeight}\r\n            />\r\n        );\r\n    };\r\n\r\n    onScroll = ({ scrollLeft, horizontalScrollDirection }) => {};\r\n\r\n    /** 通过rowKey获取数据行 */\r\n    getRowsByKeys = (keys = []) => {\r\n        let rows = [];\r\n        let { rowKey, flatData: arr } = this.state;\r\n\r\n        keys.forEach(k => {\r\n            let row = arr.find(r => r[rowKey] === k);\r\n            if (row != null) {\r\n                rows.push(Object.assign({}, row));\r\n            }\r\n        });\r\n\r\n        return rows;\r\n    };\r\n\r\n    /** 是否为单选 */\r\n    isSingleSelect = () => {\r\n        return this.state.selectMode === \"single\";\r\n    };\r\n\r\n    /** 是否为多选 */\r\n    isMultipleSelect = () => {\r\n        return this.state.selectMode === \"multiple\";\r\n    };\r\n\r\n    /** 当前行是否被禁用选择 */\r\n    isDisabledSelect = key => {\r\n        let bl = this.state.disabledSelectKeys.findIndex(d => d === key) > -1;\r\n        return bl;\r\n    };\r\n\r\n    /** 是否为自动添加的扩展列 */\r\n    isExtraColumn = (type = \"\") => {\r\n        return [\"__checkbox_column\", \"__ordernumber_column\"].indexOf(type) > -1;\r\n    };\r\n\r\n    onSelectChange = rowKey => {\r\n        let { selectedRowKeys } = this.state;\r\n        let i = selectedRowKeys.indexOf(rowKey);\r\n        let nextKeys = [].concat(selectedRowKeys);\r\n\r\n        if (this.isDisabledSelect(rowKey)) {\r\n            return;\r\n        }\r\n\r\n        if (this.isSingleSelect()) {\r\n            if (i > -1) {\r\n                nextKeys = [];\r\n            } else {\r\n                nextKeys = [rowKey];\r\n            }\r\n        } else if (this.isMultipleSelect()) {\r\n            if (i > -1) {\r\n                nextKeys.splice(i, 1);\r\n            } else {\r\n                nextKeys.push(rowKey);\r\n            }\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        if (typeof this.props.onSelectChange === \"function\") {\r\n            this.props.onSelectChange(\r\n                nextKeys,\r\n                this.getRowsByKeys(nextKeys),\r\n                rowKey\r\n            );\r\n        }\r\n\r\n        this.setState({ selectedRowKeys: nextKeys });\r\n    };\r\n\r\n    rowEventHandlers = {\r\n        onClick: ({ rowData, rowIndex, rowKey, event }) => {\r\n            if (this.isSingleSelect()) {\r\n                this.onSelectChange(rowKey);\r\n            }\r\n\r\n            if (this.isMultipleSelect()) {\r\n                let { selectedRowKeys } = this.state;\r\n                let isSelected = selectedRowKeys.indexOf(rowKey) > -1;\r\n                let isEnabled = !this.isDisabledCheck(rowKey, rowData);\r\n                isEnabled && this.onCheckChange(!isSelected, rowKey);\r\n            }\r\n        }\r\n    };\r\n\r\n    onCheckChange = (bl, value) => {\r\n        if (this.state.checkStrictly === false) {\r\n            this.onSelectChange(value);\r\n        } else {\r\n            if (bl === true) {\r\n                this.addChecked(value);\r\n            } else {\r\n                this.removeChecked(value);\r\n            }\r\n        }\r\n    };\r\n\r\n    /** 添加复选行 */\r\n    addChecked(key) {\r\n        let {\r\n            selectedRowKeys,\r\n            rowKey,\r\n            flatData,\r\n            halfCheckedKeys,\r\n            disabledSelectKeys\r\n        } = this.state;\r\n\r\n        let {\r\n            selectedRowKeys: nextKeys,\r\n            halfCheckedKeys: nextHalflCheckedKeys\r\n        } = addCheckedKeyWithDisabled({\r\n            key,\r\n            selectedRowKeys,\r\n            rowKey,\r\n            flatData,\r\n            halfCheckedKeys,\r\n            disabledSelectKeys\r\n        });\r\n\r\n        if (typeof this.props.onSelectChange === \"function\") {\r\n            this.props.onSelectChange(\r\n                nextKeys,\r\n                this.getRowsByKeys(nextKeys),\r\n                rowKey\r\n            );\r\n        }\r\n\r\n        this.setState({\r\n            selectedRowKeys: nextKeys,\r\n            halfCheckedKeys: nextHalflCheckedKeys,\r\n            data: cloneDeep(this.state.data)\r\n        });\r\n    }\r\n\r\n    /** 移除复选行 */\r\n    removeChecked(key) {\r\n        let { selectedRowKeys, rowKey, flatData, halfCheckedKeys } = this.state;\r\n\r\n        let {\r\n            selectedRowKeys: nextKeys,\r\n            halfCheckedKeys: nextHalflCheckedKeys\r\n        } = removeCheckedKey({\r\n            key,\r\n            selectedRowKeys,\r\n            rowKey,\r\n            flatData,\r\n            halfCheckedKeys\r\n        });\r\n\r\n        if (typeof this.props.onSelectChange === \"function\") {\r\n            this.props.onSelectChange(\r\n                nextKeys,\r\n                this.getRowsByKeys(nextKeys),\r\n                rowKey\r\n            );\r\n        }\r\n\r\n        this.setState({\r\n            selectedRowKeys: nextKeys,\r\n            halfCheckedKeys: nextHalflCheckedKeys,\r\n            data: cloneDeep(this.state.data)\r\n        });\r\n    }\r\n\r\n    onCheckAllChange = bl => {\r\n        if (bl === true) {\r\n            this.addAllChecked();\r\n        } else {\r\n            this.removeAllChecked();\r\n        }\r\n    };\r\n\r\n    addAllChecked = () => {\r\n        let { rowKey, flatData } = this.state;\r\n        let nextSelected = [];\r\n        let arr = [];\r\n\r\n        flatData.forEach(d => {\r\n            let k = d[rowKey];\r\n\r\n            let bl = !this.isDisabledCheck(k, d);\r\n\r\n            if (bl) {\r\n                nextSelected.push(k);\r\n                arr.push(d);\r\n            }\r\n        });\r\n\r\n        if (typeof this.props.onSelectChange === \"function\") {\r\n            this.props.onSelectChange(nextSelected, arr, \"\");\r\n        }\r\n\r\n        this.setState({\r\n            selectedRowKeys: nextSelected,\r\n            halfCheckedKeys: [],\r\n            data: cloneDeep(this.state.data)\r\n        });\r\n    };\r\n\r\n    removeAllChecked = () => {\r\n        if (typeof this.props.onSelectChange === \"function\") {\r\n            this.props.onSelectChange([], [], \"\");\r\n        }\r\n\r\n        this.setState({\r\n            selectedRowKeys: [],\r\n            halfCheckedKeys: [],\r\n            data: cloneDeep(this.state.data)\r\n        });\r\n    };\r\n\r\n    /** 判断行/行父级是否被禁用选中 */\r\n    isDisabledCheck = (key, rowData) => {\r\n        let arr = this.state.disabledSelectKeys;\r\n        let bl = arr.indexOf(key) > -1;\r\n\r\n        if (bl === false) {\r\n            let parentKeys = rowData.__parents || [];\r\n\r\n            for (let i = 0; i < parentKeys.length; i++) {\r\n                const p = parentKeys[i];\r\n                if (arr.indexOf(p) > -1) {\r\n                    bl = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return bl;\r\n    };\r\n\r\n    checkboxCellRender = ({ rowData }) => {\r\n        let { rowKey, selectedRowKeys, halfCheckedKeys } = this.state;\r\n        let key = rowData[rowKey];\r\n\r\n        let attr = {};\r\n\r\n        if (selectedRowKeys.indexOf(key) > -1) {\r\n            attr.checked = true;\r\n        }\r\n\r\n        if (halfCheckedKeys.indexOf(key) > -1) {\r\n            attr.indeterminate = true;\r\n        }\r\n\r\n        if (this.isDisabledCheck(key, rowData)) {\r\n            attr.disabled = true;\r\n        }\r\n\r\n        return (\r\n            <Checkbox\r\n                rowData={rowData}\r\n                value={key}\r\n                onChange={this.onCheckChange}\r\n                {...attr}\r\n            />\r\n        );\r\n    };\r\n\r\n    checkboxHeadRender = ({ rowData }) => {\r\n        let { selectedRowKeys, halfCheckedKeys, flatData, rowKey } = this.state;\r\n\r\n        let isCheckedAll = true;\r\n\r\n        for (let i = 0; i < flatData.length; i++) {\r\n            const key = flatData[i][rowKey];\r\n\r\n            if (this.isDisabledCheck(key, flatData[i])) {\r\n                continue;\r\n            }\r\n\r\n            if (selectedRowKeys.indexOf(key) === -1) {\r\n                isCheckedAll = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        let attr = {};\r\n\r\n        if (isCheckedAll === true) {\r\n            attr.checked = true;\r\n        } else {\r\n            if (selectedRowKeys.length > 0 || halfCheckedKeys.length > 0) {\r\n                attr.indeterminate = true;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Checkbox\r\n                rowData={rowData}\r\n                {...attr}\r\n                onChange={this.onCheckAllChange}\r\n            />\r\n        );\r\n    };\r\n\r\n    orderNumberCellRender = ({ rowIndex }) => {\r\n        return <span>{rowIndex + 1}</span>;\r\n    };\r\n\r\n    rowClassName = ({ rowData, rowIndex }) => {\r\n        let { rowKey, selectedRowKeys } = this.state;\r\n        let key = rowData[rowKey];\r\n        let isSelected = false;\r\n\r\n        if (selectedRowKeys.indexOf(key) > -1) {\r\n            isSelected = true;\r\n        }\r\n\r\n        let cls = [];\r\n\r\n        if (rowIndex % 2 === 0) {\r\n            cls.push(\"table__row--even\");\r\n        } else {\r\n            cls.push(\"table__row--odd\");\r\n        }\r\n\r\n        if (isSelected) {\r\n            cls.push(\"table__row--selected\");\r\n        }\r\n\r\n        let tempCls = \"\";\r\n        if (typeof this.props.rowClassName === \"function\") {\r\n            tempCls = this.props.rowClassName(record, index);\r\n        }\r\n\r\n        tempCls && cls.push(tempCls);\r\n\r\n        return cls.join(\" \");\r\n    };\r\n\r\n    tableApi = {\r\n        getSelectedKeys: () => {\r\n            return this.state.selectedRowKeys;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let props = this.props;\r\n\r\n        let expandColumnKey = this.props.expandColumnKey;\r\n\r\n        if (!expandColumnKey && this.props.columns.length > 0) {\r\n            expandColumnKey = this.props.columns[0].dataKey;\r\n        }\r\n\r\n        let { columnDepth, columnList, data, rowHeight } = this.state;\r\n\r\n        let checkboxColumn = columnList.find(\r\n            d => d.__type === \"__checkbox_column\"\r\n        );\r\n        let orderNumberColumn = columnList.find(\r\n            d => d.__type === \"__ordernumber_column\"\r\n        );\r\n\r\n        if (checkboxColumn) {\r\n            checkboxColumn.cellRenderer = this.checkboxCellRender;\r\n            checkboxColumn.headerRenderer = this.checkboxHeadRender;\r\n        }\r\n\r\n        if (orderNumberColumn) {\r\n            orderNumberColumn.cellRenderer = this.orderNumberCellRender;\r\n        }\r\n\r\n        return (\r\n            <BaseTable\r\n                {...props}\r\n                fixed={true}\r\n                data={data}\r\n                columns={columnList}\r\n                expandColumnKey={expandColumnKey}\r\n                className=\"table__striped\"\r\n                classPrefix=\"table\"\r\n                getScrollbarSize={this.getScrollbarSize}\r\n                expandIconProps={this.expandIconProps}\r\n                components={this.components}\r\n                onRowExpand={this.onRowExpand}\r\n                rowHeight={rowHeight}\r\n                headerHeight={[(columnDepth + 1) * rowHeight]}\r\n                headerRenderer={this.headerRenderer}\r\n                onScroll={this.onScroll}\r\n                rowEventHandlers={this.rowEventHandlers}\r\n                rowClassName={this.rowClassName}\r\n                overscanRowCount={2}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst AutoResizeTable = props => {\r\n    return (\r\n        <AutoResizer>\r\n            {({ width, height }) => (\r\n                <Table {...props} width={width} height={height} />\r\n            )}\r\n        </AutoResizer>\r\n    );\r\n};\r\n\r\nAutoResizeTable.defaultProps = {\r\n    rowKey: \"key\",\r\n    columns: [],\r\n    dataSource: [],\r\n    selectMode: \"single\",\r\n    selectedRowKeys: [],\r\n    disabledSelectKeys: [],\r\n    orderNumber: false,\r\n    checkStrictly: true,\r\n    resizable: true\r\n};\r\n\r\nAutoResizeTable.propTypes = {\r\n    rowKey: PropTypes.string.isRequired,\r\n    columns: PropTypes.array,\r\n    dataSource: PropTypes.array,\r\n    /** 选择模式：多选 单选 不可选择 */\r\n    selectMode: PropTypes.oneOf([\"multiple\", \"single\", \"none\"]),\r\n    /** 选中的行键值 */\r\n    selectedRowKeys: PropTypes.array,\r\n    /** 将被禁用选中的行key */\r\n    disabledSelectKeys: PropTypes.array,\r\n    /**\r\n     * 行选择事件\r\n     *  (selectedKeys,selectedRows,triggerKey) => void\r\n     * */\r\n    onSelectChange: PropTypes.func,\r\n    /** 是否显示序号列 */\r\n    orderNumber: PropTypes.bool,\r\n    /** 列是否可设置宽度，优先级小于column.resizable */\r\n    resizable: PropTypes.bool,\r\n    /** 多选模式是否级联控制checkbox选中状态 */\r\n    checkStrictly: PropTypes.bool,\r\n    /** table实例回调\r\n     * (ins:React.Element) => void\r\n     */\r\n    initRef: PropTypes.func\r\n};\r\n\r\nexport default AutoResizeTable;\r\n","export function treeToList(arr, idField = \"id\") {\r\n  let treeList = arr || [];\r\n\r\n  //末级节点\r\n  let leafs = [];\r\n\r\n  //根\r\n  let roots = [];\r\n\r\n  //所有节点\r\n  let list = [];\r\n\r\n  let maxDepth = 0;\r\n\r\n  for (let i = 0; i < treeList.length; i++) {\r\n    const d = treeList[i];\r\n\r\n    if (!d) {\r\n      continue;\r\n    }\r\n\r\n    const childrens = d.children || [];\r\n\r\n    d.__depth = 0;\r\n\r\n    list.push(d);\r\n    roots.push(d);\r\n\r\n    if (childrens.length > 0) {\r\n      getChildren(d, 0, []);\r\n    } else {\r\n      leafs.push(d);\r\n    }\r\n  }\r\n\r\n  function getChildren(item, depth, parents) {\r\n    const tempArr = item.children || [];\r\n\r\n    for (let i = 0; i < tempArr.length; i++) {\r\n      const d = tempArr[i];\r\n      const childrens = d.children || [];\r\n\r\n      d.__depth = depth + 1;\r\n      d.__parent = {\r\n        title: item.title,\r\n        key: item[idField],\r\n        width: item.width\r\n      };\r\n\r\n      d.__parents = [].concat(parents).concat([item[idField]]);\r\n\r\n      list.push(d);\r\n\r\n      if (childrens.length > 0) {\r\n        getChildren(d, d.__depth, [].concat(d.__parents));\r\n      } else {\r\n        leafs.push(d);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (leafs.length > 0) {\r\n    let sortedArr = [].concat(leafs);\r\n    sortedArr.sort((a, b) => b.__depth - a.__depth);\r\n    maxDepth = sortedArr[0].__depth;\r\n  }\r\n\r\n  return { list, leafs, roots, maxDepth };\r\n}\r\n\r\nexport function treeToFlatten(arr) {\r\n  let treeList = arr || [];\r\n\r\n  //末级节点\r\n  let leafs = [];\r\n  //根\r\n  let roots = [];\r\n\r\n  //所有节点\r\n  let list = [];\r\n\r\n  for (let i = 0; i < treeList.length; i++) {\r\n    const d = treeList[i];\r\n\r\n    if (!d) {\r\n      continue;\r\n    }\r\n    const childrens = d.children || [];\r\n\r\n    list.push(d);\r\n    roots.push(d);\r\n\r\n    if (childrens.length > 0) {\r\n      getChildren(d, 0);\r\n    } else {\r\n      leafs.push(d);\r\n    }\r\n  }\r\n\r\n  function getChildren(item, depth) {\r\n    const tempArr = item.children || [];\r\n\r\n    for (let i = 0; i < tempArr.length; i++) {\r\n      const d = tempArr[i];\r\n      const childrens = d.children || [];\r\n\r\n      list.push(d);\r\n\r\n      if (childrens.length > 0) {\r\n        getChildren(d, depth + 1);\r\n      } else {\r\n        leafs.push(d);\r\n      }\r\n    }\r\n  }\r\n\r\n  return { list, leafs, roots };\r\n}\r\n\r\nexport function getTreeLeafs(arr) {\r\n  let treeList = arr || [];\r\n  //末级节点\r\n  let leafs = [];\r\n\r\n  for (let i = 0; i < treeList.length; i++) {\r\n    const d = treeList[i];\r\n\r\n    if (!d) {\r\n      continue;\r\n    }\r\n\r\n    const childrens = d.children || [];\r\n\r\n    if (childrens.length > 0) {\r\n      getChildren(d, 0);\r\n    } else {\r\n      leafs.push(d);\r\n    }\r\n  }\r\n\r\n  function getChildren(item, depth) {\r\n    const tempArr = item.children || [];\r\n\r\n    for (let i = 0; i < tempArr.length; i++) {\r\n      const d = tempArr[i];\r\n      const childrens = d.children || [];\r\n\r\n      if (childrens.length > 0) {\r\n        getChildren(d, depth + 1);\r\n      } else {\r\n        leafs.push(d);\r\n      }\r\n    }\r\n  }\r\n\r\n  return leafs;\r\n}\r\n\r\nexport function getDataListWithExpanded(list, expandedKeys = [], rowKey) {\r\n  let arr = [];\r\n\r\n  for (let i = 0; i < list.length; i++) {\r\n    let d = list[i];\r\n\r\n    d.__depth = 0;\r\n\r\n    arr.push(d);\r\n\r\n    if (expandedKeys.indexOf(d[rowKey]) > -1) {\r\n      if (d.children) {\r\n        setChildren(d, 0);\r\n      }\r\n    }\r\n  }\r\n\r\n  function setChildren(c, depth) {\r\n    let cArr = c.children;\r\n    for (let i = 0; i < cArr.length; i++) {\r\n      let d = cArr[i];\r\n      d.__depth = depth + 1;\r\n      arr.push(d);\r\n\r\n      if (expandedKeys.indexOf(d[rowKey]) > -1) {\r\n        if (d.children) {\r\n          setChildren(d, depth + 1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return arr;\r\n}\r\n\r\nexport function treeFilter(arr, fn) {\r\n  let treeList = arr || [];\r\n\r\n  //根\r\n  let roots = [];\r\n\r\n  for (let i = 0; i < treeList.length; i++) {\r\n    const d = treeList[i];\r\n\r\n    let bl = fn(d, i);\r\n\r\n    if (bl === true) {\r\n      if (d.children && d.children.length > 0) {\r\n        d.children = getChildren(d);\r\n      }\r\n\r\n      roots.push(d);\r\n    }\r\n  }\r\n\r\n  function getChildren(node) {\r\n    const tempArr = node.children || [];\r\n\r\n    const nextChildrens = [];\r\n\r\n    for (let i = 0; i < tempArr.length; i++) {\r\n      const d = tempArr[i];\r\n\r\n      let bl = fn(d, i);\r\n\r\n      if (bl === true) {\r\n        if (d.children && d.children.length > 0) {\r\n          d.children = getChildren(d);\r\n        }\r\n\r\n        nextChildrens.push(d);\r\n      }\r\n    }\r\n\r\n    return nextChildrens;\r\n  }\r\n\r\n  return roots;\r\n}\r\n\r\nexport function getScrollbarWidth() {\r\n  var userAgent = navigator.userAgent; //取得浏览器的userAgent字符串\r\n\r\n  if (userAgent.indexOf(\"Chrome\") > -1) {\r\n    return 6;\r\n  }\r\n\r\n  var oP = document.createElement(\"p\"),\r\n    styles = {\r\n      width: \"100px\",\r\n      height: \"100px\",\r\n      overflowY: \"scroll\"\r\n    },\r\n    i,\r\n    scrollbarWidth;\r\n\r\n  for (i in styles) {\r\n    oP.style[i] = styles[i];\r\n  }\r\n  document.body.appendChild(oP);\r\n  scrollbarWidth = oP.offsetWidth - oP.clientWidth;\r\n  oP.remove();\r\n\r\n  return scrollbarWidth;\r\n}\r\n\r\n/**\r\n * 添加选中行\r\n * @key {Array} 行key\r\n * @selectedRowKeys {Array} 当前选中的行key\r\n * @rowKey {string} 数据行主键key字段名\r\n * @flatData {Array} 展平的表格数据\r\n * @halfCheckedKeys {Array} 当前半选状态的行key\r\n */\r\nexport function addCheckedKey({\r\n  key,\r\n  selectedRowKeys,\r\n  rowKey,\r\n  flatData,\r\n  halfCheckedKeys\r\n}) {\r\n  let nextKeys = [].concat(selectedRowKeys);\r\n  let nextHalfCheckedKeys = [].concat(halfCheckedKeys);\r\n  let row = flatData.find(d => d[rowKey] === key);\r\n  let parentKeys = [].concat(row.__parents || []);\r\n\r\n  if (selectedRowKeys.indexOf(key) === -1) {\r\n    let halfIndex = nextHalfCheckedKeys.indexOf(key);\r\n    if (halfIndex > -1) {\r\n      nextHalfCheckedKeys.splice(halfIndex, 1);\r\n    }\r\n    nextKeys.push(key);\r\n  }\r\n\r\n  //父级半选的key\r\n  let parentHalfCheckedKeys = [];\r\n\r\n  //子级key\r\n  let childrenSelectedKeys = [];\r\n\r\n  flatData.filter(d => {\r\n    let pArr = d.__parents || [];\r\n    let bl = pArr.indexOf(key) > -1;\r\n    let ck = d[rowKey];\r\n    if (bl) {\r\n      if (selectedRowKeys.indexOf(ck) === -1) {\r\n        childrenSelectedKeys.push(ck);\r\n      }\r\n    }\r\n    return bl;\r\n  });\r\n\r\n  nextKeys = nextKeys.concat(childrenSelectedKeys);\r\n\r\n  for (let i = parentKeys.length - 1; i >= 0; i--) {\r\n    let p = parentKeys[i];\r\n\r\n    let pNode = flatData.find(d => {\r\n      return d[rowKey] === p;\r\n    });\r\n\r\n    let childrens = [];\r\n    if (pNode) {\r\n      childrens = pNode.children || [];\r\n    }\r\n\r\n    //子级是否全被选中\r\n    let childrensAllChecked = true;\r\n\r\n    for (let i = 0; i < childrens.length; i++) {\r\n      const cKey = childrens[i][rowKey];\r\n      if (nextKeys.indexOf(cKey) === -1) {\r\n        childrensAllChecked = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    //子级全被选中，则勾选其父节点\r\n    if (childrensAllChecked === true) {\r\n      if (nextKeys.indexOf(p) === -1) {\r\n        nextKeys.push(p);\r\n      }\r\n\r\n      //取消半选中父级\r\n      let k = nextHalfCheckedKeys.findIndex(d => d === p);\r\n      if (k > -1) {\r\n        nextHalfCheckedKeys.splice(k, 1);\r\n      }\r\n    } else {\r\n      //未全选，则半选父节点\r\n      if (halfCheckedKeys.indexOf(p) === -1) {\r\n        parentHalfCheckedKeys.push(p);\r\n\r\n        //取消选中父级\r\n        let j = nextKeys.findIndex(d => d === p);\r\n        if (j > -1) {\r\n          nextKeys.splice(j, 1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  let newHalflCheckedKeys = nextHalfCheckedKeys.concat(parentHalfCheckedKeys);\r\n\r\n  return {\r\n    selectedRowKeys: nextKeys,\r\n    halfCheckedKeys: newHalflCheckedKeys\r\n  };\r\n}\r\n\r\nexport function removeCheckedKey({\r\n  key,\r\n  selectedRowKeys,\r\n  rowKey,\r\n  flatData,\r\n  halfCheckedKeys\r\n}) {\r\n  let nextKeys = [].concat(selectedRowKeys);\r\n  let nextHalfCheckedKeys = [].concat(halfCheckedKeys);\r\n\r\n  let row = flatData.find(d => d[rowKey] === key);\r\n\r\n  let parentKeys = [].concat(row.__parents || []);\r\n\r\n  //父级半选的key\r\n  let parentHalfCheckedKeys = [];\r\n\r\n  //子级key\r\n  let childrenKeys = [];\r\n\r\n  flatData.filter(d => {\r\n    let pArr = d.__parents || [];\r\n    let bl = pArr.indexOf(key) > -1;\r\n    if (bl) {\r\n      childrenKeys.push(d[rowKey]);\r\n    }\r\n    return bl;\r\n  });\r\n\r\n  //移除子级\r\n  if (childrenKeys.length > 0) {\r\n    for (let i = 0; i < childrenKeys.length; i++) {\r\n      const k = childrenKeys[i];\r\n\r\n      //移除选中\r\n      let j = nextKeys.findIndex(d => d === k);\r\n      if (j > -1) {\r\n        nextKeys.splice(j, 1);\r\n      }\r\n\r\n      //移除半选\r\n      let m = nextHalfCheckedKeys.findIndex(d => d === k);\r\n      if (m > -1) {\r\n        nextHalfCheckedKeys.splice(m, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  //移除本级选中\r\n  let i = nextKeys.findIndex(d => d === key);\r\n  if (i > -1) {\r\n    nextKeys.splice(i, 1);\r\n  }\r\n\r\n  //移除本级半选\r\n  let j = nextHalfCheckedKeys.findIndex(d => d === key);\r\n  if (j > -1) {\r\n    nextHalfCheckedKeys.splice(j, 1);\r\n  }\r\n\r\n  for (let i = parentKeys.length - 1; i >= 0; i--) {\r\n    let p = parentKeys[i];\r\n    let childrens = flatData.filter(d => {\r\n      return (d.__parents || []).indexOf(p) > -1;\r\n    });\r\n\r\n    //子级是否全未选中\r\n    let childrensAllUnChecked = true;\r\n\r\n    for (let i = 0; i < childrens.length; i++) {\r\n      const cKey = childrens[i][rowKey];\r\n      if (nextKeys.indexOf(cKey) > -1) {\r\n        childrensAllUnChecked = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    //子级全未选中，则取消勾选其父节点\r\n    if (childrensAllUnChecked === true) {\r\n      //取消选中父级\r\n      let j = nextKeys.findIndex(d => d === p);\r\n      if (j > -1) {\r\n        nextKeys.splice(j, 1);\r\n      }\r\n\r\n      //取消半选父级\r\n      let k = nextHalfCheckedKeys.findIndex(d => d === p);\r\n      if (k > -1) {\r\n        nextHalfCheckedKeys.splice(k, 1);\r\n      }\r\n    } else {\r\n      //否则半选父节点\r\n      if (halfCheckedKeys.indexOf(p) === -1) {\r\n        parentHalfCheckedKeys.push(p);\r\n\r\n        //取消选中父级\r\n        let j = nextKeys.findIndex(d => d === p);\r\n        if (j > -1) {\r\n          nextKeys.splice(j, 1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  let newHalflCheckedKeys = nextHalfCheckedKeys.concat(parentHalfCheckedKeys);\r\n\r\n  return {\r\n    selectedRowKeys: nextKeys,\r\n    halfCheckedKeys: newHalflCheckedKeys\r\n  };\r\n}\r\n\r\n/**\r\n * 添加选中行\r\n * @key {Array} 行key\r\n * @selectedRowKeys {Array} 当前选中的行key\r\n * @rowKey {string} 数据行主键key字段名\r\n * @flatData {Array} 展平的表格数据\r\n * @halfCheckedKeys {Array} 当前半选状态的行key\r\n * @disabledSelectKeys {Array} 禁用选择的数据行key\r\n */\r\nexport function addCheckedKeyWithDisabled({\r\n  key,\r\n  selectedRowKeys,\r\n  rowKey,\r\n  flatData,\r\n  halfCheckedKeys,\r\n  disabledSelectKeys = []\r\n}) {\r\n  let nextKeys = [].concat(selectedRowKeys);\r\n  let nextHalfCheckedKeys = [].concat(halfCheckedKeys);\r\n  let row = flatData.find(d => d[rowKey] === key);\r\n  let parentKeys = [].concat(row.__parents || []);\r\n\r\n  /** 是否允许被选择 */\r\n  function isEnabled(itemKey) {\r\n    return disabledSelectKeys.indexOf(itemKey) === -1;\r\n  }\r\n\r\n  //本级是否允许选择\r\n  if (isEnabled(key) === false) {\r\n    return {\r\n      selectedRowKeys,\r\n      halfCheckedKeys\r\n    };\r\n  }\r\n\r\n  //父级是否允许选择\r\n  let parentEnableSelect = true;\r\n  for (let i = 0; i < parentKeys.length; i++) {\r\n    const pk = parentKeys[i];\r\n    if (isEnabled(pk) === false) {\r\n      parentEnableSelect = false;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (parentEnableSelect === false) {\r\n    return {\r\n      selectedRowKeys,\r\n      halfCheckedKeys\r\n    };\r\n  }\r\n\r\n  if (selectedRowKeys.indexOf(key) === -1) {\r\n    let halfIndex = nextHalfCheckedKeys.indexOf(key);\r\n    if (halfIndex > -1) {\r\n      nextHalfCheckedKeys.splice(halfIndex, 1);\r\n    }\r\n\r\n    nextKeys.push(key);\r\n  }\r\n\r\n  //父级半选的key\r\n  let parentHalfCheckedKeys = [];\r\n\r\n  //子级key\r\n  let childrenSelectedKeys = [];\r\n\r\n  flatData.filter(d => {\r\n    let pArr = d.__parents || [];\r\n    let bl = pArr.indexOf(key) > -1;\r\n    let ck = d[rowKey];\r\n    if (bl) {\r\n      if (selectedRowKeys.indexOf(ck) === -1) {\r\n        //子级是否允许被选择\r\n        let isEnableSelect = isEnabled(ck);\r\n\r\n        for (let i = 0; i < pArr.length; i++) {\r\n          const cpk = pArr[i];\r\n          if (isEnabled(cpk) === false) {\r\n            isEnableSelect = false;\r\n            break;\r\n          }\r\n        }\r\n\r\n        isEnableSelect && childrenSelectedKeys.push(ck);\r\n      }\r\n    }\r\n    return bl;\r\n  });\r\n\r\n  nextKeys = nextKeys.concat(childrenSelectedKeys);\r\n\r\n  for (let i = parentKeys.length - 1; i >= 0; i--) {\r\n    let p = parentKeys[i];\r\n\r\n    let pNode = flatData.find(d => {\r\n      return d[rowKey] === p;\r\n    });\r\n\r\n    let childrens = [];\r\n    if (pNode) {\r\n      childrens = pNode.children || [];\r\n    }\r\n\r\n    //子级是否全被选中\r\n    let childrensAllChecked = true;\r\n\r\n    for (let i = 0; i < childrens.length; i++) {\r\n      const cKey = childrens[i][rowKey];\r\n      if (isEnabled(cKey) && nextKeys.indexOf(cKey) === -1) {\r\n        childrensAllChecked = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    //子级全被选中，则勾选其父节点\r\n    if (childrensAllChecked === true) {\r\n      if (nextKeys.indexOf(p) === -1) {\r\n        isEnabled(p) && nextKeys.push(p);\r\n      }\r\n\r\n      //取消半选中父级\r\n      let k = nextHalfCheckedKeys.findIndex(d => d === p);\r\n      if (k > -1) {\r\n        nextHalfCheckedKeys.splice(k, 1);\r\n      }\r\n    } else {\r\n      //未全选，则半选父节点\r\n      if (halfCheckedKeys.indexOf(p) === -1) {\r\n        isEnabled(p) && parentHalfCheckedKeys.push(p);\r\n\r\n        //取消选中父级\r\n        let j = nextKeys.findIndex(d => d === p);\r\n        if (j > -1) {\r\n          nextKeys.splice(j, 1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  let newHalflCheckedKeys = nextHalfCheckedKeys.concat(parentHalfCheckedKeys);\r\n\r\n  return {\r\n    selectedRowKeys: nextKeys,\r\n    halfCheckedKeys: newHalflCheckedKeys\r\n  };\r\n}\r\n"],"sourceRoot":""}