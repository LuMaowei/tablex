{"version":3,"sources":["e:/WebRoot/tablex/packages/siteCN/examples/API.mdx"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wWAYMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACH,EAAD,iBAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,iBAAQ,CACN,GAAM,OADR,OAGA,8BACE,iBAAGC,WAAW,cAAd,uOAEF,iBAAQ,CACN,GAAM,gBADR,gBAGA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,6+DAwCL,iBAAQ,CACN,GAAM,gBADR,gBAGA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,83C,uKA2CTJ,EAAWK,gBAAiB","file":"static/js/examples-api.06f35170.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Table提供了一些API，可对表格进行快捷操作。通过获取Table的ref进行方法调用，如：tableRef.api.expandAll()`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"编辑\"\n    }}>{`编辑`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`api= {\n    /** 编辑指定行\n     * @rowKeys 数据行key集合\n     */\n    editRows:(rowKeys=[])=>{},\n    /** 编辑所有 */\n    editAll: ()=>{},\n    /** \n     * 删除数据 \n     * @rowKeys 数据行key集合，不传入时，默认删除当前选中的行\n     * */\n    deleteData:()=>{},\n    /** 插入数据 */\n    insertData: ({ \n        data = [],//需要插入的行数据集合\n        parentKey = \"\",//所属父级，默认根级\n        editing = false, //插入后，是否需要处于编辑状态\n        prepend = false, //parentKey有效时可用，可以控制插入的数据在父级的首行还是末行\n        scrollTo = true, //插入数据后，是否自动滚动到对应行\n        startIndex = -1  //无parentKey时有效，控制数据插入到根级的第几行\n    })=>{},\n    /** \n     * 修改数据 \n     * rows 需要修改的数据（平级），数据中必须包含rowKey\n     * */\n    modifyData:(rows=[{rowKey,...}])=>{},\n    /** \n     * 完成编辑，并提交数据更改\n     * 每次调用此方法，都将会触发onEditSave，可以在onEditSave事件中统一对数据进行保存操作\n     * */\n    completeEdit: ()=>{},\n    /** \n     * 取消编辑 \n     * 调用此方法后，上次未提交的数据更改将被放弃\n     * */\n    cancelEdit:()=>{}\n }\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"其他\"\n    }}>{`其他`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`api= {\n   /** 查找数据行 */\n    findData: (fn:(d)=>boolean)=>{},\n    /** 筛选数据 */\n    filterData: (fn:(d)=>boolean)=>{},\n    /** 折叠所有 */\n    collapseAll:()=>{},\n    /** 展开所有 */\n    expandAll: ()=>{},\n    /** 展开至指定层级 */\n    expandTo:(depth)=>{},\n    /** 切换节点展开、折叠状态 */\n    expandToggle: (row)=>{},\n    /** 选中所有 */\n    selectAll: ()=>{},\n    /** 取消所有选中 */\n    unSelectAll: ()=>{},\n    /** 切换节点选中状态 */\n    selectToggle: (row)=>{},\n\n    getData:()=>{return data;//当前表格的源数据},\n    getAllData:()=>{      \n        return {\n        data, //当前表格的源数据\n        changedData, //改变的行数据\n        addedData, //添加的行数据\n        currData //当前表格状态显示的数据\n      };\n    }},\n\n    /** 滚动到指定索引的行 */\n    scrollToItem: (index,align:\"auto\"|\"center\"|\"start\"|\"end\")=>{},\n    /** 滚动到指定rowKey的行 */\n    scrollToRow: (rowKey,align:\"auto\"|\"center\"|\"start\"|\"end\")=>{}\n\n }\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}