{"version":3,"sources":["E:/WebRoot/tablex/src/EditableTable.js","E:/WebRoot/tablex/examples/basic.js","E:/WebRoot/tablex/examples/editable.js","E:/WebRoot/tablex/examples/index.mdx"],"names":["Content","Layout","Header","EditableTable","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","rowsAttributes","tableRef","initRef","inst","isEditing","state","updateComponent","forceUpdate","delayTimer","delayUpdate","fn","delay","validateDelay","clearTimeout","setTimeout","isMouseFocus","changedRows","addToChanged","newRow","rowKey","validateTrigger","i","findIndex","d","push","validateRow","editChange","newValues","arguments","length","undefined","row","_this$state","data","addedData","arr","treeToList","list","k","keys","forEach","assign","j","setRowAttr","attr","key","attrs","fRow","__attribute","merge","newAttr","getRowAttr","getValidate","validatorAsync","columns","columnList","bl","validation","_loop","c","ck","dataIndex","validator","v","constructor","name","Promise","resolve","reject","then","columnKey","e","valid","msg","message","validateAsync","rows","r","all","datas","validate","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","sent","abrupt","stop","validateAll","_callee2","_this$state2","editKeys","isEditAll","allData","_context2","concat","filter","indexOf","editorInstance","setEditorIns","column","ins","ed","find","getEditorIns","formatColumns","_this$state3","treeFilter","editingVisible","hidden","cols","leafs","editor","renderFn","render","value","index","renderProps","newRenderProps","colSpan","_ref3","values","react_default","createElement","style","verticalAlign","className","onClick","onKeyDown","tooltip_default","placement","title","children","_ref4","cloneDeep","toggleSettingColumns","editAll","setState","endEdit","callBack","nextState","editSaveLoading","isAdding","isAddingRange","sourceData","editType","cancelEdit","onCancel","reset","editRows","getChangedRows","getRows","addRow","editting","addRows","newEditKeys","newAddedData","_this$state4","rowKeys","rowTemplate","Date","getTime","setRows","focusInput","input","select","focus","el","ReactDom","findDOMNode","inputEl","getElementsByTagName","getNextEditor","keyCode","nextEditor","_this$state5","currIndex","nextRow","currColumnIndex","nextColumn","currEditor","getRealOpenState","completeEdit","_ref5","_callee3","_this$state6","_this$props","allowSaveEmpty","alwaysValidate","newRows","addedRows","onEditSave","_context3","deletedRows","rawData","isAppend","map","__isAddedRow","error","_x","apply","edit","onBeforeEdit","onEdit","onBeforeDelete","selectedKeys","tableApi","getSelectedKeys","warn","_this$state7","newData","_loop2","splice","deleteLoading","onDelete","addRange","rowCount","_this$props2","defaultAddCount","onBeforeAdd","addCount","onAdd","editTools","tools","config","editToolsConfig","isTop","position","buttons","itemStyle","marginLeft","okText","okIcon","icon_default","type","cancelText","cancelIcon","addText","addIcon","editText","editIcon","deleteText","deleteIcon","button_default","loading","objectSpread","styles","menu","menu_default","item","Item","dropdown_default","overlay","tool","popconfirm_default","onConfirm","stopPropagation","toolIcon","icon","toolAttr","handler","text","pagination","getProps","bottomExtra","createToolBar","padding","backgroundColor","getDataRows","_this$state8","dataList","_this$props3","updateRows","callback","api","delete","getData","propsOriginal","sourceColumns","dataControled","readOnly","_props$editToolsConfi","newProps","dataSource","hover","selectMode","layout_default","height","width","data-tableid","tableId","BaseTable","nextProps","prevState","React","Component","count","prefix","Array","fill","columnIndex","generateColumns","fixedColumns","rowIndex","reduce","rowData","id","parentId","generateData","fixed","resizable","createData","level","parentKey","maxLevel","l","column-1","age","address","createTreeData","maxWidth","Demo","loadChildrenData","record","column-0","src","expandColumnKey","orderNumber","disabledSelectKeys","onSelectChange","console","log","idcard","remark","onchange","ref","defaultValue","onChange","newValue","target","tel","disabled","src_EditableTable","bind","PureComponent","layoutProps","MDXLayout","MDXContent","_ref","components","objectWithoutProperties","index_es","mdxType","parentName","index_esm","__position","__code","__scope","Playground","Props","BasicDemo","EditableDemo","__codesandbox","basic","editable","isMDXComponent"],"mappings":"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","file":"static/js/examples-index.39e31770.js","sourcesContent":["import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport cloneDeep from \"lodash/cloneDeep\";\r\nimport merge from \"lodash/merge\";\r\nimport Table from \"./BaseTable\";\r\nimport { treeToFlatten as treeToList, treeFilter } from \"./utils\";\r\nimport Tooltip from \"antd/lib/tooltip\";\r\nimport Button from \"antd/lib/button\";\r\nimport message from \"antd/lib/message\";\r\nimport Popconfirm from \"antd/lib/popconfirm\";\r\nimport Menu from \"antd/lib/menu\";\r\nimport Dropdown from \"antd/lib/dropdown\";\r\nimport Icon from \"antd/lib/icon\";\r\nimport Layout from \"antd/lib/layout\";\r\nconst { Content, Header } = Layout;\r\n\r\n/**\r\n * 可编辑表格\r\n */\r\nclass EditableTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            rowKey: props.rowKey,\r\n            propsOriginal: {},\r\n            sourceColumns: [],\r\n            columns: [],\r\n            data: [],\r\n            dataList: [],\r\n            sourceData: [],\r\n            changedRows: [],\r\n            isEditAll: false,\r\n            isAdding: false,\r\n            isAddingRange: false,\r\n            addedData: [],\r\n            isEditing: false,\r\n            editKeys: [],\r\n            editSaveLoading: false,\r\n            deleteLoading: false,\r\n            dataControled: false,\r\n            //编辑前的原始数据，数据受控时，必须传入此值，当编辑被取消时，此值会覆盖值表格数据\r\n            rawData: []\r\n        };\r\n    }\r\n\r\n    rowsAttributes = [];\r\n    tableRef = null;\r\n    initRef = inst => {\r\n        if (typeof this.props.initRef === \"function\") {\r\n            this.props.initRef(inst);\r\n        }\r\n        this.tableRef = inst;\r\n    };\r\n\r\n    isEditing = () => {\r\n        return this.state.isEditing;\r\n    };\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        let nextState = {};\r\n\r\n        //是否让数据受控\r\n        nextState.dataControled = nextProps.dataControled || false;\r\n        //\r\n        let columns = cloneDeep(nextProps.columns || []);\r\n        let columnList = treeToList(columns).list;\r\n        nextState.columns = columns;\r\n        nextState.columnList = columnList;\r\n\r\n        let data = nextProps.data || nextProps.dataSource;\r\n\r\n        if (prevState.propsOriginal !== nextProps) {\r\n            nextState.propsOriginal = nextProps;\r\n\r\n            // newState.isEditAll = false;\r\n            // newState.editKeys = [];\r\n            nextState.changedRows = [];\r\n\r\n            if (prevState.dataControled === true) {\r\n                let newData = data || []; //data || [];//\r\n                let dataList = treeToList(newData).list;\r\n                nextState.dataList = dataList;\r\n                nextState.data = newData;\r\n                nextState.sourceData = cloneDeep(newData);\r\n                nextState.rawData = cloneDeep(nextProps.rawData || []);\r\n            } else {\r\n                if (prevState.sourceData !== data) {\r\n                    let newData = data || [];\r\n                    let dataList = treeToList(newData).list;\r\n                    nextState.dataList = dataList;\r\n                    nextState.data = newData;\r\n                    nextState.sourceData = cloneDeep(newData);\r\n                    nextState.rawData = cloneDeep(nextProps.rawData || []);\r\n                }\r\n            }\r\n        }\r\n        return nextState;\r\n    }\r\n\r\n    updateComponent = () => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    delayTimer = null;\r\n    delayUpdate = fn => {\r\n        let delay = 300;\r\n\r\n        if (typeof this.props.validateDelay === \"number\") {\r\n            delay = this.props.validateDelay;\r\n        }\r\n\r\n        if (this.delayTimer) {\r\n            clearTimeout(this.delayTimer);\r\n        }\r\n\r\n        if (typeof fn === \"function\") {\r\n            this.delayTimer = setTimeout(() => {\r\n                fn();\r\n                this.updateComponent();\r\n            }, delay);\r\n        } else {\r\n            this.delayTimer = setTimeout(this.updateComponent, delay);\r\n        }\r\n    };\r\n\r\n    isMouseFocus = false;\r\n\r\n    changedRows = [];\r\n    addToChanged = newRow => {\r\n        let rowKey = this.props.rowKey;\r\n        let changedRows = this.changedRows;\r\n        let validateTrigger = this.props.validateTrigger;\r\n\r\n        let i = changedRows.findIndex(d => d[rowKey] === newRow[rowKey]);\r\n\r\n        if (i >= 0) {\r\n            changedRows[i] = newRow;\r\n        } else {\r\n            changedRows.push(newRow);\r\n        }\r\n\r\n        this.changedRows = changedRows;\r\n\r\n        // 当change时立即验证行\r\n        if (validateTrigger === \"onChange\") {\r\n            this.validateRow(newRow);\r\n            this.updateComponent();\r\n            // this.delayUpdate(() => {\r\n            //    // this.validateRow(newRow);\r\n            // });\r\n        }\r\n\r\n        //需要调用更新，否则editor onchange改变了其它字段值后，最新的值无法传递给editor回调中，因为未调用editor\r\n        //this.updateComponent();\r\n    };\r\n\r\n    editChange = (newValues = {}, row, index) => {\r\n        let { data, addedData } = this.state;\r\n\r\n        let rowKey = this.props.rowKey;\r\n\r\n        // let dataList = data.concat(addedData);\r\n\r\n        let arr = treeToList(data).list;\r\n\r\n        let k = row[rowKey];\r\n        let i = arr.findIndex(d => d[rowKey] === k);\r\n\r\n        if (i > -1) {\r\n            let changedRow = {};\r\n\r\n            Object.keys(newValues).forEach(k => {\r\n                arr[i][k] = newValues[k];\r\n                changedRow = Object.assign({}, arr[i]);\r\n                changedRow[k] = newValues[k];\r\n                //row[k] = newValues[k];\r\n            });\r\n\r\n            //this.setState({});\r\n\r\n            this.addToChanged(arr[i]);\r\n        }\r\n\r\n        let j = addedData.findIndex(d => d[rowKey] === k);\r\n\r\n        if (j > -1) {\r\n            Object.keys(newValues).forEach(k => {\r\n                addedData[j][k] = newValues[k];\r\n            });\r\n\r\n            this.addToChanged(addedData[j]);\r\n        }\r\n    };\r\n\r\n    setRowAttr = (row, attr = {}) => {\r\n        let rowKey = this.props.rowKey;\r\n        let key = row[rowKey];\r\n\r\n        let attrs = this.rowsAttributes || [];\r\n\r\n        let i = attrs.findIndex(d => d[rowKey] === key);\r\n\r\n        if (i > -1) {\r\n            let fRow = attrs[i];\r\n\r\n            if (typeof fRow.__attribute === \"undefined\") {\r\n                fRow.__attribute = attr;\r\n            } else {\r\n                fRow.__attribute = merge({}, fRow.__attribute, attr);\r\n            }\r\n        } else {\r\n            let newAttr = Object.assign({}, row);\r\n            newAttr.__attribute = attr;\r\n            attrs.push(newAttr);\r\n        }\r\n\r\n        this.rowsAttributes = attrs;\r\n    };\r\n\r\n    getRowAttr = row => {\r\n        let rowKey = this.props.rowKey;\r\n        let key = row[rowKey];\r\n\r\n        let attrs = this.rowsAttributes || [];\r\n        let attr = {};\r\n\r\n        let i = attrs.findIndex(d => d[rowKey] === key);\r\n        if (i > -1) {\r\n            attr = attrs[i] || {};\r\n        }\r\n\r\n        return Object.assign({}, attr.__attribute || {});\r\n    };\r\n\r\n    getValidate = (row, key) => {\r\n        let attr = this.getRowAttr(row);\r\n        let r = (attr[\"validation\"] || {})[key] || {};\r\n\r\n        return r;\r\n    };\r\n\r\n    //进行异步验证的promise\r\n    validatorAsync = [];\r\n\r\n    validateRow = row => {\r\n        let { columnList: columns } = this.state;\r\n\r\n        let bl = true;\r\n\r\n        let validation = {};\r\n\r\n        for (let i = 0; i < columns.length; i++) {\r\n            const c = columns[i];\r\n            const ck = c.dataIndex;\r\n\r\n            if (typeof c.validator === \"function\") {\r\n                var v = c.validator(row[ck], row);\r\n\r\n                if (v.constructor.name === \"Promise\") {\r\n                    this.validatorAsync.push(\r\n                        new Promise((resolve, reject) => {\r\n                            v.then(d => {\r\n                                resolve({ validation: d, row, columnKey: ck });\r\n                            });\r\n\r\n                            v.catch(e => {\r\n                                reject(e);\r\n                            });\r\n                        })\r\n                    );\r\n                } else {\r\n                    validation[ck] = {\r\n                        valid: v.valid,\r\n                        msg: v.valid ? \"\" : v.message || \"输入不正确\"\r\n                    };\r\n\r\n                    if (!v.valid) bl = false;\r\n\r\n                    this.setRowAttr(row, {\r\n                        validation\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        return bl;\r\n    };\r\n\r\n    //异步验证数据行\r\n    validateAsync = rows => {\r\n        let arr = rows || [];\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let bl = true;\r\n\r\n            for (let i = 0; i < arr.length; i++) {\r\n                const r = arr[i];\r\n                let temp = this.validateRow(r);\r\n                if (temp === false) {\r\n                    bl = false;\r\n                }\r\n            }\r\n\r\n            if (this.validatorAsync.length > 0) {\r\n                Promise.all(this.validatorAsync).then(datas => {\r\n                    datas.forEach(d => {\r\n                        let v = d.validation;\r\n\r\n                        if (v.valid === false) {\r\n                            bl = false;\r\n                        }\r\n\r\n                        let validation = {};\r\n\r\n                        validation[d.columnKey] = {\r\n                            valid: v.valid,\r\n                            msg: v.valid ? \"\" : v.message\r\n                        };\r\n\r\n                        this.setRowAttr(d.row, {\r\n                            validation\r\n                        });\r\n                    });\r\n\r\n                    this.validatorAsync = [];\r\n                    this.forceUpdate();\r\n\r\n                    resolve(bl);\r\n                });\r\n            } else {\r\n                if (arr.length > 0) {\r\n                    this.forceUpdate();\r\n                }\r\n\r\n                resolve(bl);\r\n            }\r\n        });\r\n    };\r\n\r\n    //验证改变的数据行\r\n    validate = async () => {\r\n        let bl = true;\r\n        let arr = this.changedRows;\r\n\r\n        // let { data, addedData } = this.state;\r\n\r\n        // let arr = data.concat(addedData);\r\n\r\n        bl = await this.validateAsync(arr);\r\n\r\n        return bl;\r\n    };\r\n\r\n    //验证当前所有数据行\r\n    validateAll = async () => {\r\n        let bl = true;\r\n        let { data, addedData, editKeys, isEditAll } = this.state;\r\n        let rowKey = this.props.rowKey;\r\n\r\n        let allData = data.concat(addedData);\r\n\r\n        let arr = [];\r\n\r\n        if (isEditAll === true) {\r\n            arr = allData;\r\n        } else {\r\n            arr = allData.filter(d => {\r\n                return editKeys.indexOf(d[rowKey]) > -1;\r\n            });\r\n        }\r\n\r\n        bl = await this.validateAsync(arr);\r\n        // this.forceUpdate();\r\n        return bl;\r\n    };\r\n\r\n    editorInstance = [];\r\n    setEditorIns = (row, column, ins) => {\r\n        if (ins === null) {\r\n            return;\r\n        }\r\n\r\n        let rowKey = row[this.props.rowKey];\r\n        let columnKey = column.dataIndex;\r\n\r\n        let editorInstance = [].concat(this.editorInstance);\r\n\r\n        let ed = this.editorInstance.find(\r\n            d => d.rowKey === rowKey && d.columnKey === columnKey\r\n        );\r\n\r\n        if (ed) {\r\n            ed.editorInstance = ins;\r\n        } else {\r\n            editorInstance.push({\r\n                columnKey: columnKey,\r\n                rowKey: rowKey,\r\n                editorInstance: ins\r\n            });\r\n        }\r\n\r\n        this.editorInstance = editorInstance;\r\n    };\r\n\r\n    getEditorIns = (rowKey, columnKey) => {\r\n        let ed = this.editorInstance.find(\r\n            d => d.rowKey === rowKey && d.columnKey === columnKey\r\n        );\r\n\r\n        if (ed) {\r\n            return ed.editorInstance;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    formatColumns = () => {\r\n        this.editorInstance = [];\r\n        let { columns, editKeys, isEditAll, isEditing } = this.state;\r\n        let rowKey = this.props.rowKey;\r\n\r\n        let arr = columns;\r\n\r\n        if (isEditing === true) {\r\n            arr = treeFilter(columns, d => {\r\n                if (d.editingVisible === true) {\r\n                    d.hidden = false;\r\n                }\r\n                return d.editingVisible !== false;\r\n            });\r\n        }\r\n\r\n        let cols = treeToList(arr).leafs;\r\n\r\n        if (isEditAll === true) {\r\n            cols.forEach(d => {\r\n                let editor = d.editor;\r\n\r\n                if (typeof editor === \"function\") {\r\n                    let renderFn = d.render;\r\n\r\n                    d.render = (value, row, index) => {\r\n                        let renderProps = null;\r\n                        let newRenderProps = {};\r\n\r\n                        if (typeof renderFn === \"function\") {\r\n                            renderProps = renderFn(value, row, index);\r\n                        }\r\n\r\n                        if (\r\n                            renderProps &&\r\n                            renderProps.props &&\r\n                            renderProps.props.colSpan === 0\r\n                        ) {\r\n                            return renderProps;\r\n                        }\r\n\r\n                        let { valid, msg } =\r\n                            this.getValidate(row, d.dataIndex) || {};\r\n\r\n                        let ed = editor(\r\n                            value,\r\n                            row,\r\n                            index,\r\n                            values => {\r\n                                this.editChange(values, row, index);\r\n                            },\r\n                            ins => {\r\n                                this.setEditorIns(row, d, ins);\r\n                            },\r\n                            this.validate\r\n                        );\r\n\r\n                        let c = (\r\n                            <span\r\n                                style={{ verticalAlign: \"middle\" }}\r\n                                className={valid === false ? \"has-error\" : \"\"}\r\n                                onClick={e => this.onClick(e, row, d)}\r\n                                onKeyDown={e => this.onKeyDown(e, row, d)}\r\n                            >\r\n                                <Tooltip placement=\"topLeft\" title={msg}>\r\n                                    {ed}\r\n                                </Tooltip>\r\n                            </span>\r\n                        );\r\n\r\n                        newRenderProps.children = c;\r\n\r\n                        if (renderProps && renderProps.props) {\r\n                            newRenderProps.props = renderProps.props;\r\n                        }\r\n\r\n                        return newRenderProps;\r\n                    };\r\n                }\r\n            });\r\n        } else if (editKeys.length > 0) {\r\n            cols.forEach(d => {\r\n                if (typeof d.editingVisible === \"boolean\") {\r\n                    d.hidden = !d.editingVisible;\r\n                }\r\n\r\n                let editor = d.editor;\r\n\r\n                if (typeof editor === \"function\") {\r\n                    let renderFn = d.render;\r\n\r\n                    d.render = (value, row, index) => {\r\n                        let renderProps = null;\r\n                        let newRenderProps = {};\r\n\r\n                        if (typeof renderFn === \"function\") {\r\n                            renderProps = renderFn(value, row, index);\r\n                        }\r\n\r\n                        if (\r\n                            renderProps &&\r\n                            renderProps.props &&\r\n                            renderProps.props.colSpan === 0\r\n                        ) {\r\n                            return renderProps;\r\n                        }\r\n\r\n                        let bl =\r\n                            editKeys.findIndex(k => k === row[rowKey]) > -1;\r\n\r\n                        if (bl) {\r\n                            let { valid, msg } =\r\n                                this.getValidate(row, d.dataIndex) || {};\r\n\r\n                            let ed = editor(\r\n                                value,\r\n                                row,\r\n                                index,\r\n                                values => {\r\n                                    this.editChange(values, row, index);\r\n                                },\r\n                                ins => {\r\n                                    this.setEditorIns(row, d, ins);\r\n                                }\r\n                            );\r\n\r\n                            let c = (\r\n                                <span\r\n                                    style={{ verticalAlign: \"middle\" }}\r\n                                    className={\r\n                                        valid === false ? \"has-error\" : \"\"\r\n                                    }\r\n                                    onClick={e => this.onClick(e, row, d)}\r\n                                    onKeyDown={e => this.onKeyDown(e, row, d)}\r\n                                >\r\n                                    <Tooltip placement=\"topLeft\" title={msg}>\r\n                                        {ed}\r\n                                    </Tooltip>\r\n                                </span>\r\n                            );\r\n\r\n                            newRenderProps.children = c;\r\n\r\n                            if (renderProps && renderProps.props) {\r\n                                newRenderProps.props = renderProps.props;\r\n                            }\r\n\r\n                            return newRenderProps;\r\n                        } else {\r\n                            if (typeof renderFn === \"function\") {\r\n                                return renderFn(value, row, index);\r\n                            }\r\n                            return value;\r\n                        }\r\n                    };\r\n                }\r\n            });\r\n        }\r\n\r\n        return cloneDeep(arr);\r\n    };\r\n\r\n    toggleSettingColumns = bl => {\r\n        // bl === true ? this.tableRef.enableTableSetting() : this.tableRef.disableTableSetting();\r\n    };\r\n\r\n    editAll = () => {\r\n        this.toggleSettingColumns(false);\r\n        this.setState({ isEditAll: true, isEditing: true, editKeys: [] });\r\n    };\r\n\r\n    endEdit = callBack => {\r\n        this.toggleSettingColumns(true);\r\n\r\n        let arr = [].concat(this.changedRows);\r\n\r\n        this.changedRows = [];\r\n\r\n        let nextState = {\r\n            editSaveLoading: false,\r\n            isEditAll: false,\r\n            isAdding: false,\r\n            isAddingRange: false,\r\n            isEditing: false,\r\n            editKeys: [],\r\n            changedRows: [],\r\n            addedData: [],\r\n            sourceData: cloneDeep(this.state.data)\r\n        };\r\n\r\n        if (typeof callBack === \"function\") {\r\n            this.setState(nextState, () => {\r\n                callBack(arr, this.state.data, this.editType);\r\n            });\r\n        } else {\r\n            this.setState(nextState);\r\n        }\r\n    };\r\n\r\n    //取消编辑\r\n    cancelEdit = () => {\r\n        if (typeof this.props.onCancel === \"function\") {\r\n            this.props.onCancel();\r\n        }\r\n\r\n        this.reset();\r\n    };\r\n\r\n    editRows = keys => {\r\n        this.setState({ isEditAll: false, editKeys: keys, isEditing: true });\r\n    };\r\n\r\n    getChangedRows = () => {\r\n        return this.changedRows;\r\n    };\r\n\r\n    getRows = () => {\r\n        return this.state.data;\r\n    };\r\n\r\n    addRow = (r = {}, editting = true) => {\r\n        this.addRows([r], editting);\r\n    };\r\n\r\n    addRows = (arr = [], editting = true) => {\r\n        let rowKey = this.props.rowKey;\r\n        let { addedData, editKeys } = this.state;\r\n\r\n        let rowKeys = [];\r\n        let newEditKeys = [];\r\n        let newAddedData = [];\r\n\r\n        this.editType = \"add\";\r\n\r\n        let rows = [];\r\n\r\n        let rowTemplate = {};\r\n\r\n        arr.forEach((d, i) => {\r\n            let k = d[rowKey];\r\n\r\n            if (!k) {\r\n                k = d[rowKey] = \"__id_\" + i + \"_\" + new Date().getTime();\r\n            }\r\n\r\n            rows.push(Object.assign({}, rowTemplate, d));\r\n            rowKeys.push(k);\r\n        });\r\n\r\n        newEditKeys = editKeys.concat(rowKeys);\r\n        newAddedData = [].concat(rows);\r\n\r\n        if (editting === false) {\r\n            this.setState({\r\n                isAddingRange: true,\r\n                addedData: newAddedData\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isAddingRange: true,\r\n                isEditing: true,\r\n                addedData: newAddedData,\r\n                editKeys: newEditKeys\r\n            });\r\n        }\r\n    };\r\n\r\n    setRows = (arr = []) => {\r\n        this.changedRows = [];\r\n        this.setState({\r\n            data: arr,\r\n            editKeys: [],\r\n            isEditAll: false,\r\n            changedRows: []\r\n        });\r\n    };\r\n\r\n    reset = () => {\r\n        this.toggleSettingColumns(true);\r\n        let data = cloneDeep(this.state.sourceData);\r\n\r\n        let nextState = {\r\n            isEditAll: false,\r\n            isAdding: false,\r\n            isAddingRange: false,\r\n            isEditing: false,\r\n            editKeys: [],\r\n            data: data,\r\n            changedRows: [],\r\n            addedData: []\r\n        };\r\n\r\n        this.changedRows = [];\r\n        this.setState(nextState);\r\n    };\r\n\r\n    focusInput = editor => {\r\n        if (!editor) {\r\n            return;\r\n        }\r\n\r\n        if (editor.input && typeof editor.input.select === \"function\") {\r\n            setTimeout(() => {\r\n                editor.input.select();\r\n            }, 1);\r\n        } else if (typeof editor.focus === \"function\") {\r\n            editor.focus();\r\n        } else {\r\n            let el = ReactDom.findDOMNode(editor);\r\n\r\n            if (el) {\r\n                let inputEl = el.getElementsByTagName(\"input\")[0];\r\n                inputEl && inputEl.focus();\r\n                el.focus();\r\n            }\r\n        }\r\n    };\r\n\r\n    getNextEditor = (keyCode, row, column) => {\r\n        let nextEditor = null;\r\n\r\n        let key = this.props.rowKey;\r\n\r\n        let rowKey = row[key];\r\n\r\n        let columnKey = column.dataIndex;\r\n\r\n        let { data, addedData, columns } = this.state;\r\n\r\n        let rows = [].concat(data).concat(addedData);\r\n\r\n        let arr = treeToList(columns).leafs;\r\n\r\n        if (keyCode === 38) {\r\n            //top\r\n\r\n            let currIndex = rows.findIndex(d => d[key] === rowKey);\r\n            let nextRow = rows[currIndex - 1];\r\n\r\n            if (nextRow) {\r\n                nextEditor = this.getEditorIns(nextRow[key], columnKey);\r\n            }\r\n        }\r\n\r\n        if (keyCode === 40) {\r\n            //bottom\r\n\r\n            let currIndex = rows.findIndex(d => d[key] === rowKey);\r\n            let nextRow = rows[currIndex + 1];\r\n\r\n            if (nextRow) {\r\n                nextEditor = this.getEditorIns(nextRow[key], columnKey);\r\n            }\r\n        }\r\n\r\n        if (keyCode === 37) {\r\n            //left\r\n\r\n            let currColumnIndex = arr.findIndex(\r\n                d => d[\"dataIndex\"] === columnKey\r\n            );\r\n            let nextColumn = arr[currColumnIndex - 1];\r\n\r\n            if (nextColumn) {\r\n                nextEditor = this.getEditorIns(rowKey, nextColumn[\"dataIndex\"]);\r\n            }\r\n        }\r\n\r\n        if (keyCode === 39 || keyCode === 13) {\r\n            //right\r\n\r\n            let currColumnIndex = arr.findIndex(\r\n                d => d[\"dataIndex\"] === columnKey\r\n            );\r\n            let nextColumn = arr[currColumnIndex + 1];\r\n\r\n            if (nextColumn) {\r\n                nextEditor = this.getEditorIns(rowKey, nextColumn[\"dataIndex\"]);\r\n            }\r\n        }\r\n\r\n        return nextEditor;\r\n    };\r\n\r\n    onKeyDown = (e, row, column) => {\r\n        // e.preventDefault();\r\n        //e.stopPropagation();\r\n\r\n        let key = this.props.rowKey;\r\n\r\n        let rowKey = row[key];\r\n        let columnKey = column.dataIndex;\r\n\r\n        let nextEditor = this.getNextEditor(e.keyCode, row, column);\r\n\r\n        let currEditor = this.getEditorIns(rowKey, columnKey);\r\n\r\n        if (currEditor) {\r\n            //ly 2018年11月6日 11点12分\r\n            //当当前编辑器为下拉类型时，如 datePicker comobobox 。获取展开状态，展开时禁用表格列的快捷键切换\r\n            if (typeof currEditor.getRealOpenState === \"function\") {\r\n                let bl = currEditor.getRealOpenState();\r\n\r\n                if (e.keyCode === 13) {\r\n                    this.focusInput(nextEditor);\r\n                    return false;\r\n                }\r\n\r\n                if (bl === true) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.focusInput(nextEditor);\r\n    };\r\n\r\n    onClick = (e, row, column) => {\r\n        this.isMouseFocus = true;\r\n    };\r\n\r\n    completeEdit = async callBack => {\r\n        let changedRows = this.getChangedRows();\r\n\r\n        let editType = this.editType;\r\n        let { data, sourceData, deletedRows, rawData, addedData } = this.state;\r\n        let { allowSaveEmpty, alwaysValidate, isAppend } = this.props;\r\n\r\n        let newRows = [].concat(data);\r\n        if (editType === \"add\") {\r\n            if (allowSaveEmpty === true) {\r\n                let addedRows = addedData.map(d => {\r\n                    let r = Object.assign({}, d);\r\n                    delete r.__isAddedRow;\r\n                    return r;\r\n                });\r\n                newRows = data.concat(addedRows);\r\n            } else {\r\n                newRows = data.concat(changedRows);\r\n            }\r\n        } else if (editType === \"edit\") {\r\n            newRows = data;\r\n        } else if (editType === \"delete\") {\r\n            newRows = data;\r\n        }\r\n\r\n        let bl = true;\r\n\r\n        if (alwaysValidate === true) {\r\n            bl = await this.validateAll();\r\n        } else {\r\n            bl = await this.validate();\r\n        }\r\n\r\n        if (bl === false) {\r\n            message.error(\"信息录入不正确，请检查\");\r\n            return;\r\n        }\r\n\r\n        if (allowSaveEmpty !== true) {\r\n            if (changedRows.length <= 0) {\r\n                this.cancelEdit();\r\n                return;\r\n            }\r\n        }\r\n\r\n        let onEditSave = this.props.onEditSave;\r\n\r\n        if (typeof onEditSave === \"function\") {\r\n            this.setState({ editSaveLoading: true });\r\n\r\n            let fn = onEditSave(changedRows, newRows, this.editType);\r\n\r\n            if (fn) {\r\n                //如果返回的是一个promise对象，则只有当调用resolve时，才触发编辑完成事件\r\n                if (\r\n                    typeof fn.then === \"function\" &&\r\n                    typeof fn.catch === \"function\"\r\n                ) {\r\n                    fn.then(() => {\r\n                        this.endEdit(callBack);\r\n                    });\r\n\r\n                    fn.catch(() => {\r\n                        this.setState({ editSaveLoading: false });\r\n                    });\r\n                } else {\r\n                    this.setState({ editSaveLoading: false });\r\n                }\r\n            } else {\r\n                this.endEdit(callBack);\r\n            }\r\n        } else {\r\n            this.endEdit(callBack);\r\n        }\r\n    };\r\n\r\n    //\"edit\"：编辑 ； \"add\"：新增 \"delete\"： 删除\r\n    editType = \"\";\r\n    edit = () => {\r\n        let arr = this.state.data || [];\r\n\r\n        if (arr.length === 0) {\r\n            message.error(\"没有可编辑的数据\");\r\n            return false;\r\n        }\r\n\r\n        let bl = true;\r\n\r\n        if (typeof this.props.onBeforeEdit === \"function\") {\r\n            bl = this.props.onBeforeEdit();\r\n        }\r\n\r\n        if (bl === false) {\r\n            return false;\r\n        }\r\n\r\n        this.editType = \"edit\";\r\n\r\n        this.editAll();\r\n\r\n        if (typeof this.props.onEdit === \"function\") {\r\n            this.props.onEdit();\r\n        }\r\n    };\r\n\r\n    delete = () => {\r\n        let bl = true;\r\n\r\n        if (typeof this.props.onBeforeDelete === \"function\") {\r\n            bl = this.props.onBeforeDelete();\r\n        }\r\n\r\n        if (bl === false) {\r\n            return false;\r\n        }\r\n\r\n        let selectedKeys = this.tableRef.tableApi.getSelectedKeys();\r\n\r\n        if (selectedKeys.length <= 0) {\r\n            message.warn(\"请选择要删除的数据\");\r\n        } else {\r\n            this.editType = \"delete\";\r\n\r\n            let { data, rowKey } = this.state;\r\n\r\n            let newData = [].concat(data);\r\n            let deletedRows = [];\r\n\r\n            for (let i = 0; i < selectedKeys.length; i++) {\r\n                let index = newData.findIndex(\r\n                    d => d[rowKey] === selectedKeys[i]\r\n                );\r\n\r\n                deletedRows.push(Object.assign({}, newData[index]));\r\n\r\n                if (index > -1) {\r\n                    newData.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            let onEditSave = this.props.onEditSave;\r\n\r\n            if (typeof onEditSave === \"function\") {\r\n                this.setState({ deleteLoading: true });\r\n\r\n                let fn = onEditSave(deletedRows, newData, this.editType);\r\n\r\n                if (fn && typeof fn.then === \"function\") {\r\n                    fn.then(() => {\r\n                        this.setState({ deleteLoading: false });\r\n                    });\r\n                } else {\r\n                    this.setState({ deleteLoading: false });\r\n                }\r\n            } else {\r\n                this.setState({ data: newData, deletedRows });\r\n            }\r\n\r\n            if (typeof this.props.onDelete === \"function\") {\r\n                this.props.onDelete();\r\n            }\r\n        }\r\n    };\r\n\r\n    addRange = rowCount => {\r\n        let { rowTemplate, rowKey, isAppend, defaultAddCount } = this.props;\r\n\r\n        let bl = true;\r\n\r\n        if (typeof this.props.onBeforeAdd === \"function\") {\r\n            bl = this.props.onBeforeAdd();\r\n        }\r\n\r\n        if (bl === false) {\r\n            return false;\r\n        }\r\n\r\n        this.editType = \"add\";\r\n\r\n        let addCount = rowCount || defaultAddCount;\r\n\r\n        let data = this.state.data || [];\r\n\r\n        let newData = [];\r\n\r\n        let addedData = [];\r\n        let keys = [];\r\n\r\n        for (let i = 0; i < addCount; i++) {\r\n            let row = {};\r\n\r\n            if (typeof rowTemplate === \"function\") {\r\n                row = rowTemplate(i);\r\n                if (!row[rowKey]) {\r\n                    row[rowKey] = \"__id_\" + i + \"_\" + new Date().getTime();\r\n                }\r\n            } else {\r\n                row[rowKey] = \"__id_\" + i + \"_\" + new Date().getTime();\r\n            }\r\n\r\n            keys.push(row[rowKey]);\r\n            addedData.push(row);\r\n        }\r\n\r\n        // if (isAppend === true) {\r\n        //     newData = data.concat(addedData)\r\n        // } else {\r\n        //     newData = addedData;\r\n        // }\r\n\r\n        this.changedRows = [];\r\n\r\n        this.setState({\r\n            addedData,\r\n            data: data,\r\n            editKeys: keys,\r\n            isEditing: true,\r\n            isEditAll: false,\r\n            isAdding: false,\r\n            isAddingRange: true,\r\n            changedRows: []\r\n        });\r\n\r\n        if (typeof this.props.onAdd === \"function\") {\r\n            this.props.onAdd(addedData, newData, \"add\");\r\n        }\r\n    };\r\n\r\n    editTools = () => {\r\n        let w = 0;\r\n\r\n        let tools = this.props.editTools || [];\r\n        let config = this.props.editToolsConfig || {};\r\n        let isTop = config.position === \"top\";\r\n\r\n        if (tools.length <= 0) {\r\n            return null;\r\n        }\r\n\r\n        let buttons = [];\r\n\r\n        let { isEditing } = this.state;\r\n\r\n        let itemStyle = config.itemStyle || { marginLeft: 5 };\r\n\r\n        let okText = config.okText || \"确定\";\r\n        let okIcon = config.okIcon || \"\";\r\n        okIcon = okIcon ? <Icon type={okIcon} /> : null;\r\n\r\n        let cancelText = config.cancelText || \"取消\";\r\n        let cancelIcon = config.cancelIcon || \"\";\r\n        cancelIcon = cancelIcon ? <Icon type={cancelIcon} /> : null;\r\n\r\n        let addText = config.addText || \"新增\";\r\n        let addIcon = config.addIcon || \"\";\r\n        addIcon = addIcon ? <Icon type={addIcon} /> : null;\r\n\r\n        let editText = config.editText || \"编辑\";\r\n        let editIcon = config.editIcon || \"\";\r\n        editIcon = editIcon ? <Icon type={editIcon} /> : null;\r\n\r\n        let deleteText = config.deleteText || \"删除\";\r\n        let deleteIcon = config.deleteIcon || \"\";\r\n        deleteIcon = deleteIcon ? <Icon type={deleteIcon} /> : null;\r\n\r\n        if (isEditing) {\r\n            w = 160;\r\n            buttons.push(\r\n                <Button\r\n                    key={\"_btnOk\"}\r\n                    loading={this.state.editSaveLoading}\r\n                    onClick={this.completeEdit}\r\n                    style={{ ...itemStyle, marginLeft: isTop === true ? 0 : 5 }}\r\n                >\r\n                    {okIcon}\r\n                    {okText}\r\n                </Button>\r\n            );\r\n            buttons.push(\r\n                <Button\r\n                    key={\"_btnCancel\"}\r\n                    onClick={this.cancelEdit}\r\n                    style={itemStyle}\r\n                >\r\n                    {cancelIcon}\r\n                    {cancelText}\r\n                </Button>\r\n            );\r\n        } else {\r\n            tools.forEach((d, i) => {\r\n                w += 80;\r\n\r\n                let styles = { ...itemStyle };\r\n                if (i === 0 && isTop === true) {\r\n                    styles[\"marginLeft\"] = 0;\r\n                }\r\n\r\n                const menu = (\r\n                    <Menu onClick={e => this.addRange(e.item.props.value)}>\r\n                        <Menu.Item key=\"1\" value={5}>\r\n                            5 行\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"2\" value={10}>\r\n                            10 行\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                );\r\n\r\n                if (d === \"addSingle\") {\r\n                    buttons.push(\r\n                        <Button\r\n                            key={d + \"_1\"}\r\n                            onClick={() => this.addRange(1)}\r\n                            style={styles}\r\n                        >\r\n                            {addIcon}\r\n                            {addText}\r\n                        </Button>\r\n                    );\r\n                }\r\n\r\n                if (d === \"add\") {\r\n                    buttons.push(\r\n                        <Dropdown key={d + \"_1\"} overlay={menu}>\r\n                            <Button\r\n                                tool=\"add\"\r\n                                style={styles}\r\n                                onClick={() => this.addRange()}\r\n                            >\r\n                                {addIcon} {addText}\r\n                                <Icon type=\"down\" />\r\n                            </Button>\r\n                        </Dropdown>\r\n                    );\r\n                }\r\n\r\n                if (d === \"edit\") {\r\n                    buttons.push(\r\n                        <Button\r\n                            key={d + \"_1\"}\r\n                            onClick={this.edit}\r\n                            style={styles}\r\n                        >\r\n                            {editIcon}\r\n                            {editText}\r\n                        </Button>\r\n                    );\r\n                }\r\n\r\n                if (d === \"delete\") {\r\n                    buttons.push(\r\n                        <Popconfirm\r\n                            key={d}\r\n                            title=\"确定删除选中的数据吗？\"\r\n                            okText=\"确定\"\r\n                            cancelText=\"取消\"\r\n                            onConfirm={this.delete}\r\n                        >\r\n                            <Button\r\n                                style={styles}\r\n                                loading={this.state.deleteLoading}\r\n                                onClick={e => {\r\n                                    e.stopPropagation();\r\n                                }}\r\n                            >\r\n                                {deleteIcon}\r\n                                {deleteText}\r\n                            </Button>\r\n                        </Popconfirm>\r\n                    );\r\n                }\r\n\r\n                if (typeof d === \"function\") {\r\n                    buttons.push(\r\n                        <span style={styles} key={\"_fnTools_\" + i}>\r\n                            {d()}\r\n                        </span>\r\n                    );\r\n                }\r\n\r\n                if (typeof d === \"object\" && d !== null) {\r\n                    let toolIcon = d.icon;\r\n                    toolIcon = toolIcon ? <Icon type={toolIcon} /> : null;\r\n                    let toolAttr = d.props || {};\r\n                    buttons.push(\r\n                        <Button\r\n                            key={\"_objTools_\" + i}\r\n                            onClick={d.handler}\r\n                            style={styles}\r\n                            {...toolAttr}\r\n                        >\r\n                            {toolIcon}\r\n                            {d.text}\r\n                        </Button>\r\n                    );\r\n                }\r\n            });\r\n        }\r\n\r\n        let pagerAttr = this.props.pagination || null;\r\n\r\n        if (buttons.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        return <div>{buttons}</div>;\r\n    };\r\n\r\n    getProps = () => {\r\n        let props = this.props || {};\r\n        let newProps = Object.assign({}, props);\r\n\r\n        return newProps;\r\n    };\r\n\r\n    bottomExtra = () => {\r\n        if (typeof this.props.bottomExtra === \"function\") {\r\n        }\r\n    };\r\n\r\n    createToolBar = () => {\r\n        if (\r\n            this.props.editToolsConfig &&\r\n            this.props.editToolsConfig.position === \"top\"\r\n        ) {\r\n            let tools = this.editTools();\r\n\r\n            if (tools !== null) {\r\n                return (\r\n                    <Header\r\n                        style={{\r\n                            padding: \"10px 0\",\r\n                            backgroundColor: \"#ffffff\"\r\n                        }}\r\n                    >\r\n                        {tools}\r\n                    </Header>\r\n                );\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    getDataRows = () => {\r\n        let { data, addedData, isAdding, isAddingRange, dataList } = this.state;\r\n\r\n        let { isAppend, rowKey } = this.props;\r\n\r\n        let addedRows = [];\r\n\r\n        addedData.forEach(d => {\r\n            if (dataList.findIndex(c => c[rowKey] === d[rowKey]) <= -1) {\r\n                let r = d;\r\n                r.__isAddedRow = true;\r\n                addedRows.push(r);\r\n            }\r\n        });\r\n\r\n        let arr = data;\r\n\r\n        if (isAdding === true || isAddingRange === true) {\r\n            if (isAppend === true) {\r\n                arr = data.concat(addedRows);\r\n            } else {\r\n                arr = addedRows;\r\n            }\r\n        }\r\n\r\n        return arr;\r\n    };\r\n\r\n    updateRows = callback => {\r\n        let arr = [];\r\n\r\n        if (typeof callback === \"function\") {\r\n            let currData = this.getDataRows();\r\n\r\n            arr = callback(currData);\r\n\r\n            if (arr.length > 0) {\r\n                this.setState({\r\n                    data: this.state.data\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    api = {\r\n        editAll: this.editAll,\r\n        addRange: this.addRange,\r\n        delete: this.delete,\r\n        reset: this.reset,\r\n        completeEdit: this.completeEdit,\r\n        cancelEdit: this.cancelEdit,\r\n        isEditing: this.isEditing,\r\n        getData: () => this.state.data\r\n    };\r\n\r\n    render() {\r\n        let columns = this.formatColumns();\r\n\r\n        let arr = this.getDataRows(); //this.state.data;\r\n\r\n        let props = this.props;\r\n        let { readOnly, editToolsConfig = {} } = props;\r\n\r\n        let newProps = {\r\n            dataSource: arr,\r\n            columns,\r\n            hover: true,\r\n            initRef: this.initRef\r\n        };\r\n\r\n        if (editToolsConfig.position !== \"top\" && readOnly != true) {\r\n            newProps.bottomExtra = this.editTools;\r\n        }\r\n\r\n        if (readOnly === true) {\r\n            newProps.selectMode = \"none\";\r\n        }\r\n\r\n        let cls = { height: \"100%\", width: \"100%\", backgroundColor: \"#ffffff\" };\r\n\r\n        return (\r\n            <Layout style={cls} data-tableid={this.props.tableId}>\r\n                {readOnly != true && this.createToolBar()}\r\n                <Content style={{ height: \"100%\" }}>\r\n                    <Table {...props} {...newProps} />\r\n                </Content>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditableTable;\r\n","import React, { Component } from \"react\";\r\nimport Table from \"../src/index\";\r\n\r\nconst generateColumns = (count = 10, prefix = \"column-\", props) =>\r\n  new Array(count).fill(0).map((column, columnIndex) => ({\r\n    ...props,\r\n    key: `${prefix}${columnIndex}`,\r\n    dataIndex: `${prefix}${columnIndex}`,\r\n    title: `Column ${columnIndex}`,\r\n    width: 150\r\n  }));\r\n\r\nconst generateData = (columns, count = 20, prefix = \"row-\") =>\r\n  new Array(count).fill(0).map((row, rowIndex) => {\r\n    return columns.reduce(\r\n      (rowData, column, columnIndex) => {\r\n        rowData[column.dataIndex] = `Row ${rowIndex} - Col ${columnIndex}`;\r\n\r\n        if (rowIndex === 0) {\r\n          rowData.children = [];\r\n        }\r\n\r\n        return rowData;\r\n      },\r\n      {\r\n        id: `${prefix}${rowIndex}`,\r\n        parentId: null\r\n      }\r\n    );\r\n  });\r\n\r\nconst columns = generateColumns(10);\r\nconst data = generateData(columns, 100);\r\n\r\nlet fixedColumns = columns.map((column, columnIndex) => {\r\n  let fixed;\r\n  if (columnIndex < 2) fixed = \"left\";\r\n  if (columnIndex > 8) fixed = \"right\";\r\n\r\n  return { ...column, resizable: true, fixed };\r\n});\r\n\r\nfixedColumns = [\r\n  {\r\n    dataIndex: \"column-1\",\r\n    key: \"column-1\",\r\n    title: \"number\",\r\n    width: 200,\r\n    resizable: true\r\n  },\r\n  {\r\n    title: \"appellation\",\r\n    width: 150,\r\n    key: \"column-11\",\r\n    children: [\r\n      {\r\n        dataIndex: \"column-2\",\r\n        title: \"name\",\r\n        key: \"column-2\",\r\n\r\n        width: 150,\r\n        resizable: true\r\n      },\r\n      {\r\n        dataIndex: \"column-3\",\r\n        key: \"column-3\",\r\n        title: \"nick name\",\r\n        width: 150,\r\n        resizable: true,\r\n        children: [\r\n          {\r\n            dataIndex: \"column-21\",\r\n            title: \"nick-1\",\r\n            key: \"column-21\",\r\n            maxWidth: 300,\r\n            width: 150,\r\n            resizable: true\r\n          },\r\n          {\r\n            dataIndex: \"column-31\",\r\n            key: \"column-31\",\r\n            title: \"nick-2\",\r\n            width: 150,\r\n            resizable: true\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    dataIndex: \"column-4\",\r\n    key: \"column-4\",\r\n    title: \"age\",\r\n    width: 150,\r\n    resizable: true\r\n  }\r\n];\r\n\r\nfunction createData(level, parentKey, maxLevel, index) {\r\n  if (level > maxLevel) {\r\n    return;\r\n  }\r\n\r\n  let l = level;\r\n  let data = [];\r\n  for (let i = 0; i < 3; i++) {\r\n    let k = parentKey + \"-\" + level + \"-\" + i;\r\n    let d = {\r\n      id: k,\r\n      \"column-1\": \"Edward King \" + k,\r\n      age: 32,\r\n      address: \"London, Park Lane no. \" + i\r\n    };\r\n\r\n    if (i === 2) {\r\n      d.children = createData(l + 1, k, maxLevel, i);\r\n    }\r\n\r\n    data.push(d);\r\n  }\r\n  return data;\r\n}\r\n\r\nfunction createTreeData() {\r\n  let data = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    data.push({\r\n      id: \"\" + i,\r\n      level: 0,\r\n      \"column-1\": \"Edward King \" + i,\r\n      age: 32,\r\n      address: \"London, Park Lane no. \" + i,\r\n      children: createData(0, i, 2)\r\n    });\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\nclass Demo extends Component {\r\n  state = {\r\n    data: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      data: createTreeData()\r\n    });\r\n  }\r\n\r\n  loadChildrenData = record => {\r\n    return new Promise((resolve, reject) => {\r\n      let rows = this.state.data;\r\n\r\n      setTimeout(() => {\r\n        let childrens = [{ id: \"123123123\", \"column-0\": \"children async\" }];\r\n        // record.isLoading=false;\r\n        record.children = childrens;\r\n        //rows[0] = Object.assign({}, record, { children: childrens });\r\n\r\n        this.setState({\r\n          data: rows\r\n        });\r\n\r\n        resolve();\r\n      }, 1300);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Table\r\n        rowKey=\"id\"\r\n        expandColumnKey=\"column-1\"\r\n        loadChildrenData={this.loadChildrenData}\r\n        columns={fixedColumns}\r\n        selectMode=\"multiple\"\r\n        data={this.state.data}\r\n        orderNumber={true}\r\n        disabledSelectKeys={[]}\r\n        onSelectChange={(keys, rows) => {\r\n          console.log(\"onSelectChange:\", rows);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Demo;\r\n","import React from \"react\";\r\n\r\nimport { Button, Input, Image, Popover } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport { EditableTable } from \"../src/index\";\r\n\r\nclass Demo extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: [\r\n        {\r\n          id: \"1\",\r\n          name: undefined,\r\n          age: 20,\r\n          idcard: \"512878211145551112\",\r\n          remark: \"我是张三\"\r\n        },\r\n        {\r\n          id: \"2\",\r\n          name: \"李四\",\r\n          age: 20,\r\n          idcard: \"512878211145551112\",\r\n          remark: \"我是李四\"\r\n        }\r\n      ]\r\n    };\r\n\r\n    this.columns = [\r\n      {\r\n        dataIndex: \"id\",\r\n        title: \"编号\",\r\n        key: \"id\",\r\n\r\n        width: 200\r\n      },\r\n      {\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n\r\n        title: \"姓名\",\r\n        width: 150,\r\n        validator: (value, row) => {\r\n          if (!value) {\r\n            return { valid: false, message: \"\" };\r\n          }\r\n\r\n          return { valid: true, message: \"\" };\r\n        },\r\n        editor: (value, row, index, onchange, ref) => {\r\n          return (\r\n            <Input\r\n              defaultValue={value}\r\n              ref={ref}\r\n              onChange={e => {\r\n                let newValue = e.target.value;\r\n                onchange({\r\n                  name: newValue,\r\n                  remark: \"我是\" + newValue\r\n                });\r\n              }}\r\n            />\r\n          );\r\n        }\r\n      },\r\n      {\r\n        dataIndex: \"age\",\r\n        title: \"年龄\",\r\n        key: \"age\",\r\n\r\n        width: 150,\r\n        validator: (value, row) => {\r\n          if (!value) {\r\n            return { valid: false, message: \"\" };\r\n          }\r\n\r\n          return { valid: true, message: \"\" };\r\n        },\r\n        editor: (value, row, index, onchange, ref) => {\r\n          return (\r\n            <Input\r\n              defaultValue={value}\r\n              ref={ref}\r\n              onChange={e =>\r\n                onchange({\r\n                  age: e.target.value,\r\n                  idcard: e.target.value\r\n                })\r\n              }\r\n            />\r\n          );\r\n        }\r\n      },\r\n      {\r\n        dataIndex: \"idcard\",\r\n        key: \"idcard\",\r\n\r\n        title: \"身份证\",\r\n        width: 150,\r\n        validator: (value, row) => {\r\n          if (!value) {\r\n            return { valid: false, message: \"\" };\r\n          }\r\n\r\n          return { valid: true, message: \"\" };\r\n        },\r\n        editor: (value, row, index, onchange, ref) => {\r\n          return (\r\n            <Input\r\n              value={value}\r\n              ref={ref}\r\n              onChange={e => onchange({ idcard: e.target.value })}\r\n            />\r\n          );\r\n        }\r\n      },\r\n      {\r\n        dataIndex: \"tel\",\r\n        key: \"tel\",\r\n        title: \"电话号码\",\r\n        width: 150,\r\n        render: () => {\r\n          return <div>test</div>;\r\n        },\r\n        validator: (value, row) => {\r\n          if (!value) {\r\n            return { valid: false, message: \"\" };\r\n          }\r\n\r\n          return { valid: true, message: \"\" };\r\n        },\r\n        editor: (value, row, index, onchange, ref) => {\r\n          return (\r\n            <Input\r\n              defaultValue={value}\r\n              ref={ref}\r\n              onChange={e => onchange({ tel: e.target.value })}\r\n            />\r\n          );\r\n        }\r\n      },\r\n      {\r\n        dataIndex: \"remark\",\r\n        key: \"remark\",\r\n        title: \"备注\",\r\n        width: 200,\r\n        editor: (value, row, index, onchange, ref) => {\r\n          return <Input value={value} ref={ref} disabled={true} />;\r\n        }\r\n      }\r\n    ];\r\n  }\r\n\r\n  onEditSave(changedRows, newData, type) {\r\n    this.setState({\r\n      data: newData\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(\"a:\",this.refs.etable);\r\n  }\r\n\r\n  render() {\r\n    let { data, count } = this.state;\r\n\r\n    return (\r\n      <EditableTable\r\n        editToolsConfig={{ position: \"top\" }}\r\n        editTools={[\"edit\", \"add\", \"delete\"]}\r\n        columns={this.columns}\r\n        dataSource={data}\r\n        defaultAddCount={1}\r\n        onEditSave={this.onEditSave.bind(this)}\r\n        isAppend={true}\r\n        alwaysValidate={true}\r\n        validateTrigger=\"onChange\"\r\n        rowKey=\"id\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Demo;\r\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from \"docz\";\nimport BasicDemo from \"./basic\";\nimport EditableDemo from \"./editable\";\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"table\"\n    }}>{`Table`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { Table } from \"tablex\";\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"基本用法\"\n    }}>{`基本用法`}</h2>\n    <Playground __position={0} __code={'<BasicDemo />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      BasicDemo,\n      EditableDemo\n    }} __codesandbox={`undefined`} style={{\n      height: 400\n    }} mdxType=\"Playground\">\n  <BasicDemo mdxType=\"BasicDemo\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"编辑\"\n    }}>{`编辑`}</h2>\n    <Playground __position={1} __code={'<EditableDemo />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      BasicDemo,\n      EditableDemo\n    }} __codesandbox={`undefined`} style={{\n      height: 400\n    }} mdxType=\"Playground\">\n  <EditableDemo mdxType=\"EditableDemo\" />\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}