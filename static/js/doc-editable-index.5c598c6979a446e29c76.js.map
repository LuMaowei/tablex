{"version":3,"sources":["e:/WebRoot/tablex/packages/siteCN/doc/Editable/complex/index.js","e:/WebRoot/tablex/packages/siteCN/doc/Editable/customEdit.js","e:/WebRoot/tablex/packages/siteCN/doc/Editable/Search.js","e:/WebRoot/tablex/packages/siteCN/doc/Editable/index.mdx","e:/WebRoot/tablex/packages/siteCN/node_modules/moment/locale sync ^/.*$"],"names":["Search","Input","BaseUrl","process","Demo","columns","dataIndex","key","title","width","editor","value","record","index","onchange","ref","validate","defaultValue","onChange","v","quantities","target","onKeyDown","e","stopPropagation","unitPrice","render","row","isNaN","state","loading","treeData","getData","setState","url","options","xhr","onSuccess","data","_","uniqBy","d","code","bl","forEach","id","pid","len","length","pl","substring","unflatten","XMLHttpRequest","open","onreadystatechange","onload","status","res","responseText","JSON","parse","onerror","onError","send","scrollToItem","refs","tb","expandTo","depth","expandAll","collapseAll","rowKey","deleteRow","api","deleteData","copiedRow","copy","rowData","k","hasOwnProperty","str","stringify","input","document","createElement","body","appendChild","setAttribute","select","execCommand","removeChild","pasteChildren","targetRow","sourceRow","insertData","parentKey","editing","scrollTo","isCut","cut","selectAll","selectToggle","expandToggle","onMenuClick","item","console","log","props","fn","del","export","searchIndex","searchedKey","onChangeSearch","onSearch","forceUpdate","searchedIndex","f","findData","name","indexOf","startIndex","focused","onFilter","filterData","slice","contentMenu","menuItemProps","style","height","lineHeight","selectable","onClick","Item","editable","this","selectMode","checkStrictly","orderNumber","resizable","contextMenu","validateTrigger","isAppend","header","margin","float","placeholder","Component","tableRef","React","createRef","expandedRowKeys","align","halign","minWidth","onCell","beginEdit","validator","valid","message","address","children","maxWidth","createData","level","maxLevel","l","i","age","push","childrens","createTreeData","arr","current","editRows","completeEdit","cancelEdit","Date","getTime","prepend","modifyData","changedRows","newRows","editType","bind","cursor","marginLeft","allowSaveEmpty","alwaysValidate","onEditSave","selectOnRowClick","SearchIcon","styled","Icon","ClearIcon","focus","onMouseEnter","onMouseLeave","onClear","getSuffix","allowClear","type","theme","undefined","Object","assign","onPressEnter","suffix","disabled","mode","spanProps","_disabled","nextProps","prevState","layoutProps","MDXLayout","MDXContent","components","mdxType","parentName","__position","__code","__scope","Playground","Props","Table","flatten","InputNumber","Select","DatePicker","Switch","Checkbox","Button","Complex","CustomEdit","generateData","count","prefix","Array","fill","map","rowIndex","reduce","column","columnIndex","Math","floor","random","parentId","newData","Promise","resolve","reject","setTimeout","keyboardNavigation","editTools","onBeforeAdd2","onBeforeAdd","edit","editorNoBorder","idcard","remark","newValue","number","tel","dataSource","defaultAddCount","readOnly","PureComponent","complete","etable","addRows","add","onCancel","onEditCancel","tools","icon","text","handler","alert","customTools","editToolsConfig","position","editText","editIcon","deleted","editAll","modified","r","getSelections","getExpanded","onComplete","onEditComplete","isMDXComponent","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","module","exports"],"mappings":"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","file":"static/js/doc-editable-index.60e7c607.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Table, unflatten } from \"tablex\";\nimport { Button, Input, Menu, InputNumber } from \"antd\";\nimport _ from \"lodash\";\n\nconst { Search } = Input;\n\nlet BaseUrl = process.env.DOCZ_BASE || \"\";\n\nfunction requestGet(url, options) {\n  let xhr = new XMLHttpRequest();\n  xhr.open(\"GET\", url, true);\n\n  xhr.onreadystatechange = function() {};\n\n  xhr.onload = function() {\n    if (xhr.status == 200) {\n      if (typeof options.onSuccess === \"function\") {\n        var res = {};\n        if (xhr.responseText) {\n          res = JSON.parse(xhr.responseText);\n        }\n        options.onSuccess(res);\n      }\n    }\n  };\n\n  xhr.onerror = options.onError;\n\n  xhr.send();\n}\n\nfunction createData(level, parentKey, maxLevel, index) {\n  if (level > maxLevel) {\n    return;\n  }\n\n  let l = level;\n  let data = [];\n  for (let i = 0; i < 5; i++) {\n    let k = parentKey + \"-\" + level + \"-\" + i;\n    let d = {\n      id: k,\n      name: \"Edward King \" + k,\n      age: 32,\n      address: \"London, Park Lane no. \" + i\n    };\n\n    if (i % 2 === 0) {\n      d.children = createData(l + 1, k, maxLevel, i);\n    }\n\n    data.push(d);\n  }\n  return data;\n}\n\nfunction createTreeData() {\n  let data = [];\n  for (let i = 0; i < 100; i++) {\n    data.push({\n      id: \"\" + i,\n      level: 0,\n      name: \"Edward King \" + i,\n      age: 32,\n      address: \"London, Park Lane no. \" + i,\n      children: createData(0, i, 4)\n    });\n  }\n\n  return data;\n}\n\nclass Demo extends Component {\n  columns = [\n    {\n      dataIndex: \"code\",\n      key: \"code\",\n      title: \"编码\",\n      width: 200\n    },\n    {\n      title: \"名称\",\n      width: 150,\n      key: \"name\",\n      dataIndex: \"name\"\n    },\n    {\n      dataIndex: \"description\",\n      key: \"description\",\n      title: \"特征描述\",\n      width: 150\n    },\n    {\n      dataIndex: \"unit\",\n      key: \"unit\",\n      title: \"单位\",\n      width: 150\n    },\n    {\n      dataIndex: \"quantities\",\n      key: \"quantities\",\n      title: \"工程量\",\n      width: 150,\n      editor: (value, record, index, onchange, ref, validate) => {\n        return (\n          <Input\n            defaultValue={value}\n            ref={ref}\n            onChange={v => {\n              onchange({ quantities: v.target.value });\n            }}\n          />\n        );\n      }\n    },\n    {\n      dataIndex: \"unitPrice\",\n      key: \"unitPrice\",\n      title: \"综合单价\",\n      width: 150,\n      editor: (value, record, index, onchange, ref, validate) => {\n        return (\n          <InputNumber\n            defaultValue={value}\n            ref={ref}\n            onKeyDown={e => {\n              e.stopPropagation();\n            }}\n            onChange={e => {\n              onchange({ unitPrice: e });\n            }}\n          />\n        );\n      }\n    },\n    {\n      dataIndex: \"totalPrice\",\n      key: \"totalPrice\",\n      title: \"合价\",\n      width: 150,\n      render: (value, row) => {\n        let v = row.unitPrice * row.quantities;\n        if (isNaN(v)) {\n          return \"\";\n        }\n        return v;\n      }\n    },\n    {\n      dataIndex: \"evaluation\",\n      key: \"evaluation\",\n      title: \"暂估价\",\n      width: 150\n    }\n  ];\n\n  state = {\n    loading: false,\n    treeData: []\n  };\n\n  getData = () => {\n    this.setState({ loading: true });\n\n    let c = 0;\n    requestGet(BaseUrl + \"/public/data.json\", {\n      onSuccess: data => {\n        data = _.uniqBy(data, d => {\n          return d.code;\n        });\n\n        let bl = false;\n\n        data.forEach(d => {\n          let id = d.code || \"\";\n          let pid = \"\";\n          let len = id.length;\n          d.id = id;\n\n          if (len >= 2) {\n            let pl = 2;\n\n            if (len % 2 !== 0) {\n              pl = 3;\n            }\n\n            if (id === \"040704\") {\n              bl = true;\n            }\n\n            if (bl === true) {\n              pid = \"0407\";\n            } else {\n              pid = id.substring(0, len - pl);\n            }\n          }\n\n          d.pid = pid;\n        });\n\n        let treeData = unflatten(data, \"id\", \"pid\");\n\n        this.setState({\n          loading: false,\n          treeData: treeData\n        });\n      }\n    });\n  };\n\n  scrollToItem = index => {\n    if (this.refs.tb) {\n      this.refs.tb.scrollToItem(index, \"center\");\n    }\n  };\n\n  expandTo = (depth = 1) => {\n    this.refs.tb.expandTo(depth);\n  };\n\n  expandAll = () => {\n    this.refs.tb.expandAll();\n  };\n  collapseAll = () => {\n    this.refs.tb.collapseAll();\n  };\n\n  rowKey = \"id\";\n  deleteRow = row => {\n    let rowKey = this.rowKey;\n    let key = row[rowKey];\n    this.refs.tb.api.deleteData([key]);\n  };\n\n  copiedRow = null;\n  copy = row => {\n    let rowData = {};\n\n    for (const k in row) {\n      if (row.hasOwnProperty(k) && k !== \"children\") {\n        rowData[k] = row[k];\n      }\n    }\n    let str = JSON.stringify(rowData);\n    this.copiedRow = JSON.stringify(rowData);\n\n    const input = document.createElement(\"input\");\n    document.body.appendChild(input);\n    input.setAttribute(\"value\", str);\n    input.select();\n    if (document.execCommand(\"copy\")) {\n      document.execCommand(\"copy\");\n    }\n    document.body.removeChild(input);\n  };\n\n  pasteChildren = targetRow => {\n    let rowKey = this.rowKey;\n\n    let copiedRow = this.copiedRow;\n\n    if (copiedRow) {\n      let sourceRow = JSON.parse(copiedRow);\n      sourceRow[rowKey] = \"copied_row_\" + sourceRow[rowKey];\n\n      this.refs.tb.api.insertData({\n        data: [sourceRow],\n        parentKey: targetRow[rowKey],\n        editing: true,\n        scrollTo: false\n      });\n\n      this.isCut = false;\n      this.copiedRow = null;\n    }\n  };\n\n  isCut = false;\n  cut = row => {\n    this.copy(row);\n    this.isCut = true;\n  };\n\n  selectAll = rowData => {\n    this.refs.tb.selectToggle(rowData);\n  };\n\n  expandToggle = rowData => {\n    this.refs.tb.expandToggle(rowData);\n  };\n\n  onMenuClick = ({ key, item }) => {\n    console.log(\"key:\", item.props.row);\n\n    let actions = {\n      del: this.deleteRow,\n      copy: this.copy,\n      cut: this.cut,\n      pasteChildren: this.pasteChildren,\n      selectAll: this.selectAll,\n      expandToggle: this.expandToggle,\n      export: this.export\n    };\n\n    let fn = actions[key];\n    if (typeof fn === \"function\") {\n      fn(item.props.row);\n    }\n  };\n\n  searchIndex = -1;\n  searchedKey = \"\";\n  onChangeSearch = () => {\n    this.searchIndex = 0;\n    this.searchedKey = \"\";\n  };\n\n  onSearch = v => {\n    if (!v) {\n      this.searchIndex = 0;\n      this.searchedKey = \"\";\n      this.scrollToItem(-1);\n      this.forceUpdate();\n      return;\n    }\n\n    //先展开所有以便查询定位\n    this.expandAll();\n\n    let searchedIndex = -1;\n    let searchedKey = \"\";\n\n    let f = this.refs.tb.findData(d => d.name.indexOf(v) > -1, {\n      startIndex: this.searchIndex,\n      focused: true\n    });\n\n    if (f) {\n      searchedIndex = f.index;\n      searchedKey = f.row.id;\n    }\n\n    if (searchedIndex > -1) {\n      this.searchIndex = searchedIndex + 1;\n      this.searchedKey = searchedKey;\n    } else {\n      this.searchIndex = -1;\n      this.searchedKey = \"\";\n    }\n  };\n\n  onFilter = v => {\n    let { treeData } = this.state;\n    if (!v) {\n      this.setState({ treeData: treeData.slice() }, this.collapseAll);\n      return;\n    }\n\n    this.refs.tb.filterData(d => {\n      return d.name.indexOf(v) > -1;\n    });\n\n    this.expandAll();\n  };\n\n  contentMenu = row => {\n    let menuItemProps = {\n      style: { height: \"auto\", lineHeight: \"normal\" },\n      row\n    };\n\n    return (\n      <Menu selectable={false} onClick={this.onMenuClick}>\n        <Menu.Item key=\"del\" {...menuItemProps}>\n          删除行\n        </Menu.Item>\n        <Menu.Item key=\"copy\" {...menuItemProps}>\n          复制行\n        </Menu.Item>\n        <Menu.Item key=\"cut\" {...menuItemProps}>\n          剪切行\n        </Menu.Item>\n        <Menu.Item key=\"pasteChildren\" {...menuItemProps}>\n          粘贴行(下级)\n        </Menu.Item>\n        <Menu.Item key=\"selectAll\" {...menuItemProps}>\n          全选/全否\n        </Menu.Item>\n        <Menu.Item key=\"expandToggle\" {...menuItemProps}>\n          展开/收缩\n        </Menu.Item>\n        <Menu.Item key=\"export\" {...menuItemProps}>\n          导出\n        </Menu.Item>\n        <Menu.Item key=\"print\" {...menuItemProps}>\n          打印\n        </Menu.Item>\n      </Menu>\n    );\n  };\n\n  render() {\n    return (\n      <div style={{ height: \"100%\" }}>\n        <Table\n          rowKey=\"id\"\n          editable={true}\n          ref=\"tb\"\n          loading={this.state.loading}\n          columns={this.columns}\n          selectMode=\"multiple\"\n          checkStrictly={false}\n          data={this.state.treeData}\n          orderNumber={{ resizable: true }}\n          contextMenu={this.contentMenu}\n          validateTrigger=\"onChange\"\n          isAppend={true}\n          header={() => (\n            <div>\n              <Button onClick={this.getData}>获取数据</Button>\n              <Button onClick={this.expandAll} style={{ margin: \"0 5px\" }}>\n                展开所有\n              </Button>\n              <Button\n                onClick={() => this.expandTo(1)}\n                style={{ margin: \"0 5px\" }}\n              >\n                展开至第二级\n              </Button>\n\n              <Button onClick={this.collapseAll}>折叠所有</Button>\n              <Search\n                style={{ float: \"right\", margin: \"0 5px\", width: \"150px\" }}\n                placeholder=\"输入名称过滤\"\n                onSearch={this.onFilter}\n              />\n              <Search\n                style={{ float: \"right\", margin: \"0 5px\", width: \"150px\" }}\n                placeholder=\"输入名称查找\"\n                onSearch={this.onSearch}\n                onChange={this.onChangeSearch}\n              />\n            </div>\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Demo;\n","import React, { Component } from \"react\";\r\nimport { Table } from \"tablex\";\r\nimport { Input, Button } from \"antd\";\r\nclass Demo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.tableRef = React.createRef();\r\n\r\n    this.state = {\r\n      data: [],\r\n      loading: false,\r\n      expandedRowKeys: []\r\n    };\r\n\r\n    this.columns = [\r\n      {\r\n        dataIndex: \"column-1\",\r\n        key: \"column-1\",\r\n        title: \"column-1\",\r\n        align: \"left\",\r\n        halign: \"center\",\r\n        minWidth: 300,\r\n        onCell: (row, value, index) => {\r\n          return {\r\n            onClick: () => {\r\n              this.beginEdit(row);\r\n            }\r\n          };\r\n        },\r\n        validator: function(value, row) {\r\n          if (!value) {\r\n            return { valid: false, message: \"请输入\" };\r\n          }\r\n\r\n          return { valid: true, message: \"false\" };\r\n        },\r\n        editor: function(value, row, index, onchange, ref) {\r\n          return (\r\n            <Input\r\n              defaultValue={value}\r\n              ref={ref}\r\n              onChange={e =>\r\n                onchange([\r\n                  { \"column-1\": e.target.value, id: row.id },\r\n                  { id: \"3\", address: e.target.value }\r\n                ])\r\n              }\r\n            />\r\n          );\r\n        }\r\n      },\r\n      {\r\n        title: \"appellation\",\r\n        width: 150,\r\n        halign: \"left\",\r\n        children: [\r\n          {\r\n            dataIndex: \"address\",\r\n            title: \"name\",\r\n            width: 200,\r\n            onCell: (row, value, index) => {\r\n              return {\r\n                onClick: () => {\r\n                  this.beginEdit(row);\r\n                }\r\n              };\r\n            },\r\n            editor: function(value, row, index, onchange, ref) {\r\n              return (\r\n                <Input\r\n                  defaultValue={value}\r\n                  ref={ref}\r\n                  onChange={e => onchange({ address: e.target.value })}\r\n                />\r\n              );\r\n            }\r\n          },\r\n          {\r\n            title: \"nick name\",\r\n            width: 150,\r\n            children: [\r\n              {\r\n                dataIndex: \"id\",\r\n                title: \"nick-1\",\r\n                maxWidth: 300,\r\n                width: 150\r\n              },\r\n              {\r\n                dataIndex: \"level\",\r\n                title: \"level\"\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        dataIndex: \"id\",\r\n        key: \"column-4\",\r\n        title: \"id\"\r\n      }\r\n    ];\r\n  }\r\n\r\n  componentDidMount() {\r\n    function createData(level, parentKey, maxLevel, index) {\r\n      if (level > maxLevel) {\r\n        return;\r\n      }\r\n\r\n      let l = level;\r\n      let data = [];\r\n      for (let i = 0; i < 3; i++) {\r\n        let k = parentKey + \"-\" + level + \"-\" + i;\r\n        let d = {\r\n          id: k,\r\n          \"column-1\": \"Edward King \" + k,\r\n          age: 32,\r\n          level: level,\r\n          address: \"London, Park Lane no. \" + i\r\n        };\r\n\r\n        if (i === 2) {\r\n          d.children = createData(l + 1, k, maxLevel, i);\r\n        }\r\n\r\n        data.push(d);\r\n      }\r\n      return data;\r\n    }\r\n\r\n    function createTreeData() {\r\n      let data = [];\r\n      for (let i = 0; i < 10; i++) {\r\n        let childrens = createData(0, i, 2);\r\n        let d = {\r\n          id: \"\" + i,\r\n          level: 0,\r\n          \"column-1\": \"Edward King \" + i,\r\n          age: i,\r\n          address: \"London, Park Lane no. \" + i\r\n        };\r\n\r\n        if (i % 3 === 0) {\r\n          d.children = childrens;\r\n        }\r\n\r\n        data.push(d);\r\n      }\r\n\r\n      return data;\r\n    }\r\n\r\n    this.setState({\r\n      data: createTreeData()\r\n    });\r\n  }\r\n\r\n  beginEdit(row) {\r\n    let arr = [];\r\n    arr.push(row.id);\r\n    this.tableRef.current.api.editRows(arr);\r\n  }\r\n\r\n  completeEdit() {\r\n    this.tableRef.current.api.completeEdit();\r\n  }\r\n\r\n  cancelEdit() {\r\n    this.tableRef.current.api.cancelEdit();\r\n  }\r\n\r\n  insertData() {\r\n    let arr = [];\r\n    arr.push({ id: \"inserted-row-\" + new Date().getTime() });\r\n\r\n    this.tableRef.current.api.insertData({\r\n      data: arr,\r\n      parentKey: \"3\",\r\n      editing: true,\r\n      prepend: false,\r\n      startIndex: 2\r\n    });\r\n  }\r\n\r\n  modifyData() {\r\n    let arr = [];\r\n    arr.push({ id: \"inserted-row-\" + new Date().getTime() });\r\n\r\n    this.tableRef.current.api.modifyData([\r\n      {\r\n        id: \"3\",\r\n        \"column-1\": \"modifyData-\" + new Date().getTime(),\r\n        level: 3\r\n      }\r\n    ]);\r\n  }\r\n\r\n  delete() {\r\n    this.tableRef.current.api.deleteData();\r\n  }\r\n\r\n  onEditSave(changedRows, newRows, editType) {\r\n    console.log(\"onEditSave changedRows:\", changedRows);\r\n    console.log(\"onEditSave newRows:\", newRows);\r\n    this.setState({ data: newRows });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ height: \"100%\" }}>\r\n        <Table\r\n          header={() => {\r\n            return (\r\n              <div>\r\n                <Button\r\n                  onClick={this.completeEdit.bind(this)}\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  complete edit\r\n                </Button>\r\n\r\n                <Button\r\n                  onClick={this.cancelEdit.bind(this)}\r\n                  style={{ cursor: \"pointer\", marginLeft: 10 }}\r\n                >\r\n                  cancel edit\r\n                </Button>\r\n\r\n                <Button\r\n                  onClick={this.insertData.bind(this)}\r\n                  style={{ cursor: \"pointer\", marginLeft: 10 }}\r\n                >\r\n                  insert data\r\n                </Button>\r\n\r\n                <Button\r\n                  onClick={this.modifyData.bind(this)}\r\n                  style={{ cursor: \"pointer\", marginLeft: 10 }}\r\n                >\r\n                  modify data\r\n                </Button>\r\n\r\n                <Button\r\n                  onClick={this.delete.bind(this)}\r\n                  style={{ cursor: \"pointer\", marginLeft: 10 }}\r\n                >\r\n                  delete\r\n                </Button>\r\n              </div>\r\n            );\r\n          }}\r\n          editable={false}\r\n          isAppend={false}\r\n          allowSaveEmpty={true}\r\n          alwaysValidate={true}\r\n          ref={this.tableRef}\r\n          rowKey=\"id\"\r\n          onEditSave={this.onEditSave.bind(this)}\r\n          columns={this.columns}\r\n          selectMode=\"multiple\"\r\n          checkStrictly={false}\r\n          data={this.state.data}\r\n          validateTrigger=\"onChange\"\r\n          selectOnRowClick={false}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Demo;\r\n","import React from \"react\";\r\nimport Input from \"antd/lib/input\";\r\nimport Icon from \"antd/lib/icon\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst SearchIcon = styled(Icon)`\r\n&&&&{\r\n    cursor:pointer;\r\n}\r\n&:hover{\r\n    color:#40a9ff;\r\n}\r\n`;\r\nconst ClearIcon = styled(Icon)`\r\ncursor:pointer;\r\nmargin-right:5px;\r\ncolor:#BFBFBF;\r\n&:hover{\r\n    color:#8C8C8C;\r\n}\r\n`;\r\nclass Search extends React.Component {\r\n\r\n    state = {\r\n        value: \"\",\r\n        focus: false\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: props.value === undefined ? \"\" : props.value\r\n        };\r\n    }\r\n\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n\r\n        if ('value' in nextProps) {\r\n            return { value: nextProps.value };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n    onSearch = () => {\r\n        if (typeof this.props.onSearch === \"function\") {\r\n            this.props.onSearch(this.state.value)\r\n        }\r\n\r\n    }\r\n\r\n    onChange = (e) => {\r\n        let value = e.target ? e.target.value : e;\r\n\r\n\r\n        if (!('value' in this.props)) {\r\n            this.setState({ value });\r\n        }\r\n\r\n\r\n        const onChange = this.props.onChange;\r\n        if (onChange) {\r\n            onChange(value);\r\n        }\r\n    }\r\n\r\n    onMouseEnter = () => {\r\n        this.setState({ focus: true });\r\n    }\r\n    onMouseLeave = () => {\r\n        this.setState({ focus: false });\r\n    }\r\n    onClear = () => {\r\n        this.onChange('');\r\n    }\r\n    getSuffix = () => {\r\n        const { allowClear} = this.props;\r\n        const { focus, value } = this.state;\r\n        \r\n        return <span >\r\n            {\r\n                allowClear && focus && (value != null && value !== \"\")\r\n                && <ClearIcon type=\"close-circle\" theme=\"filled\" onClick={this.onClear} />\r\n            }\r\n            <SearchIcon type=\"search\" onClick={this.onSearch} />\r\n        </span>;\r\n    }\r\n    render() {\r\n        let props = Object.assign({}, this.props, {\r\n            onChange: this.onChange,\r\n            value: this.state.value,\r\n            onPressEnter: this.onSearch,\r\n            suffix: !this.props.disabled ? this.getSuffix() : null,\r\n        });\r\n\r\n        delete props.allowClear\r\n\r\n        delete props.onSearch;\r\n\r\n        const { mode } = this.props;\r\n\r\n        const spanProps = {\r\n            onMouseEnter: this.onMouseEnter,\r\n            onMouseLeave: this.onMouseLeave,\r\n            style: { width: '100%' }\r\n        }\r\n\r\n        if (mode === \"choseonly\") {\r\n            return <span {...spanProps}>\r\n                <Input\r\n                    {...props}\r\n                    disabled\r\n                    _disabled={this.props.disabled ? \"true\" : \"false\"}//使用此属性，使禁用的文本框显示正常颜色的字体\r\n                /></span>\r\n        } else {\r\n            return <span  {...spanProps}><Input {...props} /></span>\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default Search;\r\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground, Props } from \"docz\";\nimport Table, { flatten } from \"tablex\";\nimport { Input, InputNumber, Select, DatePicker, Switch, Checkbox,Button } from \"antd\";\nimport 'antd/dist/antd.css';\nimport Complex from \"./complex\";\nimport CustomEdit from \"./customEdit\";\nimport Search from \"./Search\"\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"用法示例\"\n    }}>{`用法示例`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import Table, { flatten, unflatten } from \"tablex\";\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"基本编辑及验证\"\n    }}>{`基本编辑及验证`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`编辑有追加模式、非追加模式两种，通过isAppend=true|false 控制，追加模式不会更改当前表格视图的显示数据，否则将会清空当前表格数据视图（不影响数据）`}</p>\n    </blockquote>\n    <Playground __position={0} __code={'class Demo extends React.Component {\\n    generateData(columns, count = 20, prefix = \\'Row\\') {\\n      return new Array(count).fill(0).map((row, rowIndex) => {\\n        return columns.reduce(\\n          (rowData, column, columnIndex) => {\\n            if (column.dataIndex !== \\'id\\') {\\n              rowData[column.dataIndex] = Math.floor(Math.random() * 100 + 1)\\n            } else {\\n              rowData[column.dataIndex] =\\n                prefix + \\' \\' + rowIndex + \\' - Col \\' + columnIndex\\n            }\\n            return rowData\\n          },\\n          {\\n            id: prefix + rowIndex,\\n            parentId: null,\\n          },\\n        )\\n      })\\n    }\\n    constructor(props) {\\n      super(props)\\n      const columns = [\\n        {\\n          dataIndex: \\'id\\',\\n          title: \\'id\\',\\n          key: \\'id\\',\\n          width: 150,\\n        },\\n        {\\n          dataIndex: \\'column-1\\',\\n          title: \\'column-1\\',\\n          width: 100,\\n          validator: function(value, row) {\\n            if (!value) {\\n              return { valid: false, message: \\'请输入\\' }\\n            }\\n\\n            return { valid: true, message: \\'false\\' }\\n          },\\n          editor: function(value, row, index, onchange, ref) {\\n            return (\\n              <Search\\n                allowClear\\n                defaultValue={\\'1\\'}\\n                ref={ref}\\n                placeholder=\\\"请输入\\\"\\n                onChange={e => onchange({ [\\'column-1\\']: value })}\\n              />\\n            )\\n          },\\n        },\\n\\n        {\\n          dataIndex: \\'column-2\\',\\n          title: \\'column-2\\',\\n          width: 150,\\n          align: \\'center\\',\\n          editor: function(value, row, index, onchange, ref) {\\n            return (\\n              <InputNumber\\n                defaultValue={value}\\n                ref={ref}\\n                onChange={e => onchange({ [\\'column-2\\']: e })}\\n              />\\n            )\\n          },\\n        },\\n        {\\n          dataIndex: \\'column-3\\',\\n          title: \\'column-3\\',\\n          align: \\'right\\',\\n          editor: function(value, row, index, onchange, ref) {\\n            return <Select defaultValue={value} ref={ref} />\\n          },\\n        },\\n        {\\n          dataIndex: \\'column-4\\',\\n          title: \\'column-4\\',\\n          width: 100,\\n          align: \\'center\\',\\n        },\\n      ]\\n\\n      let data = this.generateData(columns, 10)\\n\\n      data[1].children = this.generateData(columns, 3, \\'children-\\')\\n\\n      this.state = {\\n        data: data,\\n        columns: columns,\\n      }\\n    }\\n    onEditSave(changedRows, newData, type) {\\n      console.log(\\'onEditSave:\\', newData)\\n      return new Promise((resolve, reject) => {\\n        setTimeout(function() {\\n          reject(\\'asdsa\\')\\n          console.log(\\'reject after\\')\\n        }, 1000)\\n      }).catch(e => {\\n        console.log(\\'catch\\')\\n        throw e\\n      })\\n    }\\n    render() {\\n      let { columns, data } = this.state\\n      return (\\n        <Table\\n          rowKey=\\\"id\\\"\\n          columns={columns}\\n          validateTrigger=\\\"onChange\\\"\\n          data={data}\\n          editable={true}\\n          keyboardNavigation={true}\\n          alwaysValidate={true}\\n          isAppend={false}\\n          allowSaveEmpty={false}\\n          selectMode={\\'multiple\\'}\\n          checkStrictly={false}\\n          editTools={[\\'edit\\', \\'add\\', \\'delete\\']}\\n          onEditSave={this.onEditSave.bind(this)}\\n        />\\n      )\\n    }\\n  }'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Table,\n      flatten,\n      Input,\n      InputNumber,\n      Select,\n      DatePicker,\n      Switch,\n      Checkbox,\n      Button,\n      Complex,\n      CustomEdit,\n      Search\n    }} style={{\n      height: 400\n    }} mdxType=\"Playground\">\n {class Demo extends React.Component {\n        generateData(columns, count = 20, prefix = \"Row\") {\n          return new Array(count).fill(0).map((row, rowIndex) => {\n            return columns.reduce((rowData, column, columnIndex) => {\n              if (column.dataIndex !== \"id\") {\n                rowData[column.dataIndex] = Math.floor(Math.random() * 100 + 1);\n              } else {\n                rowData[column.dataIndex] = prefix + \" \" + rowIndex + \" - Col \" + columnIndex;\n              }\n\n              return rowData;\n            }, {\n              id: prefix + rowIndex,\n              parentId: null\n            });\n          });\n        }\n\n        constructor(props) {\n          super(props);\n          const columns = [{\n            dataIndex: \"id\",\n            title: \"id\",\n            key: \"id\",\n            width: 150\n          }, {\n            dataIndex: \"column-1\",\n            title: \"column-1\",\n            width: 100,\n            validator: function (value, row) {\n              if (!value) {\n                return {\n                  valid: false,\n                  message: \"请输入\"\n                };\n              }\n\n              return {\n                valid: true,\n                message: \"false\"\n              };\n            },\n            editor: function (value, row, index, onchange, ref) {\n              return <Search allowClear defaultValue={\"1\"} ref={ref} placeholder=\"请输入\" onChange={e => onchange({\n                [\"column-1\"]: value\n              })} mdxType=\"Search\" />;\n            }\n          }, {\n            dataIndex: \"column-2\",\n            title: \"column-2\",\n            width: 150,\n            align: \"center\",\n            editor: function (value, row, index, onchange, ref) {\n              return <InputNumber defaultValue={value} ref={ref} onChange={e => onchange({\n                [\"column-2\"]: e\n              })} mdxType=\"InputNumber\" />;\n            }\n          }, {\n            dataIndex: \"column-3\",\n            title: \"column-3\",\n            align: \"right\",\n            editor: function (value, row, index, onchange, ref) {\n              return <Select defaultValue={value} ref={ref} mdxType=\"Select\" />;\n            }\n          }, {\n            dataIndex: \"column-4\",\n            title: \"column-4\",\n            width: 100,\n            align: \"center\"\n          }];\n          let data = this.generateData(columns, 10);\n          data[1].children = this.generateData(columns, 3, \"children-\");\n          this.state = {\n            data: data,\n            columns: columns\n          };\n        }\n\n        onEditSave(changedRows, newData, type) {\n          console.log(\"onEditSave:\", newData);\n          return new Promise((resolve, reject) => {\n            setTimeout(function () {\n              reject(\"asdsa\");\n              console.log(\"reject after\");\n            }, 1000);\n          }).catch(e => {\n            console.log(\"catch\");\n            throw e;\n          });\n        }\n\n        render() {\n          let {\n            columns,\n            data\n          } = this.state;\n          return <Table rowKey=\"id\" columns={columns} validateTrigger=\"onChange\" data={data} editable={true} keyboardNavigation={true} alwaysValidate={true} isAppend={false} allowSaveEmpty={false} selectMode={\"multiple\"} checkStrictly={false} editTools={['edit', 'add', 'delete']} onEditSave={this.onEditSave.bind(this)} mdxType=\"Table\" />;\n        }\n\n      }}\n    </Playground>\n    <Playground __position={1} __code={'class Demo extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      const columns = [\\n        {\\n          dataIndex: \\'id\\',\\n          title: \\'id\\',\\n          key: \\'id\\',\\n          width: 150,\\n        },\\n        {\\n          dataIndex: \\'column-1\\',\\n          title: \\'column-1\\',\\n          width: 100,\\n          validator: function(value, row) {\\n            console.log(\\'validator:\\', row.id, value)\\n            if (!value) {\\n              return { valid: false, message: \\'请输入\\' }\\n            }\\n\\n            return { valid: true, message: \\'false\\' }\\n          },\\n          editor: function(value, row, index, onchange, ref) {\\n            return (\\n              <Input\\n                defaultValue={value}\\n                ref={ref}\\n                onChange={e => {\\n                  onchange({ \\'column-1\\': e.target.value })\\n                }}\\n              />\\n            )\\n          },\\n        },\\n\\n        {\\n          dataIndex: \\'column-2\\',\\n          title: \\'column-2\\',\\n          width: 150,\\n          align: \\'center\\',\\n        },\\n\\n        {\\n          dataIndex: \\'column-3\\',\\n          title: \\'column-3\\',\\n          align: \\'right\\',\\n        },\\n        {\\n          dataIndex: \\'column-4\\',\\n          title: \\'column-4\\',\\n          width: 100,\\n          align: \\'center\\',\\n        },\\n      ]\\n\\n      this.state = {\\n        data: [],\\n        columns: columns,\\n      }\\n    }\\n    onEditSave(changedRows, newData, type) {\\n      console.log(\\'onEditSave changedRows:\\', changedRows)\\n      console.log(\\'onEditSave newData:\\', newData)\\n      this.setState({\\n        data: newData,\\n      })\\n    }\\n    onBeforeAdd() {\\n      console.log(\\'onBeforeAdd:\\', this.state.data)\\n      this.setState({\\n        data: this.state.data.slice(),\\n      })\\n    }\\n    render() {\\n      let { columns, data } = this.state\\n      return (\\n        <Table\\n          rowKey=\\\"id\\\"\\n          columns={columns}\\n          validateTrigger=\\\"onChange\\\"\\n          data={data}\\n          isAppend={true}\\n          editable={true}\\n          onBeforeAdd2={this.onBeforeAdd.bind(this)}\\n          allowSaveEmpty={true}\\n          alwaysValidate={true}\\n          selectMode={\\'multiple\\'}\\n          checkStrictly={false}\\n          editTools={[\\'edit\\', \\'add\\', \\'delete\\']}\\n          onEditSave={this.onEditSave.bind(this)}\\n        />\\n      )\\n    }\\n  }'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Table,\n      flatten,\n      Input,\n      InputNumber,\n      Select,\n      DatePicker,\n      Switch,\n      Checkbox,\n      Button,\n      Complex,\n      CustomEdit,\n      Search\n    }} style={{\n      height: 400\n    }} mdxType=\"Playground\">\n {class Demo extends React.Component {\n        constructor(props) {\n          super(props);\n          const columns = [{\n            dataIndex: \"id\",\n            title: \"id\",\n            key: \"id\",\n            width: 150\n          }, {\n            dataIndex: \"column-1\",\n            title: \"column-1\",\n            width: 100,\n            validator: function (value, row) {\n              console.log(\"validator:\", row.id, value);\n\n              if (!value) {\n                return {\n                  valid: false,\n                  message: \"请输入\"\n                };\n              }\n\n              return {\n                valid: true,\n                message: \"false\"\n              };\n            },\n            editor: function (value, row, index, onchange, ref) {\n              return <Input defaultValue={value} ref={ref} onChange={e => {\n                onchange({\n                  \"column-1\": e.target.value\n                });\n              }} mdxType=\"Input\" />;\n            }\n          }, {\n            dataIndex: \"column-2\",\n            title: \"column-2\",\n            width: 150,\n            align: \"center\"\n          }, {\n            dataIndex: \"column-3\",\n            title: \"column-3\",\n            align: \"right\"\n          }, {\n            dataIndex: \"column-4\",\n            title: \"column-4\",\n            width: 100,\n            align: \"center\"\n          }];\n          this.state = {\n            data: [],\n            columns: columns\n          };\n        }\n\n        onEditSave(changedRows, newData, type) {\n          console.log(\"onEditSave changedRows:\", changedRows);\n          console.log(\"onEditSave newData:\", newData);\n          this.setState({\n            data: newData\n          });\n        }\n\n        onBeforeAdd() {\n          console.log(\"onBeforeAdd:\", this.state.data);\n          this.setState({\n            data: this.state.data.slice()\n          });\n        }\n\n        render() {\n          let {\n            columns,\n            data\n          } = this.state;\n          return <Table rowKey=\"id\" columns={columns} validateTrigger=\"onChange\" data={data} isAppend={true} editable={true} onBeforeAdd2={this.onBeforeAdd.bind(this)} allowSaveEmpty={true} alwaysValidate={true} selectMode={\"multiple\"} checkStrictly={false} editTools={['edit', 'add', 'delete']} onEditSave={this.onEditSave.bind(this)} mdxType=\"Table\" />;\n        }\n\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"编辑器无边框\"\n    }}>{`编辑器无边框`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`此模式，只对antd内置的input、datepicker、inputnumber、select生效。若想自定义，可通过自定义样式进行覆盖`}</p>\n    </blockquote>\n    <Playground __position={2} __code={'class Demo extends React.Component {\\n    generateData(columns, count = 20, prefix = \\'Row\\') {\\n      return new Array(count).fill(0).map((row, rowIndex) => {\\n        return columns.reduce(\\n          (rowData, column, columnIndex) => {\\n            if (column.dataIndex !== \\'id\\') {\\n              rowData[column.dataIndex] = Math.floor(Math.random() * 100 + 1)\\n            } else {\\n              rowData[column.dataIndex] =\\n                prefix + \\' \\' + rowIndex + \\' - Col \\' + columnIndex\\n            }\\n            return rowData\\n          },\\n          {\\n            id: prefix + rowIndex,\\n            parentId: null,\\n          },\\n        )\\n      })\\n    }\\n    constructor(props) {\\n      super(props)\\n      const columns = [\\n        {\\n          dataIndex: \\'id\\',\\n          title: \\'id\\',\\n          key: \\'id\\',\\n          width: 150,\\n        },\\n        {\\n          dataIndex: \\'column-1\\',\\n          title: \\'column-1\\',\\n          width: 100,\\n          validator: function(value, row) {\\n            if (!value) {\\n              return { valid: false, message: \\'请输入\\' }\\n            }\\n\\n            return { valid: true, message: \\'false\\' }\\n          },\\n          editor: function(value, row, index, onchange, ref) {\\n            return (\\n              <Input\\n                defaultValue={value}\\n                ref={ref}\\n                onChange={e => onchange({ [\\'column-1\\']: e.target.value })}\\n              />\\n            )\\n          },\\n        },\\n\\n        {\\n          dataIndex: \\'column-2\\',\\n          title: \\'column-2\\',\\n          width: 150,\\n          align: \\'center\\',\\n          validator: function(value, row) {\\n            if (!value) {\\n              return { valid: false, message: \\'请输入\\' }\\n            }\\n\\n            return { valid: true, message: \\'false\\' }\\n          },\\n          editor: function(value, row, index, onchange, ref) {\\n            return (\\n              <InputNumber\\n                defaultValue={value}\\n                ref={ref}\\n                onChange={e => onchange({ [\\'column-2\\']: e })}\\n              />\\n            )\\n          },\\n        },\\n\\n        {\\n          dataIndex: \\'column-3\\',\\n          title: \\'column-3\\',\\n          align: \\'right\\',\\n          validator: function(value, row) {\\n            if (!value) {\\n              return { valid: false, message: \\'请输入\\' }\\n            }\\n\\n            return { valid: true, message: \\'false\\' }\\n          },\\n          editor: function(value, row, index, onchange, ref) {\\n            return (\\n              <Select\\n                defaultValue={value}\\n                ref={ref}\\n                onChange={e => onchange({ [\\'column-3\\']: e })}\\n              />\\n            )\\n          },\\n        },\\n        {\\n          dataIndex: \\'column-4\\',\\n          title: \\'column-4\\',\\n          width: 100,\\n          align: \\'center\\',\\n          validator: function(value, row) {\\n            if (!value) {\\n              return { valid: false, message: \\'请输入\\' }\\n            }\\n\\n            return { valid: true, message: \\'false\\' }\\n          },\\n          editor: function(value, row, index, onchange, ref) {\\n            return (\\n              <DatePicker\\n                placeholder=\\\"\\\"\\n                ref={ref}\\n                onChange={e => onchange({ [\\'column-4\\']: e })}\\n              />\\n            )\\n          },\\n        },\\n        {\\n          dataIndex: \\'column-5\\',\\n          title: \\'column-5\\',\\n          width: 100,\\n          align: \\'center\\',\\n          validator: function(value, row) {\\n            if (!value) {\\n              return { valid: false, message: \\'请输入\\' }\\n            }\\n\\n            return { valid: true, message: \\'false\\' }\\n          },\\n          editor: function(value, row, index, onchange, ref) {\\n            return (\\n              <Switch\\n                ref={ref}\\n                onChange={e => onchange({ [\\'column-5\\']: e.target.value })}\\n              />\\n            )\\n          },\\n        },\\n      ]\\n\\n      let data = this.generateData(columns, 10)\\n\\n      data[1].children = this.generateData(columns, 3, \\'children-\\')\\n\\n      this.state = {\\n        data: data,\\n        columns: columns,\\n      }\\n    }\\n    onEditSave(changedRows, newData, type) {\\n      console.log(\\'onEditSave:\\', newData)\\n      this.setState({\\n        data: newData,\\n      })\\n    }\\n    componentDidMount() {\\n      this.refs.tableRef.api.edit()\\n    }\\n    render() {\\n      let { columns, data } = this.state\\n      return (\\n        <Table\\n          rowKey=\\\"id\\\"\\n          ref=\\\"tableRef\\\"\\n          columns={columns}\\n          validateTrigger=\\\"onChange\\\"\\n          data={data}\\n          editorNoBorder={true}\\n          editable={true}\\n          selectMode={\\'multiple\\'}\\n          checkStrictly={false}\\n          editTools={[\\'edit\\', \\'add\\', \\'delete\\']}\\n          onEditSave={this.onEditSave.bind(this)}\\n        />\\n      )\\n    }\\n  }'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Table,\n      flatten,\n      Input,\n      InputNumber,\n      Select,\n      DatePicker,\n      Switch,\n      Checkbox,\n      Button,\n      Complex,\n      CustomEdit,\n      Search\n    }} style={{\n      height: 600\n    }} mdxType=\"Playground\">\n {class Demo extends React.Component {\n        generateData(columns, count = 20, prefix = \"Row\") {\n          return new Array(count).fill(0).map((row, rowIndex) => {\n            return columns.reduce((rowData, column, columnIndex) => {\n              if (column.dataIndex !== \"id\") {\n                rowData[column.dataIndex] = Math.floor(Math.random() * 100 + 1);\n              } else {\n                rowData[column.dataIndex] = prefix + \" \" + rowIndex + \" - Col \" + columnIndex;\n              }\n\n              return rowData;\n            }, {\n              id: prefix + rowIndex,\n              parentId: null\n            });\n          });\n        }\n\n        constructor(props) {\n          super(props);\n          const columns = [{\n            dataIndex: \"id\",\n            title: \"id\",\n            key: \"id\",\n            width: 150\n          }, {\n            dataIndex: \"column-1\",\n            title: \"column-1\",\n            width: 100,\n            validator: function (value, row) {\n              if (!value) {\n                return {\n                  valid: false,\n                  message: \"请输入\"\n                };\n              }\n\n              return {\n                valid: true,\n                message: \"false\"\n              };\n            },\n            editor: function (value, row, index, onchange, ref) {\n              return <Input defaultValue={value} ref={ref} onChange={e => onchange({\n                [\"column-1\"]: e.target.value\n              })} mdxType=\"Input\" />;\n            }\n          }, {\n            dataIndex: \"column-2\",\n            title: \"column-2\",\n            width: 150,\n            align: \"center\",\n            validator: function (value, row) {\n              if (!value) {\n                return {\n                  valid: false,\n                  message: \"请输入\"\n                };\n              }\n\n              return {\n                valid: true,\n                message: \"false\"\n              };\n            },\n            editor: function (value, row, index, onchange, ref) {\n              return <InputNumber defaultValue={value} ref={ref} onChange={e => onchange({\n                [\"column-2\"]: e\n              })} mdxType=\"InputNumber\" />;\n            }\n          }, {\n            dataIndex: \"column-3\",\n            title: \"column-3\",\n            align: \"right\",\n            validator: function (value, row) {\n              if (!value) {\n                return {\n                  valid: false,\n                  message: \"请输入\"\n                };\n              }\n\n              return {\n                valid: true,\n                message: \"false\"\n              };\n            },\n            editor: function (value, row, index, onchange, ref) {\n              return <Select defaultValue={value} ref={ref} onChange={e => onchange({\n                [\"column-3\"]: e\n              })} mdxType=\"Select\" />;\n            }\n          }, {\n            dataIndex: \"column-4\",\n            title: \"column-4\",\n            width: 100,\n            align: \"center\",\n            validator: function (value, row) {\n              if (!value) {\n                return {\n                  valid: false,\n                  message: \"请输入\"\n                };\n              }\n\n              return {\n                valid: true,\n                message: \"false\"\n              };\n            },\n            editor: function (value, row, index, onchange, ref) {\n              return <DatePicker placeholder=\"\" ref={ref} onChange={e => onchange({\n                [\"column-4\"]: e\n              })} mdxType=\"DatePicker\" />;\n            }\n          }, {\n            dataIndex: \"column-5\",\n            title: \"column-5\",\n            width: 100,\n            align: \"center\",\n            validator: function (value, row) {\n              if (!value) {\n                return {\n                  valid: false,\n                  message: \"请输入\"\n                };\n              }\n\n              return {\n                valid: true,\n                message: \"false\"\n              };\n            },\n            editor: function (value, row, index, onchange, ref) {\n              return <Switch ref={ref} onChange={e => onchange({\n                [\"column-5\"]: e.target.value\n              })} mdxType=\"Switch\" />;\n            }\n          }];\n          let data = this.generateData(columns, 10);\n          data[1].children = this.generateData(columns, 3, \"children-\");\n          this.state = {\n            data: data,\n            columns: columns\n          };\n        }\n\n        onEditSave(changedRows, newData, type) {\n          console.log(\"onEditSave:\", newData);\n          this.setState({\n            data: newData\n          });\n        }\n\n        componentDidMount() {\n          this.refs.tableRef.api.edit();\n        }\n\n        render() {\n          let {\n            columns,\n            data\n          } = this.state;\n          return <Table rowKey=\"id\" ref=\"tableRef\" columns={columns} validateTrigger=\"onChange\" data={data} editorNoBorder={true} editable={true} selectMode={\"multiple\"} checkStrictly={false} editTools={['edit', 'add', 'delete']} onEditSave={this.onEditSave.bind(this)} mdxType=\"Table\" />;\n        }\n\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"只读模式\"\n    }}>{`只读模式`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`只读模式将不显示编辑栏及复选框，也无法进行行选择`}</p>\n    </blockquote>\n    <Playground __position={3} __code={'class Demo extends React.PureComponent {\\n    constructor(props) {\\n      super(props)\\n      this.state = {\\n        data: [\\n          {\\n            id: \\'1\\',\\n            name: \\'张三\\',\\n            age: 20,\\n            idcard: \\'512878211145551112\\',\\n            remark: \\'我是张三\\',\\n          },\\n          {\\n            id: \\'2\\',\\n            name: \\'李四\\',\\n            age: 20,\\n            idcard: \\'512878211145551112\\',\\n            remark: \\'我是李四\\',\\n          },\\n        ],\\n      }\\n\\n      this.columns = [\\n        {\\n          dataIndex: \\'id\\',\\n          title: \\'编号\\',\\n          width: 200,\\n          validator: (value, row) => {\\n            if (!value) {\\n              return { valid: false, message: \\'\\' }\\n            }\\n            return { valid: true, message: \\'\\' }\\n          },\\n          editor: (value, row, index, onchange, ref) => {\\n            return (\\n              <Input\\n                defaultValue={value}\\n                ref={ref}\\n                onChange={e => {\\n                  let newValue = e.target.value\\n                  onchange({ number: newValue })\\n                }}\\n              ></Input>\\n            )\\n          },\\n        },\\n        {\\n          width: 150,\\n          dataIndex: \\'name\\',\\n          title: \\'姓名\\',\\n          width: 150,\\n          validator: (value, row) => {\\n            if (!value) {\\n              return { valid: false, message: \\'\\' }\\n            }\\n\\n            return { valid: true, message: \\'\\' }\\n          },\\n          editor: (value, row, index, onchange, ref) => {\\n            return (\\n              <Input\\n                defaultValue={value}\\n                ref={ref}\\n                onChange={e => {\\n                  let newValue = e.target.value\\n                  onchange({ name: newValue })\\n                }}\\n              ></Input>\\n            )\\n          },\\n        },\\n        {\\n          dataIndex: \\'age\\',\\n          title: \\'年龄\\',\\n          width: 150,\\n\\n          editor: (value, row, index, onchange, ref) => {\\n            return (\\n              <Input\\n                defaultValue={value}\\n                ref={ref}\\n                onChange={e =>\\n                  onchange({ age: e.target.value, idcard: e.target.value })\\n                }\\n              ></Input>\\n            )\\n          },\\n        },\\n        {\\n          dataIndex: \\'idcard\\',\\n          title: \\'身份证\\',\\n          width: 150,\\n\\n          editor: (value, row, index, onchange, ref) => {\\n            return (\\n              <Input\\n                value={value}\\n                ref={ref}\\n                onChange={e => onchange({ idcard: e.target.value })}\\n              ></Input>\\n            )\\n          },\\n        },\\n        {\\n          dataIndex: \\'tel\\',\\n          title: \\'电话号码\\',\\n          width: 150,\\n\\n          editor: (value, row, index, onchange, ref) => {\\n            return (\\n              <Input\\n                defaultValue={value}\\n                ref={ref}\\n                onChange={e => onchange({ tel: e.target.value })}\\n              ></Input>\\n            )\\n          },\\n        },\\n        {\\n          dataIndex: \\'remark\\',\\n          title: \\'备注\\',\\n          editor: (value, row, index, onchange, ref) => {\\n            return <Input value={value} ref={ref} disabled={true}></Input>\\n          },\\n        },\\n      ]\\n    }\\n    onEditSave(changedRows, newData, type) {\\n      this.setState({\\n        data: newData,\\n      })\\n    }\\n\\n    render() {\\n      let { data, count } = this.state\\n\\n      return (\\n        <Table\\n          editTools={[\\'edit\\', \\'add\\', \\'delete\\']}\\n          ref=\\\"etable\\\"\\n          columns={this.columns}\\n          dataSource={data}\\n          defaultAddCount={1}\\n          onEditSave={this.onEditSave.bind(this)}\\n          isAppend={true}\\n          alwaysValidate={true}\\n          validateTrigger=\\\"onChange\\\"\\n          readOnly={true}\\n          selectMode=\\\"multiple\\\"\\n          rowKey=\\\"id\\\"\\n        ></Table>\\n      )\\n    }\\n  }'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Table,\n      flatten,\n      Input,\n      InputNumber,\n      Select,\n      DatePicker,\n      Switch,\n      Checkbox,\n      Button,\n      Complex,\n      CustomEdit,\n      Search\n    }} style={{\n      height: 400\n    }} mdxType=\"Playground\">\n      {class Demo extends React.PureComponent {\n        constructor(props) {\n          super(props);\n          this.state = {\n            data: [{\n              id: \"1\",\n              name: \"张三\",\n              age: 20,\n              idcard: \"512878211145551112\",\n              remark: \"我是张三\"\n            }, {\n              id: \"2\",\n              name: \"李四\",\n              age: 20,\n              idcard: \"512878211145551112\",\n              remark: \"我是李四\"\n            }]\n          };\n          this.columns = [{\n            dataIndex: \"id\",\n            title: \"编号\",\n            width: 200,\n            validator: (value, row) => {\n              if (!value) {\n                return {\n                  valid: false,\n                  message: \"\"\n                };\n              }\n\n              return {\n                valid: true,\n                message: \"\"\n              };\n            },\n            editor: (value, row, index, onchange, ref) => {\n              return <Input defaultValue={value} ref={ref} onChange={e => {\n                let newValue = e.target.value;\n                onchange({\n                  number: newValue\n                });\n              }} mdxType=\"Input\"></Input>;\n            }\n          }, {\n            width: 150,\n            dataIndex: \"name\",\n            title: \"姓名\",\n            width: 150,\n            validator: (value, row) => {\n              if (!value) {\n                return {\n                  valid: false,\n                  message: \"\"\n                };\n              }\n\n              return {\n                valid: true,\n                message: \"\"\n              };\n            },\n            editor: (value, row, index, onchange, ref) => {\n              return <Input defaultValue={value} ref={ref} onChange={e => {\n                let newValue = e.target.value;\n                onchange({\n                  name: newValue\n                });\n              }} mdxType=\"Input\"></Input>;\n            }\n          }, {\n            dataIndex: \"age\",\n            title: \"年龄\",\n            width: 150,\n            editor: (value, row, index, onchange, ref) => {\n              return <Input defaultValue={value} ref={ref} onChange={e => onchange({\n                age: e.target.value,\n                idcard: e.target.value\n              })} mdxType=\"Input\"></Input>;\n            }\n          }, {\n            dataIndex: \"idcard\",\n            title: \"身份证\",\n            width: 150,\n            editor: (value, row, index, onchange, ref) => {\n              return <Input value={value} ref={ref} onChange={e => onchange({\n                idcard: e.target.value\n              })} mdxType=\"Input\"></Input>;\n            }\n          }, {\n            dataIndex: \"tel\",\n            title: \"电话号码\",\n            width: 150,\n            editor: (value, row, index, onchange, ref) => {\n              return <Input defaultValue={value} ref={ref} onChange={e => onchange({\n                tel: e.target.value\n              })} mdxType=\"Input\"></Input>;\n            }\n          }, {\n            dataIndex: \"remark\",\n            title: \"备注\",\n            editor: (value, row, index, onchange, ref) => {\n              return <Input value={value} ref={ref} disabled={true} mdxType=\"Input\"></Input>;\n            }\n          }];\n        }\n\n        onEditSave(changedRows, newData, type) {\n          this.setState({\n            data: newData\n          });\n        }\n\n        render() {\n          let {\n            data,\n            count\n          } = this.state;\n          return <Table editTools={[\"edit\", \"add\", \"delete\"]} ref=\"etable\" columns={this.columns} dataSource={data} defaultAddCount={1} onEditSave={this.onEditSave.bind(this)} isAppend={true} alwaysValidate={true} validateTrigger=\"onChange\" readOnly={true} selectMode=\"multiple\" rowKey=\"id\" mdxType=\"Table\">\n            </Table>;\n        }\n\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"数据联动\"\n    }}>{`数据联动`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`外部数据同表格数据相互联动`}</p>\n    </blockquote>\n    <Playground __position={4} __code={'class Demo extends React.PureComponent {\\n    constructor(props) {\\n      super(props)\\n      this.state = {\\n        count: 0,\\n        data: [\\n          {\\n            id: \\'1\\',\\n            name: \\'张三\\',\\n            age: 20,\\n            idcard: \\'512878211145551112\\',\\n            remark: \\'我是张三\\',\\n          },\\n          {\\n            id: \\'2\\',\\n            name: \\'李四\\',\\n            age: 20,\\n            idcard: \\'512878211145551112\\',\\n            remark: \\'我是李四\\',\\n          },\\n        ],\\n      }\\n\\n      this.columns = [\\n        {\\n          dataIndex: \\'id\\',\\n          title: \\'编号\\',\\n          width: 200,\\n        },\\n        {\\n          dataIndex: \\'name\\',\\n          title: \\'姓名\\',\\n          width: 150,\\n          validator: (value, row) => {\\n            if (!value) {\\n              return { valid: false, message: \\'\\' }\\n            }\\n\\n            return { valid: true, message: \\'\\' }\\n          },\\n          editor: (value, row, index, onchange, ref) => {\\n            return (\\n              <Input\\n                value={value}\\n                ref={ref}\\n                onChange={e => {\\n                  let newValue = e.target.value\\n\\n                  row.name = newValue\\n\\n                  this.setState(\\n                    {\\n                      count: newValue,\\n                    },\\n                    () => {\\n                      onchange({ name: newValue, remark: \\'我是\\' + newValue })\\n                    },\\n                  )\\n                }}\\n              ></Input>\\n            )\\n          },\\n        },\\n        {\\n          dataIndex: \\'age\\',\\n          title: \\'年龄\\',\\n          width: 150,\\n          validator: (value, row) => {\\n            if (!value) {\\n              return { valid: false, message: \\'\\' }\\n            }\\n\\n            return { valid: true, message: \\'\\' }\\n          },\\n          editor: (value, row, index, onchange, ref) => {\\n            return (\\n              <Input\\n                defaultValue={value}\\n                ref={ref}\\n                onChange={e =>\\n                  onchange({ age: e.target.value, idcard: e.target.value })\\n                }\\n              ></Input>\\n            )\\n          },\\n        },\\n        {\\n          dataIndex: \\'idcard\\',\\n          title: \\'身份证\\',\\n          width: 150,\\n          validator: (value, row) => {\\n            if (!value) {\\n              return { valid: false, message: \\'\\' }\\n            }\\n\\n            return { valid: true, message: \\'\\' }\\n          },\\n          editor: (value, row, index, onchange, ref) => {\\n            return (\\n              <Input\\n                value={value}\\n                ref={ref}\\n                onChange={e => onchange({ idcard: e.target.value })}\\n              ></Input>\\n            )\\n          },\\n        },\\n        {\\n          dataIndex: \\'tel\\',\\n          title: \\'电话号码\\',\\n          width: 150,\\n          validator: (value, row) => {\\n            if (!value) {\\n              return { valid: false, message: \\'\\' }\\n            }\\n\\n            return { valid: true, message: \\'\\' }\\n          },\\n          editor: (value, row, index, onchange, ref) => {\\n            return (\\n              <Input\\n                defaultValue={value}\\n                ref={ref}\\n                onChange={e => onchange({ tel: e.target.value })}\\n              ></Input>\\n            )\\n          },\\n        },\\n        {\\n          dataIndex: \\'remark\\',\\n          title: \\'备注\\',\\n          editor: (value, row, index, onchange, ref) => {\\n            return <Input value={value} ref={ref} disabled={true}></Input>\\n          },\\n        },\\n      ]\\n    }\\n    onChange(e) {\\n      let value = e.target.value\\n\\n      let { data, count } = this.state\\n\\n      let newData = [...data]\\n\\n      newData.forEach(d => {\\n        d.name = value\\n      })\\n\\n      this.setState({\\n        count: value,\\n        data: newData,\\n      })\\n    }\\n\\n    onEditSave(changedRows, newData, type) {\\n      this.setState({\\n        data: newData,\\n      })\\n    }\\n\\n    complete() {\\n      this.refs[\\'etable\\'].completeEdit()\\n    }\\n\\n    render() {\\n      let { data, count } = this.state\\n\\n      return (\\n        <div>\\n          <Input\\n            value={count}\\n            onChange={this.onChange.bind(this)}\\n            style={{ margin: \\'10px 0\\' }}\\n          ></Input>\\n          <Button\\n            onClick={this.complete.bind(this)}\\n            style={{ margin: \\'10px 0\\' }}\\n          >\\n            完成\\n          </Button>\\n          <div style={{ height: 400 }}>\\n            <Table\\n              ref=\\\"etable\\\"\\n              columns={this.columns}\\n              dataSource={data}\\n              editable={true}\\n              defaultAddCount={1}\\n              onEditSave={this.onEditSave.bind(this)}\\n              isAppend={true}\\n              alwaysValidate={true}\\n              validateTrigger=\\\"onChange\\\"\\n              rowKey=\\\"id\\\"\\n            ></Table>\\n          </div>\\n        </div>\\n      )\\n    }\\n  }'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Table,\n      flatten,\n      Input,\n      InputNumber,\n      Select,\n      DatePicker,\n      Switch,\n      Checkbox,\n      Button,\n      Complex,\n      CustomEdit,\n      Search\n    }} mdxType=\"Playground\">\n      {class Demo extends React.PureComponent {\n        constructor(props) {\n          super(props);\n          this.state = {\n            count: 0,\n            data: [{\n              id: \"1\",\n              name: \"张三\",\n              age: 20,\n              idcard: \"512878211145551112\",\n              remark: \"我是张三\"\n            }, {\n              id: \"2\",\n              name: \"李四\",\n              age: 20,\n              idcard: \"512878211145551112\",\n              remark: \"我是李四\"\n            }]\n          };\n          this.columns = [{\n            dataIndex: \"id\",\n            title: \"编号\",\n            width: 200\n          }, {\n            dataIndex: \"name\",\n            title: \"姓名\",\n            width: 150,\n            validator: (value, row) => {\n              if (!value) {\n                return {\n                  valid: false,\n                  message: \"\"\n                };\n              }\n\n              return {\n                valid: true,\n                message: \"\"\n              };\n            },\n            editor: (value, row, index, onchange, ref) => {\n              return <Input value={value} ref={ref} onChange={e => {\n                let newValue = e.target.value;\n                row.name = newValue;\n                this.setState({\n                  count: newValue\n                }, () => {\n                  onchange({\n                    name: newValue,\n                    remark: \"我是\" + newValue\n                  });\n                });\n              }} mdxType=\"Input\"></Input>;\n            }\n          }, {\n            dataIndex: \"age\",\n            title: \"年龄\",\n            width: 150,\n            validator: (value, row) => {\n              if (!value) {\n                return {\n                  valid: false,\n                  message: \"\"\n                };\n              }\n\n              return {\n                valid: true,\n                message: \"\"\n              };\n            },\n            editor: (value, row, index, onchange, ref) => {\n              return <Input defaultValue={value} ref={ref} onChange={e => onchange({\n                age: e.target.value,\n                idcard: e.target.value\n              })} mdxType=\"Input\"></Input>;\n            }\n          }, {\n            dataIndex: \"idcard\",\n            title: \"身份证\",\n            width: 150,\n            validator: (value, row) => {\n              if (!value) {\n                return {\n                  valid: false,\n                  message: \"\"\n                };\n              }\n\n              return {\n                valid: true,\n                message: \"\"\n              };\n            },\n            editor: (value, row, index, onchange, ref) => {\n              return <Input value={value} ref={ref} onChange={e => onchange({\n                idcard: e.target.value\n              })} mdxType=\"Input\"></Input>;\n            }\n          }, {\n            dataIndex: \"tel\",\n            title: \"电话号码\",\n            width: 150,\n            validator: (value, row) => {\n              if (!value) {\n                return {\n                  valid: false,\n                  message: \"\"\n                };\n              }\n\n              return {\n                valid: true,\n                message: \"\"\n              };\n            },\n            editor: (value, row, index, onchange, ref) => {\n              return <Input defaultValue={value} ref={ref} onChange={e => onchange({\n                tel: e.target.value\n              })} mdxType=\"Input\"></Input>;\n            }\n          }, {\n            dataIndex: \"remark\",\n            title: \"备注\",\n            editor: (value, row, index, onchange, ref) => {\n              return <Input value={value} ref={ref} disabled={true} mdxType=\"Input\"></Input>;\n            }\n          }];\n        }\n\n        onChange(e) {\n          let value = e.target.value;\n          let {\n            data,\n            count\n          } = this.state;\n          let newData = [...data];\n          newData.forEach(d => {\n            d.name = value;\n          });\n          this.setState({\n            count: value,\n            data: newData\n          });\n        }\n\n        onEditSave(changedRows, newData, type) {\n          this.setState({\n            data: newData\n          });\n        }\n\n        complete() {\n          this.refs[\"etable\"].completeEdit();\n        }\n\n        render() {\n          let {\n            data,\n            count\n          } = this.state;\n          return <div>\n        <Input value={count} onChange={this.onChange.bind(this)} style={{\n              margin: \"10px 0\"\n            }} mdxType=\"Input\"></Input>\n        <Button onClick={this.complete.bind(this)} style={{\n              margin: \"10px 0\"\n            }} mdxType=\"Button\">完成</Button>\n        <div style={{\n              height: 400\n            }}>\n            <Table ref=\"etable\" columns={this.columns} dataSource={data} editable={true} defaultAddCount={1} onEditSave={this.onEditSave.bind(this)} isAppend={true} alwaysValidate={true} validateTrigger=\"onChange\" rowKey=\"id\" mdxType=\"Table\">\n            </Table>\n        </div>\n\n    </div>;\n        }\n\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"新增多行\"\n    }}>{`新增多行`}</h2>\n    <Playground __position={5} __code={'class Demo extends React.PureComponent {\\n    constructor(props) {\\n      super(props)\\n      this.state = {\\n        data: [\\n          {\\n            id: \\'1\\',\\n            name: \\'张三\\',\\n            age: 20,\\n            idcard: \\'512878211145551112\\',\\n            remark: \\'我是张三\\',\\n          },\\n          {\\n            id: \\'2\\',\\n            name: \\'李四\\',\\n            age: 20,\\n            idcard: \\'512878211145551112\\',\\n            remark: \\'我是李四\\',\\n          },\\n        ],\\n      }\\n\\n      this.columns = [\\n        {\\n          dataIndex: \\'id\\',\\n          title: \\'编号\\',\\n          width: 200,\\n        },\\n        {\\n          dataIndex: \\'name\\',\\n          title: \\'姓名\\',\\n          width: 150,\\n          validator: v => {\\n            return { valid: !!v, message: \\'请输入\\' }\\n          },\\n          editor: (value, row, index, onchange, ref) => {\\n            return (\\n              <Input\\n                defaultValue={value}\\n                ref={ref}\\n                onChange={e => {\\n                  let newValue = e.target.value\\n                  onchange({ name: newValue, remark: \\'我是\\' + newValue })\\n                }}\\n              ></Input>\\n            )\\n          },\\n        },\\n        {\\n          dataIndex: \\'age\\',\\n          title: \\'年龄\\',\\n          width: 150,\\n          editor: (value, row, index, onchange, ref) => {\\n            return (\\n              <Input\\n                defaultValue={value}\\n                ref={ref}\\n                onChange={e =>\\n                  onchange({ age: e.target.value, idcard: e.target.value })\\n                }\\n              ></Input>\\n            )\\n          },\\n        },\\n        {\\n          dataIndex: \\'idcard\\',\\n          title: \\'身份证\\',\\n          width: 150,\\n          editor: (value, row, index, onchange, ref) => {\\n            return (\\n              <Input\\n                value={value}\\n                ref={ref}\\n                onChange={e => onchange({ idcard: e.target.value })}\\n              ></Input>\\n            )\\n          },\\n        },\\n        {\\n          dataIndex: \\'tel\\',\\n          title: \\'电话号码\\',\\n          width: 150,\\n          editor: (value, row, index, onchange, ref) => {\\n            return (\\n              <Input\\n                defaultValue={value}\\n                ref={ref}\\n                onChange={e => onchange({ tel: e.target.value })}\\n              ></Input>\\n            )\\n          },\\n        },\\n        {\\n          dataIndex: \\'remark\\',\\n          title: \\'备注\\',\\n          editor: (value, row, index, onchange, ref) => {\\n            return <Input value={value} ref={ref} disabled={true}></Input>\\n          },\\n        },\\n      ]\\n    }\\n    onEditSave(changedRows, newData, type) {\\n      this.setState({\\n        data: newData,\\n      })\\n    }\\n    onEditCancel() {\\n      console.log(\\'onEditCancel\\')\\n    }\\n    add() {\\n      if (this.refs.etable) {\\n        this.refs.etable.api.addRows([{}, {}, {}])\\n      }\\n    }\\n    render() {\\n      let { data, count } = this.state\\n\\n      return (\\n        <Table\\n          ref=\\\"etable\\\"\\n          columns={this.columns}\\n          dataSource={data}\\n          header={() => (\\n            <div>\\n              <Button onClick={this.add.bind(this)}>api.addRows</Button>\\n            </div>\\n          )}\\n          editable={true}\\n          defaultAddCount={5}\\n          onEditSave={this.onEditSave.bind(this)}\\n          onCancel={this.onEditCancel}\\n          isAppend={true}\\n          allowSaveEmpty={false}\\n          alwaysValidate={false}\\n          validateTrigger=\\\"onChange\\\"\\n          rowKey=\\\"id\\\"\\n        ></Table>\\n      )\\n    }\\n  }'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Table,\n      flatten,\n      Input,\n      InputNumber,\n      Select,\n      DatePicker,\n      Switch,\n      Checkbox,\n      Button,\n      Complex,\n      CustomEdit,\n      Search\n    }} style={{\n      height: 400\n    }} mdxType=\"Playground\">\n      {class Demo extends React.PureComponent {\n        constructor(props) {\n          super(props);\n          this.state = {\n            data: [{\n              id: \"1\",\n              name: \"张三\",\n              age: 20,\n              idcard: \"512878211145551112\",\n              remark: \"我是张三\"\n            }, {\n              id: \"2\",\n              name: \"李四\",\n              age: 20,\n              idcard: \"512878211145551112\",\n              remark: \"我是李四\"\n            }]\n          };\n          this.columns = [{\n            dataIndex: \"id\",\n            title: \"编号\",\n            width: 200\n          }, {\n            dataIndex: \"name\",\n            title: \"姓名\",\n            width: 150,\n            validator: v => {\n              return {\n                valid: !!v,\n                message: \"请输入\"\n              };\n            },\n            editor: (value, row, index, onchange, ref) => {\n              return <Input defaultValue={value} ref={ref} onChange={e => {\n                let newValue = e.target.value;\n                onchange({\n                  name: newValue,\n                  remark: \"我是\" + newValue\n                });\n              }} mdxType=\"Input\"></Input>;\n            }\n          }, {\n            dataIndex: \"age\",\n            title: \"年龄\",\n            width: 150,\n            editor: (value, row, index, onchange, ref) => {\n              return <Input defaultValue={value} ref={ref} onChange={e => onchange({\n                age: e.target.value,\n                idcard: e.target.value\n              })} mdxType=\"Input\"></Input>;\n            }\n          }, {\n            dataIndex: \"idcard\",\n            title: \"身份证\",\n            width: 150,\n            editor: (value, row, index, onchange, ref) => {\n              return <Input value={value} ref={ref} onChange={e => onchange({\n                idcard: e.target.value\n              })} mdxType=\"Input\"></Input>;\n            }\n          }, {\n            dataIndex: \"tel\",\n            title: \"电话号码\",\n            width: 150,\n            editor: (value, row, index, onchange, ref) => {\n              return <Input defaultValue={value} ref={ref} onChange={e => onchange({\n                tel: e.target.value\n              })} mdxType=\"Input\"></Input>;\n            }\n          }, {\n            dataIndex: \"remark\",\n            title: \"备注\",\n            editor: (value, row, index, onchange, ref) => {\n              return <Input value={value} ref={ref} disabled={true} mdxType=\"Input\"></Input>;\n            }\n          }];\n        }\n\n        onEditSave(changedRows, newData, type) {\n          this.setState({\n            data: newData\n          });\n        }\n\n        onEditCancel() {\n          console.log(\"onEditCancel\");\n        }\n\n        add() {\n          if (this.refs.etable) {\n            this.refs.etable.api.addRows([{}, {}, {}]);\n          }\n        }\n\n        render() {\n          let {\n            data,\n            count\n          } = this.state;\n          return <Table ref=\"etable\" columns={this.columns} dataSource={data} header={() => <div><Button onClick={this.add.bind(this)} mdxType=\"Button\">api.addRows</Button></div>} editable={true} defaultAddCount={5} onEditSave={this.onEditSave.bind(this)} onCancel={this.onEditCancel} isAppend={true} allowSaveEmpty={false} alwaysValidate={false} validateTrigger=\"onChange\" rowKey=\"id\" mdxType=\"Table\">\n            </Table>;\n        }\n\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"自定义工具栏\"\n    }}>{`自定义工具栏`}</h2>\n    <Playground __position={6} __code={'class Demo extends React.PureComponent {\\n    constructor(props) {\\n      super(props)\\n      this.state = {\\n        data: [\\n          {\\n            id: \\'1\\',\\n            name: \\'张三\\',\\n            age: 20,\\n            idcard: \\'512878211145551112\\',\\n            remark: \\'我是张三\\',\\n          },\\n          {\\n            id: \\'2\\',\\n            name: \\'李四\\',\\n            age: 20,\\n            idcard: \\'512878211145551112\\',\\n            remark: \\'我是李四\\',\\n          },\\n        ],\\n      }\\n\\n      this.columns = [\\n        {\\n          dataIndex: \\'id\\',\\n          title: \\'编号\\',\\n          width: 200,\\n        },\\n        {\\n          dataIndex: \\'name\\',\\n          title: \\'姓名\\',\\n          width: 150,\\n          editor: (value, row, index, onchange, ref) => {\\n            return (\\n              <Input\\n                defaultValue={value}\\n                ref={ref}\\n                onChange={e => {\\n                  let newValue = e.target.value\\n                  onchange({ name: newValue, remark: \\'我是\\' + newValue })\\n                }}\\n              ></Input>\\n            )\\n          },\\n        },\\n        {\\n          dataIndex: \\'age\\',\\n          title: \\'年龄\\',\\n          width: 150,\\n\\n          editor: (value, row, index, onchange, ref) => {\\n            return (\\n              <Input\\n                defaultValue={value}\\n                ref={ref}\\n                onChange={e =>\\n                  onchange({ age: e.target.value, idcard: e.target.value })\\n                }\\n              ></Input>\\n            )\\n          },\\n        },\\n        {\\n          dataIndex: \\'idcard\\',\\n          title: \\'身份证\\',\\n          width: 150,\\n\\n          editor: (value, row, index, onchange, ref) => {\\n            return (\\n              <Input\\n                value={value}\\n                ref={ref}\\n                onChange={e => onchange({ idcard: e.target.value })}\\n              ></Input>\\n            )\\n          },\\n        },\\n        {\\n          dataIndex: \\'tel\\',\\n          title: \\'电话号码\\',\\n          width: 150,\\n\\n          editor: (value, row, index, onchange, ref) => {\\n            return (\\n              <Input\\n                defaultValue={value}\\n                ref={ref}\\n                onChange={e => onchange({ tel: e.target.value })}\\n              ></Input>\\n            )\\n          },\\n        },\\n        {\\n          dataIndex: \\'remark\\',\\n          title: \\'备注\\',\\n          editor: (value, row, index, onchange, ref) => {\\n            return <Input value={value} ref={ref} disabled={true}></Input>\\n          },\\n        },\\n      ]\\n    }\\n    onEditSave(changedRows, newData, type) {\\n      this.setState({\\n        data: newData,\\n      })\\n    }\\n\\n    customTools() {\\n      return <Button>tools传递函数</Button>\\n    }\\n\\n    render() {\\n      let { data, count } = this.state\\n\\n      let tools = [\\n        \\'add\\',\\n        \\'edit\\',\\n        \\'delete\\',\\n        {\\n          icon: \\'message\\',\\n          text: \\'查看消息\\',\\n          handler: () => {\\n            alert(\\'点击了自定义按钮\\')\\n          },\\n        },\\n        this.customTools,\\n      ]\\n\\n      return (\\n        <Table\\n          ref=\\\"etable\\\"\\n          columns={this.columns}\\n          dataSource={data}\\n          editable={true}\\n          defaultAddCount={1}\\n          onEditSave={this.onEditSave.bind(this)}\\n          isAppend={true}\\n          alwaysValidate={true}\\n          validateTrigger=\\\"onChange\\\"\\n          editTools={tools}\\n          editToolsConfig={{\\n            position: \\'top\\',\\n            editText: \\'自定义编辑按钮及图标\\',\\n            editIcon: \\'message\\',\\n          }}\\n          rowKey=\\\"id\\\"\\n        ></Table>\\n      )\\n    }\\n  }'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Table,\n      flatten,\n      Input,\n      InputNumber,\n      Select,\n      DatePicker,\n      Switch,\n      Checkbox,\n      Button,\n      Complex,\n      CustomEdit,\n      Search\n    }} style={{\n      height: 400\n    }} mdxType=\"Playground\">\n      {class Demo extends React.PureComponent {\n        constructor(props) {\n          super(props);\n          this.state = {\n            data: [{\n              id: \"1\",\n              name: \"张三\",\n              age: 20,\n              idcard: \"512878211145551112\",\n              remark: \"我是张三\"\n            }, {\n              id: \"2\",\n              name: \"李四\",\n              age: 20,\n              idcard: \"512878211145551112\",\n              remark: \"我是李四\"\n            }]\n          };\n          this.columns = [{\n            dataIndex: \"id\",\n            title: \"编号\",\n            width: 200\n          }, {\n            dataIndex: \"name\",\n            title: \"姓名\",\n            width: 150,\n            editor: (value, row, index, onchange, ref) => {\n              return <Input defaultValue={value} ref={ref} onChange={e => {\n                let newValue = e.target.value;\n                onchange({\n                  name: newValue,\n                  remark: \"我是\" + newValue\n                });\n              }} mdxType=\"Input\"></Input>;\n            }\n          }, {\n            dataIndex: \"age\",\n            title: \"年龄\",\n            width: 150,\n            editor: (value, row, index, onchange, ref) => {\n              return <Input defaultValue={value} ref={ref} onChange={e => onchange({\n                age: e.target.value,\n                idcard: e.target.value\n              })} mdxType=\"Input\"></Input>;\n            }\n          }, {\n            dataIndex: \"idcard\",\n            title: \"身份证\",\n            width: 150,\n            editor: (value, row, index, onchange, ref) => {\n              return <Input value={value} ref={ref} onChange={e => onchange({\n                idcard: e.target.value\n              })} mdxType=\"Input\"></Input>;\n            }\n          }, {\n            dataIndex: \"tel\",\n            title: \"电话号码\",\n            width: 150,\n            editor: (value, row, index, onchange, ref) => {\n              return <Input defaultValue={value} ref={ref} onChange={e => onchange({\n                tel: e.target.value\n              })} mdxType=\"Input\"></Input>;\n            }\n          }, {\n            dataIndex: \"remark\",\n            title: \"备注\",\n            editor: (value, row, index, onchange, ref) => {\n              return <Input value={value} ref={ref} disabled={true} mdxType=\"Input\"></Input>;\n            }\n          }];\n        }\n\n        onEditSave(changedRows, newData, type) {\n          this.setState({\n            data: newData\n          });\n        }\n\n        customTools() {\n          return <Button mdxType=\"Button\">tools传递函数</Button>;\n        }\n\n        render() {\n          let {\n            data,\n            count\n          } = this.state;\n          let tools = [\"add\", \"edit\", \"delete\", {\n            icon: \"message\",\n            text: \"查看消息\",\n            handler: () => {\n              alert(\"点击了自定义按钮\");\n            }\n          }, this.customTools];\n          return <Table ref=\"etable\" columns={this.columns} dataSource={data} editable={true} defaultAddCount={1} onEditSave={this.onEditSave.bind(this)} isAppend={true} alwaysValidate={true} validateTrigger=\"onChange\" editTools={tools} editToolsConfig={{\n            position: \"top\",\n            editText: \"自定义编辑按钮及图标\",\n            editIcon: \"message\"\n          }} rowKey=\"id\" mdxType=\"Table\">\n          </Table>;\n        }\n\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"自定义编辑\"\n    }}>{`自定义编辑`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`使用表格内置的API，使用api自定义编辑与表格内置的编辑按钮组具有不同的行为，请勿混用`}</p>\n    </blockquote>\n    <Playground __position={7} __code={'class Demo extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.tableRef = React.createRef()\\n\\n      this.state = {\\n        data: [],\\n        loading: false,\\n        expandedRowKeys: [],\\n      }\\n\\n      this.columns = [\\n        {\\n          dataIndex: \\'column-1\\',\\n          key: \\'column-1\\',\\n          title: \\'column-1\\',\\n          align: \\'left\\',\\n          halign: \\'center\\',\\n          minWidth: 300,\\n          onCell: (row, value, index) => {\\n            return {\\n              onClick: () => {\\n                this.beginEdit(row)\\n              },\\n            }\\n          },\\n          validator: function(value, row) {\\n            if (!value) {\\n              return { valid: false, message: \\'请输入\\' }\\n            }\\n\\n            return { valid: true, message: \\'false\\' }\\n          },\\n          editor: function(value, row, index, onchange, ref) {\\n            return (\\n              <Input\\n                defaultValue={value}\\n                ref={ref}\\n                onChange={e =>\\n                  onchange([\\n                    { \\'column-1\\': e.target.value, id: row.id },\\n                    { id: \\'3\\', address: e.target.value },\\n                  ])\\n                }\\n              />\\n            )\\n          },\\n        },\\n        {\\n          title: \\'appellation\\',\\n          width: 150,\\n          halign: \\'left\\',\\n          children: [\\n            {\\n              dataIndex: \\'address\\',\\n              title: \\'name\\',\\n              width: 200,\\n              onCell: (row, value, index) => {\\n                return {\\n                  onClick: () => {\\n                    this.beginEdit(row)\\n                  },\\n                }\\n              },\\n              editor: function(value, row, index, onchange, ref) {\\n                return (\\n                  <Input\\n                    defaultValue={value}\\n                    ref={ref}\\n                    onChange={e => onchange({ address: e.target.value })}\\n                  />\\n                )\\n              },\\n            },\\n            {\\n              title: \\'nick name\\',\\n              width: 150,\\n              children: [\\n                {\\n                  dataIndex: \\'id\\',\\n                  title: \\'nick-1\\',\\n                  maxWidth: 300,\\n                  width: 150,\\n                },\\n                {\\n                  dataIndex: \\'level\\',\\n                  title: \\'level\\',\\n                },\\n              ],\\n            },\\n          ],\\n        },\\n        {\\n          dataIndex: \\'id\\',\\n          key: \\'column-4\\',\\n          title: \\'id\\',\\n        },\\n      ]\\n    }\\n    componentDidMount() {\\n      function createData(level, parentKey, maxLevel, index) {\\n        if (level > maxLevel) {\\n          return\\n        }\\n        let l = level\\n        let data = []\\n        for (let i = 0; i < 3; i++) {\\n          let k = parentKey + \\'-\\' + level + \\'-\\' + i\\n          let d = {\\n            id: k,\\n            \\'column-1\\': \\'Edward King \\' + k,\\n            age: 32,\\n            level: level,\\n            address: \\'London, Park Lane no. \\' + i,\\n          }\\n\\n          if (i === 2) {\\n            d.children = createData(l + 1, k, maxLevel, i)\\n          }\\n\\n          data.push(d)\\n        }\\n        return data\\n      }\\n\\n      function createTreeData() {\\n        let data = []\\n        for (let i = 0; i < 10; i++) {\\n          let childrens = createData(0, i, 2)\\n          let d = {\\n            id: \\'\\' + i,\\n            level: 0,\\n            \\'column-1\\': \\'Edward King \\' + i,\\n            age: i,\\n            address: \\'London, Park Lane no. \\' + i,\\n          }\\n\\n          if (i % 3 === 0) {\\n            d.children = childrens\\n          }\\n\\n          data.push(d)\\n        }\\n\\n        return data\\n      }\\n\\n      this.setState({\\n        data: createTreeData(),\\n      })\\n    }\\n    beginEdit(row) {\\n      let arr = []\\n      arr.push(row.id)\\n      this.tableRef.current.api.editRows(arr)\\n    }\\n    completeEdit() {\\n      this.tableRef.current.api.completeEdit()\\n    }\\n    cancelEdit() {\\n      this.tableRef.current.api.cancelEdit()\\n    }\\n    insertData() {\\n      let arr = []\\n      arr.push({ id: \\'inserted-row-\\' + new Date().getTime() })\\n      this.tableRef.current.api.insertData({\\n        data: arr,\\n        parentKey: \\'3\\',\\n        editing: true,\\n        prepend: false,\\n        startIndex: 2,\\n      })\\n\\n      //this.tableRef.current.api.editAll();\\n    }\\n    modifyData() {\\n      let arr = []\\n      arr.push({ id: \\'inserted-row-\\' + new Date().getTime() })\\n      this.tableRef.current.api.modifyData([\\n        {\\n          id: \\'3\\',\\n          \\'column-1\\': \\'modifyData-\\' + new Date().getTime(),\\n          level: 3,\\n        },\\n      ])\\n    }\\n    delete() {\\n      let deleted = this.tableRef.current.api.deleteData()\\n      this.tableRef.current.api.completeEdit()\\n      console.log(\\'deleted:\\', deleted)\\n    }\\n    editAll() {\\n      this.tableRef.current.api.editAll()\\n    }\\n    onEditComplete(modified) {\\n      console.log(\\'onEditComplete:\\', modified)\\n    }\\n    onEditSave(changedRows, newRows, editType) {\\n      console.log(\\'onEditSave changedRows:\\', changedRows)\\n      console.log(\\'onEditSave newRows:\\', newRows)\\n      console.log(\\'onEditSave editType:\\', editType)\\n    }\\n    getSelections() {\\n      let r = this.tableRef.current.api.getSelections()\\n      console.log(\\'getSelections:\\', r)\\n    }\\n    getExpanded() {\\n      let r = this.tableRef.current.api.getExpanded()\\n      console.log(\\'getExpanded:\\', r)\\n    }\\n    render() {\\n      return (\\n        <div style={{ height: \\'100%\\' }}>\\n          <Table\\n            header={() => {\\n              return (\\n                <div>\\n                  <Button\\n                    onClick={this.completeEdit.bind(this)}\\n                    style={{ cursor: \\'pointer\\' }}\\n                  >\\n                    complete edit\\n                  </Button>\\n\\n                  <Button\\n                    onClick={this.cancelEdit.bind(this)}\\n                    style={{ cursor: \\'pointer\\', marginLeft: 10 }}\\n                  >\\n                    cancel edit\\n                  </Button>\\n\\n                  <Button\\n                    onClick={this.insertData.bind(this)}\\n                    style={{ cursor: \\'pointer\\', marginLeft: 10 }}\\n                  >\\n                    insert data\\n                  </Button>\\n\\n                  <Button\\n                    onClick={this.modifyData.bind(this)}\\n                    style={{ cursor: \\'pointer\\', marginLeft: 10 }}\\n                  >\\n                    modify data\\n                  </Button>\\n\\n                  <Button\\n                    onClick={this.delete.bind(this)}\\n                    style={{ cursor: \\'pointer\\', marginLeft: 10 }}\\n                  >\\n                    delete\\n                  </Button>\\n\\n                  <Button\\n                    onClick={this.editAll.bind(this)}\\n                    style={{ cursor: \\'pointer\\', marginLeft: 10 }}\\n                  >\\n                    edit all\\n                  </Button>\\n\\n                  <Button\\n                    onClick={this.getSelections.bind(this)}\\n                    style={{ cursor: \\'pointer\\', marginLeft: 10 }}\\n                  >\\n                    get selections\\n                  </Button>\\n                </div>\\n              )\\n            }}\\n            editable={true}\\n            isAppend={true}\\n            allowSaveEmpty={true}\\n            alwaysValidate={false}\\n            validateTrigger=\\\"onChange\\\"\\n            ref={this.tableRef}\\n            rowKey=\\\"id\\\"\\n            onComplete={this.onEditComplete.bind(this)}\\n            onEditSave={this.onEditSave.bind(this)}\\n            columns={this.columns}\\n            selectMode=\\\"multiple\\\"\\n            checkStrictly={false}\\n            data={this.state.data}\\n            selectOnRowClick={false}\\n          />\\n        </div>\\n      )\\n    }\\n  }'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Table,\n      flatten,\n      Input,\n      InputNumber,\n      Select,\n      DatePicker,\n      Switch,\n      Checkbox,\n      Button,\n      Complex,\n      CustomEdit,\n      Search\n    }} style={{\n      height: 600\n    }} mdxType=\"Playground\">\n      {class Demo extends React.Component {\n        constructor(props) {\n          super(props);\n          this.tableRef = React.createRef();\n          this.state = {\n            data: [],\n            loading: false,\n            expandedRowKeys: []\n          };\n          this.columns = [{\n            dataIndex: \"column-1\",\n            key: \"column-1\",\n            title: \"column-1\",\n            align: \"left\",\n            halign: \"center\",\n            minWidth: 300,\n            onCell: (row, value, index) => {\n              return {\n                onClick: () => {\n                  this.beginEdit(row);\n                }\n              };\n            },\n            validator: function (value, row) {\n              if (!value) {\n                return {\n                  valid: false,\n                  message: \"请输入\"\n                };\n              }\n\n              return {\n                valid: true,\n                message: \"false\"\n              };\n            },\n            editor: function (value, row, index, onchange, ref) {\n              return <Input defaultValue={value} ref={ref} onChange={e => onchange([{\n                \"column-1\": e.target.value,\n                id: row.id\n              }, {\n                id: \"3\",\n                address: e.target.value\n              }])} mdxType=\"Input\" />;\n            }\n          }, {\n            title: \"appellation\",\n            width: 150,\n            halign: \"left\",\n            children: [{\n              dataIndex: \"address\",\n              title: \"name\",\n              width: 200,\n              onCell: (row, value, index) => {\n                return {\n                  onClick: () => {\n                    this.beginEdit(row);\n                  }\n                };\n              },\n              editor: function (value, row, index, onchange, ref) {\n                return <Input defaultValue={value} ref={ref} onChange={e => onchange({\n                  address: e.target.value\n                })} mdxType=\"Input\" />;\n              }\n            }, {\n              title: \"nick name\",\n              width: 150,\n              children: [{\n                dataIndex: \"id\",\n                title: \"nick-1\",\n                maxWidth: 300,\n                width: 150\n              }, {\n                dataIndex: \"level\",\n                title: \"level\"\n              }]\n            }]\n          }, {\n            dataIndex: \"id\",\n            key: \"column-4\",\n            title: \"id\"\n          }];\n        }\n\n        componentDidMount() {\n          function createData(level, parentKey, maxLevel, index) {\n            if (level > maxLevel) {\n              return;\n            }\n\n            let l = level;\n            let data = [];\n\n            for (let i = 0; i < 3; i++) {\n              let k = parentKey + \"-\" + level + \"-\" + i;\n              let d = {\n                id: k,\n                \"column-1\": \"Edward King \" + k,\n                age: 32,\n                level: level,\n                address: \"London, Park Lane no. \" + i\n              };\n\n              if (i === 2) {\n                d.children = createData(l + 1, k, maxLevel, i);\n              }\n\n              data.push(d);\n            }\n\n            return data;\n          }\n\n          function createTreeData() {\n            let data = [];\n\n            for (let i = 0; i < 10; i++) {\n              let childrens = createData(0, i, 2);\n              let d = {\n                id: \"\" + i,\n                level: 0,\n                \"column-1\": \"Edward King \" + i,\n                age: i,\n                address: \"London, Park Lane no. \" + i\n              };\n\n              if (i % 3 === 0) {\n                d.children = childrens;\n              }\n\n              data.push(d);\n            }\n\n            return data;\n          }\n\n          this.setState({\n            data: createTreeData()\n          });\n        }\n\n        beginEdit(row) {\n          let arr = [];\n          arr.push(row.id);\n          this.tableRef.current.api.editRows(arr);\n        }\n\n        completeEdit() {\n          this.tableRef.current.api.completeEdit();\n        }\n\n        cancelEdit() {\n          this.tableRef.current.api.cancelEdit();\n        }\n\n        insertData() {\n          let arr = [];\n          arr.push({\n            id: \"inserted-row-\" + new Date().getTime()\n          });\n          this.tableRef.current.api.insertData({\n            data: arr,\n            parentKey: \"3\",\n            editing: true,\n            prepend: false,\n            startIndex: 2\n          }); //this.tableRef.current.api.editAll();\n        }\n\n        modifyData() {\n          let arr = [];\n          arr.push({\n            id: \"inserted-row-\" + new Date().getTime()\n          });\n          this.tableRef.current.api.modifyData([{\n            id: \"3\",\n            \"column-1\": \"modifyData-\" + new Date().getTime(),\n            level: 3\n          }]);\n        }\n\n        delete() {\n          let deleted = this.tableRef.current.api.deleteData();\n          this.tableRef.current.api.completeEdit();\n          console.log(\"deleted:\", deleted);\n        }\n\n        editAll() {\n          this.tableRef.current.api.editAll();\n        }\n\n        onEditComplete(modified) {\n          console.log(\"onEditComplete:\", modified);\n        }\n\n        onEditSave(changedRows, newRows, editType) {\n          console.log(\"onEditSave changedRows:\", changedRows);\n          console.log(\"onEditSave newRows:\", newRows);\n          console.log(\"onEditSave editType:\", editType);\n        }\n\n        getSelections() {\n          let r = this.tableRef.current.api.getSelections();\n          console.log(\"getSelections:\", r);\n        }\n\n        getExpanded() {\n          let r = this.tableRef.current.api.getExpanded();\n          console.log(\"getExpanded:\", r);\n        }\n\n        render() {\n          return <div style={{\n            height: \"100%\"\n          }}>\n    <Table header={() => {\n              return <div>\n            <Button onClick={this.completeEdit.bind(this)} style={{\n                  cursor: \"pointer\"\n                }} mdxType=\"Button\">\n              complete edit\n            </Button>\n\n            <Button onClick={this.cancelEdit.bind(this)} style={{\n                  cursor: \"pointer\",\n                  marginLeft: 10\n                }} mdxType=\"Button\">\n              cancel edit\n            </Button>\n\n            <Button onClick={this.insertData.bind(this)} style={{\n                  cursor: \"pointer\",\n                  marginLeft: 10\n                }} mdxType=\"Button\">\n              insert data\n            </Button>\n\n            <Button onClick={this.modifyData.bind(this)} style={{\n                  cursor: \"pointer\",\n                  marginLeft: 10\n                }} mdxType=\"Button\">\n              modify data\n            </Button>\n\n            <Button onClick={this.delete.bind(this)} style={{\n                  cursor: \"pointer\",\n                  marginLeft: 10\n                }} mdxType=\"Button\">\n              delete\n            </Button>\n\n             <Button onClick={this.editAll.bind(this)} style={{\n                  cursor: \"pointer\",\n                  marginLeft: 10\n                }} mdxType=\"Button\">\n              edit all\n            </Button>\n\n                 <Button onClick={this.getSelections.bind(this)} style={{\n                  cursor: \"pointer\",\n                  marginLeft: 10\n                }} mdxType=\"Button\">\n              get selections\n            </Button>\n\n          </div>;\n            }} editable={true} isAppend={true} allowSaveEmpty={true} alwaysValidate={false} validateTrigger=\"onChange\" ref={this.tableRef} rowKey=\"id\" onComplete={this.onEditComplete.bind(this)} onEditSave={this.onEditSave.bind(this)} columns={this.columns} selectMode=\"multiple\" checkStrictly={false} data={this.state.data} selectOnRowClick={false} mdxType=\"Table\" />\n  </div>;\n        }\n\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"大数据量树形数据编辑\"\n    }}>{`大数据量树形数据编辑`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`使用表格内置的API`}</p>\n    </blockquote>\n    <Playground __position={8} __code={'<Complex />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Table,\n      flatten,\n      Input,\n      InputNumber,\n      Select,\n      DatePicker,\n      Switch,\n      Checkbox,\n      Button,\n      Complex,\n      CustomEdit,\n      Search\n    }} style={{\n      height: 600\n    }} mdxType=\"Playground\">\n  <Complex mdxType=\"Complex\" />\n    </Playground>\n    <p><inlineCode parentName=\"p\">{`js`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`\nimport React, { Component } from \"react\";\nimport { Table, unflatten } from \"tablex\";\nimport { Button, Input, Menu, InputNumber } from \"antd\";\nimport _ from \"lodash\";\n\nconst { Search } = Input;\n\nlet BaseUrl = \"\";\n\nfunction requestGet(url, options) {\n  let xhr = new XMLHttpRequest();\n  xhr.open(\"GET\", url, true);\n\n  xhr.onreadystatechange = function() {};\n\n  xhr.onload = function() {\n    if (xhr.status == 200) {\n      if (typeof options.onSuccess === \"function\") {\n        var res = {};\n        if (xhr.responseText) {\n          res = JSON.parse(xhr.responseText);\n        }\n        options.onSuccess(res);\n      }\n    }\n  };\n\n  xhr.onerror = options.onError;\n\n  xhr.send();\n}\n\nfunction createData(level, parentKey, maxLevel, index) {\n  if (level > maxLevel) {\n    return;\n  }\n\n  let l = level;\n  let data = [];\n  for (let i = 0; i < 5; i++) {\n    let k = parentKey + \"-\" + level + \"-\" + i;\n    let d = {\n      id: k,\n      name: \"Edward King \" + k,\n      age: 32,\n      address: \"London, Park Lane no. \" + i\n    };\n\n    if (i % 2 === 0) {\n      d.children = createData(l + 1, k, maxLevel, i);\n    }\n\n    data.push(d);\n  }\n  return data;\n}\n\nfunction createTreeData() {\n  let data = [];\n  for (let i = 0; i < 100; i++) {\n    data.push({\n      id: \"\" + i,\n      level: 0,\n      name: \"Edward King \" + i,\n      age: 32,\n      address: \"London, Park Lane no. \" + i,\n      children: createData(0, i, 4)\n    });\n  }\n\n  return data;\n}\n\nclass Demo extends Component {\n  columns = [\n    {\n      dataIndex: \"code\",\n      key: \"code\",\n      title: \"编码\",\n      width: 200\n    },\n    {\n      title: \"名称\",\n      width: 150,\n      key: \"name\",\n      dataIndex: \"name\"\n    },\n    {\n      dataIndex: \"description\",\n      key: \"description\",\n      title: \"特征描述\",\n      width: 150\n    },\n    {\n      dataIndex: \"unit\",\n      key: \"unit\",\n      title: \"单位\",\n      width: 150\n    },\n    {\n      dataIndex: \"quantities\",\n      key: \"quantities\",\n      title: \"工程量\",\n      width: 150,\n      editor: (value, record, index, onchange, ref, validate) => {\n        return (\n          <Input\n            defaultValue={value}\n            ref={ref}\n            onChange={v => {\n              onchange({ quantities: v.target.value });\n            }}\n          />\n        );\n      }\n    },\n    {\n      dataIndex: \"unitPrice\",\n      key: \"unitPrice\",\n      title: \"综合单价\",\n      width: 150,\n      editor: (value, record, index, onchange, ref, validate) => {\n        return (\n          <InputNumber\n            defaultValue={value}\n            ref={ref}\n            onKeyDown={e => {\n              e.stopPropagation();\n            }}\n            onChange={e => {\n              onchange({ unitPrice: e });\n            }}\n          />\n        );\n      }\n    },\n    {\n      dataIndex: \"totalPrice\",\n      key: \"totalPrice\",\n      title: \"合价\",\n      width: 150,\n      render: (value, row) => {\n        let v = row.unitPrice * row.quantities;\n        if (isNaN(v)) {\n          return \"\";\n        }\n        return v;\n      }\n    },\n    {\n      dataIndex: \"evaluation\",\n      key: \"evaluation\",\n      title: \"暂估价\",\n      width: 150\n    }\n  ];\n\n  state = {\n    loading: false,\n    treeData: []\n  };\n\n  getData = () => {\n    this.setState({ loading: true });\n\n    let c = 0;\n    requestGet(BaseUrl + \"/public/data.json\", {\n      onSuccess: data => {\n        data = _.uniqBy(data, d => {\n          return d.code;\n        });\n\n        let bl = false;\n\n        data.forEach(d => {\n          let id = d.code || \"\";\n          let pid = \"\";\n          let len = id.length;\n          d.id = id;\n\n          if (len >= 2) {\n            let pl = 2;\n\n            if (len % 2 !== 0) {\n              pl = 3;\n            }\n\n            if (id === \"040704\") {\n              bl = true;\n            }\n\n            if (bl === true) {\n              pid = \"0407\";\n            } else {\n              pid = id.substring(0, len - pl);\n            }\n          }\n\n          d.pid = pid;\n        });\n\n        let treeData = unflatten(data, \"id\", \"pid\");\n\n        this.setState({\n          loading: false,\n          treeData: treeData\n        });\n      }\n    });\n  };\n\n  scrollToItem = index => {\n    if (this.refs.tb) {\n      this.refs.tb.scrollToItem(index, \"center\");\n    }\n  };\n\n  expandTo = (depth = 1) => {\n    this.refs.tb.expandTo(depth);\n  };\n\n  expandAll = () => {\n    this.refs.tb.expandAll();\n  };\n  collapseAll = () => {\n    this.refs.tb.collapseAll();\n  };\n\n  rowKey = \"id\";\n  deleteRow = row => {\n    let rowKey = this.rowKey;\n    let key = row[rowKey];\n    this.refs.tb.api.deleteData([key]);\n  };\n\n  copiedRow = null;\n  copy = row => {\n    let rowData = {};\n\n    for (const k in row) {\n      if (row.hasOwnProperty(k) && k !== \"children\") {\n        rowData[k] = row[k];\n      }\n    }\n    let str = JSON.stringify(rowData);\n    this.copiedRow = JSON.stringify(rowData);\n\n    const input = document.createElement(\"input\");\n    document.body.appendChild(input);\n    input.setAttribute(\"value\", str);\n    input.select();\n    if (document.execCommand(\"copy\")) {\n      document.execCommand(\"copy\");\n    }\n    document.body.removeChild(input);\n  };\n\n  pasteChildren = targetRow => {\n    let rowKey = this.rowKey;\n\n    let copiedRow = this.copiedRow;\n\n    if (copiedRow) {\n      let sourceRow = JSON.parse(copiedRow);\n      sourceRow[rowKey] = \"copied_row_\" + sourceRow[rowKey];\n\n      this.refs.tb.api.insertData({\n        data: [sourceRow],\n        parentKey: targetRow[rowKey],\n        editing: true,\n        scrollTo: false\n      });\n\n      this.isCut = false;\n      this.copiedRow = null;\n    }\n  };\n\n  isCut = false;\n  cut = row => {\n    this.copy(row);\n    this.isCut = true;\n  };\n\n  selectAll = rowData => {\n    this.refs.tb.selectToggle(rowData);\n  };\n\n  expandToggle = rowData => {\n    this.refs.tb.expandToggle(rowData);\n  };\n\n  onMenuClick = ({ key, item }) => {\n    console.log(\"key:\", item.props.row);\n\n    let actions = {\n      del: this.deleteRow,\n      copy: this.copy,\n      cut: this.cut,\n      pasteChildren: this.pasteChildren,\n      selectAll: this.selectAll,\n      expandToggle: this.expandToggle,\n      export: this.export\n    };\n\n    let fn = actions[key];\n    if (typeof fn === \"function\") {\n      fn(item.props.row);\n    }\n  };\n\n  searchIndex = -1;\n  searchedKey = \"\";\n  onChangeSearch = () => {\n    this.searchIndex = 0;\n    this.searchedKey = \"\";\n  };\n\n  onSearch = v => {\n    if (!v) {\n      this.searchIndex = 0;\n      this.searchedKey = \"\";\n      this.scrollToItem(-1);\n      this.forceUpdate();\n      return;\n    }\n\n    //先展开所有以便查询定位\n    this.expandAll();\n\n    let searchedIndex = -1;\n    let searchedKey = \"\";\n\n    let f = this.refs.tb.findData(d => d.name.indexOf(v) > -1, {\n      startIndex: this.searchIndex,\n      focused: true\n    });\n\n    if (f) {\n      searchedIndex = f.index;\n      searchedKey = f.row.id;\n    }\n\n    if (searchedIndex > -1) {\n      this.searchIndex = searchedIndex + 1;\n      this.searchedKey = searchedKey;\n    } else {\n      this.searchIndex = -1;\n      this.searchedKey = \"\";\n    }\n  };\n\n  onFilter = v => {\n    let { treeData } = this.state;\n    if (!v) {\n      this.setState({ treeData: treeData.slice() }, this.collapseAll);\n      return;\n    }\n\n    this.refs.tb.filterData(d => {\n      return d.name.indexOf(v) > -1;\n    });\n\n    this.expandAll();\n  };\n\n  contentMenu = row => {\n    let menuItemProps = {\n      style: { height: \"auto\", lineHeight: \"normal\" },\n      row\n    };\n\n    return (\n      <Menu selectable={false} onClick={this.onMenuClick}>\n        <Menu.Item key=\"del\" {...menuItemProps}>\n          删除行\n        </Menu.Item>\n        <Menu.Item key=\"copy\" {...menuItemProps}>\n          复制行\n        </Menu.Item>\n        <Menu.Item key=\"cut\" {...menuItemProps}>\n          剪切行\n        </Menu.Item>\n        <Menu.Item key=\"pasteChildren\" {...menuItemProps}>\n          粘贴行(下级)\n        </Menu.Item>\n        <Menu.Item key=\"selectAll\" {...menuItemProps}>\n          全选/全否\n        </Menu.Item>\n        <Menu.Item key=\"expandToggle\" {...menuItemProps}>\n          展开/收缩\n        </Menu.Item>\n        <Menu.Item key=\"export\" {...menuItemProps}>\n          导出\n        </Menu.Item>\n        <Menu.Item key=\"print\" {...menuItemProps}>\n          打印\n        </Menu.Item>\n      </Menu>\n    );\n  };\n\n  render() {\n    return (\n      <div style={{ height: \"100%\" }}>\n        <Table\n          rowKey=\"id\"\n          editable={true}\n          ref=\"tb\"\n          loading={this.state.loading}\n          columns={this.columns}\n          selectMode=\"multiple\"\n          checkStrictly={false}\n          data={this.state.treeData}\n          orderNumber={{ resizable: true }}\n          contextMenu={this.contentMenu}\n          validateTrigger=\"onChange\"\n          isAppend={true}\n          header={() => (\n            <div>\n              <Button onClick={this.getData}>获取数据</Button>\n              <Button onClick={this.expandAll} style={{ margin: \"0 5px\" }}>\n                展开所有\n              </Button>\n              <Button\n                onClick={() => this.expandTo(1)}\n                style={{ margin: \"0 5px\" }}\n              >\n                展开至第二级\n              </Button>\n\n              <Button onClick={this.collapseAll}>折叠所有</Button>\n              <Search\n                style={{ float: \"right\", margin: \"0 5px\", width: \"150px\" }}\n                placeholder=\"输入名称过滤\"\n                onSearch={this.onFilter}\n              />\n              <Search\n                style={{ float: \"right\", margin: \"0 5px\", width: \"150px\" }}\n                placeholder=\"输入名称查找\"\n                onSearch={this.onSearch}\n                onChange={this.onChangeSearch}\n              />\n            </div>\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Demo;\n\n\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";"],"sourceRoot":""}