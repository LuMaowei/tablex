{"version":3,"sources":["e:/WebRoot/tablex/packages/site/examples/Memorize/index.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","e_WebRoot_tablex_packages_site_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_5__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_7__","assign","mdxType","id","parentName","className","docz__WEBPACK_IMPORTED_MODULE_8__","__position","__code","__scope","this","Playground","Props","Table","flatten","Input","style","height","_React$Component","Demo","_this","e_WebRoot_tablex_packages_site_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","columns","dataIndex","title","key","width","align","data","e_WebRoot_tablex_packages_site_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","e_WebRoot_tablex_packages_site_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","call","generateData","state","e_WebRoot_tablex_packages_site_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","e_WebRoot_tablex_packages_site_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","value","count","arguments","length","undefined","prefix","Array","fill","map","row","rowIndex","reduce","rowData","column","columnIndex","Math","floor","random","parentId","_this$state","tablex__WEBPACK_IMPORTED_MODULE_9___default","a","rowKey","tableId","columnDropMenu","settable","React","Component","isMDXComponent"],"mappings":"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","file":"static/js/examples-memorize-index.7344c7d5.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from \"docz\";\nimport Table, { flatten } from \"tablex\";\nimport { Input } from \"antd\";\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic Usage`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import Table, { flatten, unflatten } from \"tablex\";\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"configurable--memorize\"\n    }}>{`Configurable & Memorize`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Click the button on the bottom or column drop menu  to configure table , and then reload the page to check. The Configured data stored in localStorage.`}</p>\n    </blockquote>\n    <Playground __position={0} __code={'class Demo extends React.Component {\\n    generateData(columns, count = 20, prefix = \\'Row\\') {\\n      return new Array(count).fill(0).map((row, rowIndex) => {\\n        return columns.reduce(\\n          (rowData, column, columnIndex) => {\\n            if (column.dataIndex !== \\'id\\') {\\n              rowData[column.dataIndex] = Math.floor(Math.random() * 100 + 1)\\n            } else {\\n              rowData[column.dataIndex] =\\n                prefix + \\' \\' + rowIndex + \\' - Col \\' + columnIndex\\n            }\\n            return rowData\\n          },\\n          {\\n            id: prefix + rowIndex,\\n            parentId: null,\\n          },\\n        )\\n      })\\n    }\\n    constructor(props) {\\n      super(props)\\n      const columns = [\\n        {\\n          dataIndex: \\'id\\',\\n          title: \\'id\\',\\n          key: \\'id\\',\\n          width: 150,\\n          align: \\'center\\',\\n        },\\n        {\\n          dataIndex: \\'column-1\\',\\n          key: \\'column-1\\',\\n          title: \\'column-1\\',\\n          width: 100,\\n        },\\n\\n        {\\n          dataIndex: \\'column-2\\',\\n          key: \\'column-2\\',\\n          title: \\'column-2\\',\\n          width: 150,\\n          align: \\'center\\',\\n        },\\n\\n        {\\n          dataIndex: \\'column-3\\',\\n          key: \\'column-3\\',\\n          title: \\'column-3\\',\\n          align: \\'right\\',\\n        },\\n        {\\n          dataIndex: \\'column-4\\',\\n          key: \\'column-4\\',\\n          title: \\'column-4\\',\\n          width: 100,\\n          align: \\'center\\',\\n        },\\n      ]\\n\\n      let data = this.generateData(columns, 20)\\n\\n      this.state = {\\n        data: data,\\n        columns: columns,\\n      }\\n    }\\n    render() {\\n      let { columns, data } = this.state\\n      return (\\n        <Table\\n          rowKey=\\\"id\\\"\\n          columns={columns}\\n          data={data}\\n          tableId=\\\"memorize_table\\\"\\n          columnDropMenu={true}\\n          settable={true}\\n        />\\n      )\\n    }\\n  }'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Table,\n      flatten,\n      Input\n    }} style={{\n      height: 400\n    }} mdxType=\"Playground\">\n {class Demo extends React.Component {\n        generateData(columns, count = 20, prefix = \"Row\") {\n          return new Array(count).fill(0).map((row, rowIndex) => {\n            return columns.reduce((rowData, column, columnIndex) => {\n              if (column.dataIndex !== \"id\") {\n                rowData[column.dataIndex] = Math.floor(Math.random() * 100 + 1);\n              } else {\n                rowData[column.dataIndex] = prefix + \" \" + rowIndex + \" - Col \" + columnIndex;\n              }\n\n              return rowData;\n            }, {\n              id: prefix + rowIndex,\n              parentId: null\n            });\n          });\n        }\n\n        constructor(props) {\n          super(props);\n          const columns = [{\n            dataIndex: \"id\",\n            title: \"id\",\n            key: \"id\",\n            width: 150,\n            align: \"center\"\n          }, {\n            dataIndex: \"column-1\",\n            key: \"column-1\",\n            title: \"column-1\",\n            width: 100\n          }, {\n            dataIndex: \"column-2\",\n            key: \"column-2\",\n            title: \"column-2\",\n            width: 150,\n            align: \"center\"\n          }, {\n            dataIndex: \"column-3\",\n            key: \"column-3\",\n            title: \"column-3\",\n            align: \"right\"\n          }, {\n            dataIndex: \"column-4\",\n            key: \"column-4\",\n            title: \"column-4\",\n            width: 100,\n            align: \"center\"\n          }];\n          let data = this.generateData(columns, 20);\n          this.state = {\n            data: data,\n            columns: columns\n          };\n        }\n\n        render() {\n          let {\n            columns,\n            data\n          } = this.state;\n          return <Table rowKey=\"id\" columns={columns} data={data} tableId=\"memorize_table\" columnDropMenu={true} settable={true} mdxType=\"Table\" />;\n        }\n\n      }}\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}