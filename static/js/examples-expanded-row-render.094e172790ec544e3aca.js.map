{"version":3,"sources":["E:/WebRoot/tablex/examples/expandedRowRender.js","E:/WebRoot/tablex/examples/expandedRowRender.mdx"],"names":["columns","count","arguments","length","undefined","prefix","props","Array","fill","map","column","columnIndex","Object","objectSpread","key","concat","dataIndex","title","width","generateColumns","fixedColumns","row","rowIndex","reduce","rowData","id","parentId","generateData","fixed","resizable","createData","level","parentKey","maxLevel","index","l","data","i","k","d","column-1","age","address","children","push","createTreeData","maxWidth","Demo","state","expandedRowKeys","expandedRowRender","record","extra","frozen","react_default","a","createElement","Date","getTime","onExpandedRowsChange","arr","_this","setState","this","src","rowKey","expandColumnKey","selectMode","defaultSelectedRowKeys","defaultExpandedRowKeys","orderNumber","expandRowHeight","Component","layoutProps","MDXLayout","MDXContent","_ref","components","objectWithoutProperties","index_es","assign","mdxType","index_esm","__position","__code","__scope","Playground","Props","ExpandedRowRenderDemo","style","height","isMDXComponent"],"mappings":"ogCA+BMA,EA5BkB,eAACC,EAADC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAS,GAAIG,EAAbH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAsB,UAAWI,EAAjCJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OACtB,IAAIG,MAAMN,GAAOO,KAAK,GAAGC,IAAI,SAACC,EAAQC,GAAT,OAAAC,OAAAC,EAAA,EAAAD,CAAA,GACxBN,EADwB,CAE3BQ,IAAG,GAAAC,OAAKV,GAALU,OAAcJ,GACjBK,UAAS,GAAAD,OAAKV,GAALU,OAAcJ,GACvBM,MAAK,UAAAF,OAAYJ,GACjBO,MAAO,QAsBKC,CAAgB,IAG5BC,GAtBiB,SAACpB,GAAD,IAAUC,EAAVC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAkB,GAAIG,EAAtBH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA+B,OAClD,IAAIK,MAAMN,GAAOO,KAAK,GAAGC,IAAI,SAACY,EAAKC,GACjC,OAAOtB,EAAQuB,OACb,SAACC,EAASd,EAAQC,GAOhB,OANAa,EAAQd,EAAOM,WAAf,OAAAD,OAAmCO,EAAnC,WAAAP,OAAqDJ,GAM9Ca,GAET,CACEC,GAAE,GAAAV,OAAKV,GAALU,OAAcO,GAChBI,SAAU,SAMLC,CAAa3B,EAAS,KAEhBA,EAAQS,IAAI,SAACC,EAAQC,GACtC,IAAIiB,EAIJ,OAHIjB,EAAc,IAAGiB,EAAQ,QACzBjB,EAAc,IAAGiB,EAAQ,SAEtBhB,OAAAC,EAAA,EAAAD,CAAA,GAAKF,EAAZ,CAAoBmB,WAAW,EAAMD,aAqDvC,SAASE,EAAWC,EAAOC,EAAWC,EAAUC,GAC9C,KAAIH,EAAQE,GAAZ,CAMA,IAFA,IAAIE,EAAIJ,EACJK,EAAO,GACFC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIC,EAAIN,EAAY,IAAMD,EAAQ,IAAMM,EACpCE,EAAI,CACNd,GAAIa,EACJE,WAAY,eAAiBF,EAC7BG,IAAK,GACLC,QAAS,yBAA2BL,GAG5B,IAANA,IACFE,EAAEI,SAAWb,EAAWK,EAAI,EAAGG,EAAGL,EAAUI,IAG9CD,EAAKQ,KAAKL,GAEZ,OAAOH,GAGT,SAASS,IAEP,IADA,IAAIT,EAAO,GACFC,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAKQ,KAAK,CACRnB,GAAI,GAAKY,EACTN,MAAO,EACPS,WAAY,eAAiBH,EAC7BI,IAAK,GACLC,QAAS,yBAA2BL,EACpCM,SAAUb,EAAW,EAAGO,EAAG,KAI/B,OAAOD,EAxFThB,EAAe,CACb,CACEJ,UAAW,WACXF,IAAK,WACLG,MAAO,SACPC,MAAO,KAET,CACED,MAAO,cACPC,MAAO,IACPJ,IAAK,YACL6B,SAAU,CACR,CACE3B,UAAW,UACXC,MAAO,OACPH,IAAK,WAELI,MAAO,KAET,CACEF,UAAW,KACXF,IAAK,WACLG,MAAO,YACPC,MAAO,IACPyB,SAAU,CACR,CACE3B,UAAW,KACXC,MAAO,SACPH,IAAK,YACLgC,SAAU,IACV5B,MAAO,KAET,CACEF,UAAW,YACXF,IAAK,YACLG,MAAO,SACPC,MAAO,SAMjB,CACEF,UAAW,MACXF,IAAK,WACLG,MAAO,MACPC,MAAO,UA6CL6B,6MACJC,MAAQ,CACNZ,KAAM,GACNa,gBAAiB,MASnBC,kBAAoB,SAACC,EAAQjB,EAAOkB,GAElC,MAAqB,SAAjBA,EAAMC,OACDC,EAAAC,EAAAC,cAAA,gCAAuB,IAAIC,MAAOC,WAEpC,QAGTC,qBAAuB,SAAAC,GACrBC,EAAKC,SAAS,CAAEb,gBAAiBW,wFAdjCG,KAAKD,SAAS,CACZ1B,KAAMS,uCAiBR,OACES,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEC,OAAO,KACPC,gBAAgB,WAChBlE,QAASoB,EACT8B,kBAAmBa,KAAKb,kBACxBiB,WAAW,WACXC,uBAAwB,CAAC,KACzBC,uBAAwB,CAAC,KACzBjC,KAAM2B,KAAKf,MAAMZ,KACjBuB,qBAAsBI,KAAKJ,qBAC3BW,aAAa,EACbC,gBAAiB,aArCNC,aA2CJzB,gPCzKf,IAKM0B,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGvE,EACFM,OAAAkE,EAAA,EAAAlE,CAAAgE,EAAA,gBACD,OAAOhE,OAAAmE,EAAA,EAAAnE,CAAC8D,EAAD9D,OAAAoE,OAAA,GAAeP,EAAiBnE,EAAhC,CAAuCuE,WAAYA,EAAYI,QAAQ,cAE5ErE,OAAAmE,EAAA,EAAAnE,CAAA,KAAQ,CACNa,GAAM,SADR,SAGAb,OAAAmE,EAAA,EAAAnE,CAACsE,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,4BAA6BC,QAAS,CACvE/E,MAAOyD,KAAOA,KAAKzD,MAAQA,EAC3BgF,eACAC,UACAC,yBACCC,MAAO,CACRC,OAAQ,KACPT,QAAQ,cACbrE,OAAAmE,EAAA,EAAAnE,CAACsC,EAAD,CAAuB+B,QAAQ,iNAMjCN,EAAWgB,gBAAiB","file":"static/js/examples-expanded-row-render.513eeaac.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Table } from \"../src/index\";\r\n\r\nconst generateColumns = (count = 10, prefix = \"column-\", props) =>\r\n  new Array(count).fill(0).map((column, columnIndex) => ({\r\n    ...props,\r\n    key: `${prefix}${columnIndex}`,\r\n    dataIndex: `${prefix}${columnIndex}`,\r\n    title: `Column ${columnIndex}`,\r\n    width: 150\r\n  }));\r\n\r\nconst generateData = (columns, count = 20, prefix = \"row-\") =>\r\n  new Array(count).fill(0).map((row, rowIndex) => {\r\n    return columns.reduce(\r\n      (rowData, column, columnIndex) => {\r\n        rowData[column.dataIndex] = `Row ${rowIndex} - Col ${columnIndex}`;\r\n\r\n        if (rowIndex === 0) {\r\n          //rowData.children = [];\r\n        }\r\n\r\n        return rowData;\r\n      },\r\n      {\r\n        id: `${prefix}${rowIndex}`,\r\n        parentId: null\r\n      }\r\n    );\r\n  });\r\n\r\nconst columns = generateColumns(10);\r\nconst data = generateData(columns, 100);\r\n\r\nlet fixedColumns = columns.map((column, columnIndex) => {\r\n  let fixed;\r\n  if (columnIndex < 2) fixed = \"left\";\r\n  if (columnIndex > 8) fixed = \"right\";\r\n\r\n  return { ...column, resizable: true, fixed };\r\n});\r\n\r\nfixedColumns = [\r\n  {\r\n    dataIndex: \"column-1\",\r\n    key: \"column-1\",\r\n    title: \"number\",\r\n    width: 200\r\n  },\r\n  {\r\n    title: \"appellation\",\r\n    width: 150,\r\n    key: \"column-11\",\r\n    children: [\r\n      {\r\n        dataIndex: \"address\",\r\n        title: \"name\",\r\n        key: \"column-2\",\r\n\r\n        width: 150\r\n      },\r\n      {\r\n        dataIndex: \"id\",\r\n        key: \"column-3\",\r\n        title: \"nick name\",\r\n        width: 150,\r\n        children: [\r\n          {\r\n            dataIndex: \"id\",\r\n            title: \"nick-1\",\r\n            key: \"column-21\",\r\n            maxWidth: 300,\r\n            width: 150\r\n          },\r\n          {\r\n            dataIndex: \"column-31\",\r\n            key: \"column-31\",\r\n            title: \"nick-2\",\r\n            width: 150\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    dataIndex: \"age\",\r\n    key: \"column-4\",\r\n    title: \"age\",\r\n    width: 150\r\n  }\r\n];\r\n\r\nfunction createData(level, parentKey, maxLevel, index) {\r\n  if (level > maxLevel) {\r\n    return;\r\n  }\r\n\r\n  let l = level;\r\n  let data = [];\r\n  for (let i = 0; i < 3; i++) {\r\n    let k = parentKey + \"-\" + level + \"-\" + i;\r\n    let d = {\r\n      id: k,\r\n      \"column-1\": \"Edward King \" + k,\r\n      age: 32,\r\n      address: \"London, Park Lane no. \" + i\r\n    };\r\n\r\n    if (i === 2) {\r\n      d.children = createData(l + 1, k, maxLevel, i);\r\n    }\r\n\r\n    data.push(d);\r\n  }\r\n  return data;\r\n}\r\n\r\nfunction createTreeData() {\r\n  let data = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    data.push({\r\n      id: \"\" + i,\r\n      level: 0,\r\n      \"column-1\": \"Edward King \" + i,\r\n      age: 32,\r\n      address: \"London, Park Lane no. \" + i,\r\n      children: createData(0, i, 2)\r\n    });\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\nclass Demo extends Component {\r\n  state = {\r\n    data: [],\r\n    expandedRowKeys: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      data: createTreeData()\r\n    });\r\n  }\r\n\r\n  expandedRowRender = (record, index, extra) => {\r\n  \r\n    if (extra.frozen === \"none\") {\r\n      return <div>expandedRowRender{new Date().getTime()}</div>;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  onExpandedRowsChange = arr => {\r\n    this.setState({ expandedRowKeys: arr });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Table\r\n        rowKey=\"id\"\r\n        expandColumnKey=\"column-1\"\r\n        columns={fixedColumns}\r\n        expandedRowRender={this.expandedRowRender}\r\n        selectMode=\"multiple\"\r\n        defaultSelectedRowKeys={[\"0\"]}\r\n        defaultExpandedRowKeys={[\"0\"]}\r\n        data={this.state.data}\r\n        onExpandedRowsChange={this.onExpandedRowsChange}\r\n        orderNumber={true}\r\n        expandRowHeight={200}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Demo;\r\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from \"docz\";\nimport ExpandedRowRenderDemo from \"./expandedRowRender\";\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"basic\"\n    }}>{`Basic`}</h2>\n    <Playground __position={0} __code={'<ExpandedRowRenderDemo />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      ExpandedRowRenderDemo\n    }} style={{\n      height: 400\n    }} mdxType=\"Playground\">\n  <ExpandedRowRenderDemo mdxType=\"ExpandedRowRenderDemo\" />\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}