{"version":3,"sources":["e:/WebRoot/tablex/packages/site/examples/preview.js","e:/WebRoot/tablex/packages/site/examples/preview.mdx"],"names":["columns","count","arguments","length","undefined","prefix","props","Array","fill","map","column","columnIndex","Object","objectSpread","key","concat","dataIndex","title","width","generateColumns","fixedColumns","row","rowIndex","reduce","rowData","id","parentId","generateData","fixed","resizable","createData","level","parentKey","maxLevel","index","l","data","i","k","d","column-1","age","address","children","push","createTreeData","childrens","titleRender","react_default","a","createElement","align","halign","fixedable","render","b","c","maxWidth","Demo","state","loading","expandedRowKeys","expandedRowRender","record","extra","frozen","Date","getTime","onExpandedRowsChange","arr","_this","setState","tableInner","innerRef","ins","scrollToItem","getData","setTimeout","onSelectChange","console","log","orderNumber","value","orders","join","selectionColumn","this","Fragment","onClick","style","cursor","marginLeft","lib","tableId","rowKey","checkStrictly","selectMode","defaultExpandedRowKeys","onExpand","r","rowClassName","rowHeight","expandRowHeight","minHeight","Component","layoutProps","MDXLayout","MDXContent","_ref","components","objectWithoutProperties","index_es","assign","mdxType","index_esm","__position","__code","__scope","Playground","Props","Preview","height","preview","isMDXComponent"],"mappings":"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","file":"static/js/examples-preview.49145f4b.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Table } from \"tablex\";\r\n\r\nconst generateColumns = (count = 10, prefix = \"column-\", props) =>\r\n  new Array(count).fill(0).map((column, columnIndex) => ({\r\n    ...props,\r\n    key: `${prefix}${columnIndex}`,\r\n    dataIndex: `${prefix}${columnIndex}`,\r\n    title: `Column ${columnIndex}`,\r\n    width: 150\r\n  }));\r\n\r\nconst generateData = (columns, count = 20, prefix = \"row-\") =>\r\n  new Array(count).fill(0).map((row, rowIndex) => {\r\n    return columns.reduce(\r\n      (rowData, column, columnIndex) => {\r\n        rowData[column.dataIndex] = `Row ${rowIndex} - Col ${columnIndex}`;\r\n\r\n        if (rowIndex === 0) {\r\n          //rowData.children = [];\r\n        }\r\n\r\n        return rowData;\r\n      },\r\n      {\r\n        id: `${prefix}${rowIndex}`,\r\n        parentId: null\r\n      }\r\n    );\r\n  });\r\n\r\nconst columns = generateColumns(10);\r\nconst data = generateData(columns, 100);\r\n\r\nlet fixedColumns = columns.map((column, columnIndex) => {\r\n  let fixed;\r\n  if (columnIndex < 2) fixed = \"left\";\r\n  if (columnIndex > 8) fixed = \"right\";\r\n\r\n  return { ...column, resizable: true, fixed };\r\n});\r\n\r\nfixedColumns = [\r\n  {\r\n    dataIndex: \"column-1\",\r\n    key: \"column-1\",\r\n    title: () => {\r\n      return \"fn title\";\r\n    },\r\n    titleRender: () => {\r\n      return <div>titleRender</div>;\r\n    },\r\n    width: 100,\r\n    align: \"left\",\r\n    halign: \"center\",\r\n    fixedable: false,\r\n    fixed: \"left\",\r\n    render: function(a, b, c, d) {\r\n      return a;\r\n    }\r\n  },\r\n  {\r\n    title: \"appellation\",\r\n    width: 150,\r\n    key: \"column-11\",\r\n    halign: \"left\",\r\n    children: [\r\n      {\r\n        dataIndex: \"address\",\r\n        title: \"name\",\r\n        key: \"column-2\",\r\n\r\n        width: 150\r\n      },\r\n      {\r\n        dataIndex: \"id\",\r\n        key: \"column-3\",\r\n        title: \"nick name\",\r\n        width: 150,\r\n        children: [\r\n          {\r\n            dataIndex: \"id\",\r\n            title: \"nick-1\",\r\n            key: \"column-21\",\r\n            maxWidth: 300,\r\n            width: 150\r\n          },\r\n          {\r\n            dataIndex: \"column-31\",\r\n            key: \"column-31\",\r\n            title: \"nick-2\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    dataIndex: \"age\",\r\n    key: \"column-4\",\r\n    title: \"age\",\r\n    fixed: \"right\"\r\n  }\r\n];\r\n\r\nfunction createData(level, parentKey, maxLevel, index) {\r\n  if (level > maxLevel) {\r\n    return;\r\n  }\r\n\r\n  let l = level;\r\n  let data = [];\r\n  for (let i = 0; i < 3; i++) {\r\n    let k = parentKey + \"-\" + level + \"-\" + i;\r\n    let d = {\r\n      id: k,\r\n      \"column-1\": \"Edward King \" + k,\r\n      age: 32,\r\n      address: \"London, Park Lane no. \" + i\r\n    };\r\n\r\n    if (i === 2) {\r\n      d.children = createData(l + 1, k, maxLevel, i);\r\n    }\r\n\r\n    data.push(d);\r\n  }\r\n  return data;\r\n}\r\n\r\nfunction createTreeData() {\r\n  let data = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    let childrens = createData(0, i, 2);\r\n    let d = {\r\n      id: \"\" + i,\r\n      level: 0,\r\n      \"column-1\": \"Edward King \" + i,\r\n      age: i,\r\n      address: \"London, Park Lane no. \" + i\r\n    };\r\n\r\n    if (i % 3 === 0) {\r\n      d.children = childrens;\r\n    }\r\n\r\n    data.push(d);\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\nclass Demo extends Component {\r\n  state = {\r\n    data: [],\r\n    loading: false,\r\n    expandedRowKeys: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      data: createTreeData()\r\n    });\r\n  }\r\n\r\n  expandedRowRender = (record, index, extra) => {\r\n    if (extra.frozen === \"none\") {\r\n      return <div>expandedRowRender{new Date().getTime()}</div>;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  onExpandedRowsChange = arr => {\r\n    this.setState({ expandedRowKeys: arr });\r\n  };\r\n\r\n  tableInner = null;\r\n  innerRef = ins => {\r\n    this.tableInner = ins;\r\n  };\r\n\r\n  scrollToItem = () => {\r\n    if (this.tableInner) {\r\n      this.tableInner.scrollToItem(13);\r\n    }\r\n  };\r\n\r\n  getData = () => {\r\n    this.setState({ loading: true });\r\n    setTimeout(() => {\r\n      this.setState({ loading: false, data: createTreeData() });\r\n    }, 1000);\r\n  };\r\n\r\n  onSelectChange = (a, b, c) => {\r\n    console.log(\"onSelectChange:\", b);\r\n  };\r\n\r\n  orderNumber = {\r\n    title: \"排序\",\r\n    width: 50,\r\n    align: \"left\",\r\n    resizable: true,\r\n    fixed:\"left\",\r\n    render: (value, row, index, extra) => {\r\n      let { orders } = extra;\r\n      return orders.join(\"-\");\r\n    }\r\n  };\r\n\r\n  selectionColumn={\r\n    fixed:\"left\"\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>\r\n          <span onClick={this.scrollToItem} style={{ cursor: \"pointer\" }}>\r\n            scroll to item\r\n          </span>\r\n          <span\r\n            onClick={this.getData}\r\n            style={{ cursor: \"pointer\", marginLeft: 10 }}\r\n          >\r\n            get data\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <Table\r\n            loading={this.state.loading}\r\n            tableId=\"preview_table\"\r\n            rowKey=\"id\"\r\n            innerRef={this.innerRef}\r\n            columns={fixedColumns}\r\n            checkStrictly={true}\r\n            selectMode=\"multiple\"\r\n            defaultExpandedRowKeys={[\"0\"]}\r\n            data={this.state.data}\r\n            onExpand={(b, r) => {\r\n              console.log(\"onExpand:\", r);\r\n            }}\r\n            onExpandedRowsChange={this.onExpandedRowsChange}\r\n            onSelectChange={this.onSelectChange}\r\n            rowClassName={() => {\r\n                console.log(\"rowClassName\");\r\n            }}\r\n            orderNumber={this.orderNumber}\r\n            selectionColumn={this.selectionColumn}\r\n            rowHeight={(d, i) => {\r\n              if (i % 2 === 0) {\r\n                return 50;\r\n              } else {\r\n                return 30;\r\n              }\r\n            }}\r\n            expandRowHeight={200}\r\n            minHeight={600}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Demo;\r\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from \"docz\";\nimport Preview from \"./preview\";\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"preview\"\n    }}>{`Preview`}</h2>\n    <Playground __position={0} __code={'<Preview />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Preview\n    }} style={{\n      height: 600\n    }} mdxType=\"Playground\">\n  <Preview mdxType=\"Preview\" />\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}