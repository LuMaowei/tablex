{"version":3,"sources":["E:/WebRoot/tablex/src/base/GroupHeader.js","E:/WebRoot/tablex/src/base/ExpandIcon.js","E:/WebRoot/tablex/src/base/Checkbox.js","E:/WebRoot/tablex/src/base/BaseTable.js","E:/WebRoot/tablex/src/base/index.js","E:/WebRoot/tablex/src/base/utils.js","E:/WebRoot/tablex/src/editable/EditableTable.js","E:/WebRoot/tablex/src/editable/index.js"],"names":["Column","_ref","cell","depth","h","columnDepth","headerHeight","react_default","a","createElement","className","style","height","ColumnGroup","_ref2","title","children","display","alignItems","justifyContent","borderRight","borderTop","renderColumns","_ref3","columns","cells","columnList","map","d","i","columnIndex","findIndex","c","key","arr","filter","__placeholder__","frozen","childrens","notFrozenColumns","getTreeLeafs","length","GroupHeader_ColumnGroup","Object","assign","dataIndex","__depth","GroupHeader_Column","GroupHeader","props","Fragment","MemoHeader","_ref4","_ref4$cells","_ref4$headerHeight","useMemo","ExpandLoading","viewBox","data-icon","width","fill","aria-hidden","focusable","ExpandIcon","loading","expandable","expanded","onExpand","isLeaf","cls","undefined","marginLeft","onClick","e","stopPropagation","Checkbox","indeterminate","onChange","value","checked","disabled","type","Table","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getScrollbarSize","components","expandIconProps","rowData","rowKey","Array","state","loadingKeys","indexOf","isLoadingChildren","setLoadingChildren","bl","callback","nextKeys","toConsumableArray","push","splice","setState","data","cloneDeep","loadChildrenData","row","fn","res","constructor","name","then","onRowExpand","rowIndex","headerRenderer","headerIndex","base_GroupHeader","rowHeight","onScroll","scrollLeft","horizontalScrollDirection","getRowsByKeys","keys","arguments","rows","_this$state","flatData","forEach","k","find","r","isSingleSelect","selectMode","isMultipleSelect","isDisabledSelect","disabledSelectKeys","isExtraColumn","onSelectChange","selectedRowKeys","concat","rowEventHandlers","_ref5","event","isSelected","isDisabledCheck","onCheckChange","checkStrictly","addChecked","removeChecked","onCheckAllChange","addAllChecked","removeAllChecked","_this$state2","nextSelected","halfCheckedKeys","parentKeys","__parents","p","checkboxCellRender","_ref6","_this$state3","attr","base_Checkbox","checkboxHeadRender","_ref7","_this$state4","isCheckedAll","orderNumberCellRender","_ref8","rowClassName","_ref9","_this$state5","tempCls","record","index","join","tableApi","getSelectedKeys","prevProps","orderNumber","initRef","assertThisInitialized","_this$state6","_addCheckedKeyWithDis","addCheckedKeyWithDisabled","nextHalflCheckedKeys","_this$state7","_removeCheckedKey","removeCheckedKey","expandColumnKey","dataKey","_this$state8","checkboxColumn","__type","orderNumberColumn","cellRenderer","es","fixed","classPrefix","overscanRowCount","nextProps","prevState","resizable","dataSource","nextState","_nextState","extraColumns","unshift","align","columnsArr","_treeToList","treeToList","leafs","maxDepth","list","hasFrozenLeft","hasOwnProperty","render","_ref10","cellData","column","React","isValidElement","defineProperty","Component","AutoResizeTable","_ref11","BaseTable_Table","BaseTable","defaultProps","idField","treeList","roots","getChildren","item","parents","tempArr","__parent","sortedArr","sort","b","treeToFlatten","getDataListWithExpanded","expandedKeys","setChildren","cArr","treeFilter","node","nextChildrens","getScrollbarWidth","navigator","userAgent","scrollbarWidth","oP","document","styles","overflowY","body","appendChild","offsetWidth","clientWidth","remove","addCheckedKey","nextHalfCheckedKeys","halfIndex","parentHalfCheckedKeys","childrenSelectedKeys","ck","_loop","pNode","childrensAllChecked","cKey","j","newHalflCheckedKeys","childrenKeys","_loop2","m","_loop3","childrensAllUnChecked","_ref3$disabledSelectK","isEnabled","itemKey","parentEnableSelect","pArr","isEnableSelect","_loop4","__webpack_require__","__webpack_exports__","Content","Layout","Header","EditableTable","rowsAttributes","tableRef","inst","isEditing","updateComponent","forceUpdate","delayTimer","delayUpdate","delay","validateDelay","clearTimeout","setTimeout","isMouseFocus","changedRows","addToChanged","newRow","validateTrigger","validateRow","editChange","newValues","addedData","setRowAttr","attrs","fRow","__attribute","merge","newAttr","getRowAttr","getValidate","validatorAsync","validation","validator","v","Promise","resolve","reject","columnKey","valid","msg","message","validateAsync","all","datas","validate","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","abrupt","stop","validateAll","_callee2","editKeys","isEditAll","allData","_context2","editorInstance","setEditorIns","ins","ed","getEditorIns","formatColumns","editingVisible","hidden","cols","editor","renderFn","renderProps","newRenderProps","colSpan","values","verticalAlign","onKeyDown","tooltip_default","placement","toggleSettingColumns","editAll","endEdit","callBack","editSaveLoading","isAdding","isAddingRange","sourceData","editType","cancelEdit","onCancel","reset","editRows","getChangedRows","getRows","addRow","editting","addRows","newEditKeys","newAddedData","rowKeys","rowTemplate","Date","getTime","setRows","focusInput","input","select","focus","el","ReactDom","findDOMNode","inputEl","getElementsByTagName","getNextEditor","keyCode","nextEditor","currIndex","nextRow","currColumnIndex","nextColumn","currEditor","getRealOpenState","completeEdit","_callee3","_this$props","allowSaveEmpty","alwaysValidate","newRows","addedRows","onEditSave","_context3","deletedRows","rawData","isAppend","__isAddedRow","error","_x","apply","edit","onBeforeEdit","onEdit","onBeforeDelete","selectedKeys","warn","newData","deleteLoading","onDelete","addRange","rowCount","_this$props2","defaultAddCount","onBeforeAdd","addCount","onAdd","editTools","tools","config","editToolsConfig","isTop","position","buttons","itemStyle","okText","okIcon","icon_default","cancelText","cancelIcon","addText","addIcon","editText","editIcon","deleteText","deleteIcon","button_default","objectSpread","menu","menu_default","Item","dropdown_default","overlay","tool","popconfirm_default","onConfirm","toolIcon","icon","toolAttr","handler","text","pagination","getProps","bottomExtra","createToolBar","padding","backgroundColor","getDataRows","dataList","_this$props3","updateRows","api","delete","getData","propsOriginal","sourceColumns","dataControled","readOnly","_props$editToolsConfi","newProps","hover","layout_default","data-tableid","tableId","base","forwardRef","ref","editable_EditableTable","propTypes","PropTypes","array","object","bool","number","func","oneOf"],"mappings":"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","file":"static/js/examples-index~examples-props.524aeab8.js","sourcesContent":["import React, { useMemo } from \"react\";\r\nimport { getTreeLeafs } from \"./utils\";\r\n\r\nconst Column = ({ cell, depth, columnDepth, headerHeight }) => {\r\n  let h = (columnDepth - depth + 1) * headerHeight;\r\n  return (\r\n    <div className=\"table-head-group-children\" style={{ height: h }}>\r\n      {cell}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ColumnGroup = ({ title, children, headerHeight }) => {\r\n  return (\r\n    <div className=\"GroupCell\" style={{ display: \"block\" }}>\r\n      <div\r\n        style={{\r\n          height: headerHeight,\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          borderRight: \"1px solid #eeeeee\"\r\n        }}\r\n      >\r\n        {title}\r\n      </div>\r\n      <div\r\n        style={{\r\n          height: headerHeight,\r\n          display: \"flex\",\r\n          borderTop: \"1px solid #eeeeee\"\r\n        }}\r\n      >\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst renderColumns = ({\r\n  columns,\r\n  cells,\r\n  columnList,\r\n  columnDepth,\r\n  headerHeight\r\n}) => {\r\n  return columns.map((d, i) => {\r\n    let columnIndex = columnList.findIndex(c => c.key === d.key);\r\n    let cell = cells[columnIndex];\r\n\r\n    let arr = columnList.filter(d => !d.__placeholder__);\r\n\r\n    let frozen = \"\";\r\n    arr[0] && (frozen = arr[0].frozen);\r\n\r\n    let childrens = d.children || [];\r\n\r\n    if (frozen === \"left\" || frozen === \"right\") {\r\n      childrens = childrens.filter(d => !!d.frozen);\r\n    } else {\r\n      childrens = childrens.filter(d => !d.frozen);\r\n\r\n      let leafs = getTreeLeafs(childrens);\r\n\r\n      //当非冻结列下的子级别均被冻结，则不渲染分组表头\r\n      let notFrozenColumns = leafs.filter(d => !d.frozen);\r\n      if (childrens.length > 0 && notFrozenColumns.length === 0) {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    if (childrens.length > 0) {\r\n      return (\r\n        <ColumnGroup\r\n          key={d.dataIndex || i}\r\n          {...d}\r\n          depth={d.__depth}\r\n          columnDepth={columnDepth}\r\n          cell={cell}\r\n          headerHeight={headerHeight}\r\n        >\r\n          {renderColumns({\r\n            columns: childrens,\r\n            cells,\r\n            columnList,\r\n            columnDepth,\r\n            headerHeight\r\n          })}\r\n        </ColumnGroup>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Column\r\n        key={d.dataIndex || i}\r\n        {...d}\r\n        cell={cells[columnIndex]}\r\n        depth={d.__depth}\r\n        columnDepth={columnDepth}\r\n        headerHeight={headerHeight}\r\n      />\r\n    );\r\n  });\r\n};\r\n\r\nfunction GroupHeader(props) {\r\n  return <React.Fragment>{renderColumns(props)}</React.Fragment>;\r\n}\r\n\r\nconst MemoHeader = ({\r\n  cells = [],\r\n  columns,\r\n  columnList,\r\n  columnDepth,\r\n  headerHeight = 40\r\n}) => {\r\n  const memoizedValue = useMemo(() => {\r\n    return (\r\n      <GroupHeader\r\n        cells={cells}\r\n        columns={columns}\r\n        columnList={columnList}\r\n        columnDepth={columnDepth}\r\n        headerHeight={headerHeight}\r\n      />\r\n    );\r\n  }, [cells]);\r\n\r\n  return memoizedValue;\r\n};\r\n\r\nexport default MemoHeader;\r\n","import React from \"react\";\r\n\r\nfunction ExpandLoading() {\r\n  return (\r\n    <svg\r\n      viewBox=\"0 0 1024 1024\"\r\n      className=\"tablex-loading-icon\"\r\n      data-icon=\"loading\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      fill=\"currentColor\"\r\n      aria-hidden=\"true\"\r\n      focusable=\"false\"\r\n    >\r\n      <path d=\"M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 0 0-94.3-139.9 437.71 437.71 0 0 0-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nconst ExpandIcon = props => {\r\n  let { loading, expandable, expanded, onExpand, isLeaf, depth } = props;\r\n\r\n  let cls = \"table__expandicon\";\r\n\r\n  if (loading === true) {\r\n    return <ExpandLoading />;\r\n  }\r\n\r\n  if (expandable === undefined) {\r\n    return null;\r\n  }\r\n\r\n  if (isLeaf === false) {\r\n    if (expanded === true) {\r\n      cls += \" expanded\";\r\n    } else {\r\n      cls += \" collapsed\";\r\n    }\r\n  } else {\r\n    cls = \"table__expandicon--placeholder\";\r\n  }\r\n\r\n  return (\r\n    <span\r\n      className={cls}\r\n      style={{ marginLeft: depth * 20 }}\r\n      onClick={e => {\r\n        e.stopPropagation();\r\n        onExpand(!expanded);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ExpandIcon;\r\n","import React from \"react\";\r\n\r\nconst Checkbox = props => {\r\n    let { indeterminate, onChange, value, checked, disabled } = props;\r\n\r\n    let cls = \"\";\r\n\r\n    if (indeterminate === true) {\r\n        cls = \"table__checkbox--indeterminate\";\r\n    }\r\n\r\n    if (checked === true) {\r\n        cls = \"table__checkbox--checked\";\r\n    }\r\n\r\n    if (disabled === true) {\r\n        cls = \"table__checkbox--disabled\";\r\n    }\r\n\r\n    return (\r\n        <span\r\n            className={\"table__checkbox \" + cls}\r\n            onClick={e => {\r\n                e.stopPropagation();\r\n                if (typeof onChange === \"function\" && disabled != true) {\r\n                    onChange(!checked, props.value);\r\n                }\r\n            }}\r\n        >\r\n            <input\r\n                type=\"checkbox\"\r\n                value={value}\r\n                disabled={disabled}\r\n                className=\"table__checkbox__input\"\r\n            />\r\n            <span className=\"table__checkbox__inner\" />\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default Checkbox;\r\n","import React from \"react\";\r\nimport BaseTable, { AutoResizer, unflatten } from \"react-base-table\";\r\nimport cloneDeep from \"lodash/cloneDeep\";\r\nimport {\r\n  treeToList,\r\n  removeCheckedKey,\r\n  addCheckedKeyWithDisabled\r\n} from \"./utils\";\r\nimport TableHeader from \"./GroupHeader\";\r\nimport ExpandIcon from \"./ExpandIcon\";\r\nimport Checkbox from \"./Checkbox\";\r\n\r\nimport \"./styles.css\";\r\n\r\nclass Table extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns: [],\r\n      columnList: [],\r\n      columnDepth: 0,\r\n      data: [],\r\n      flatData: [],\r\n      loadingKeys: [],\r\n      prevProps: null,\r\n      rowHeight: 40,\r\n      selectedRowKeys: [],\r\n      disabledSelectKeys: [],\r\n      halfCheckedKeys: [],\r\n      selectMode: \"\",\r\n      rowKey: \"\",\r\n      orderNumber: false,\r\n      checkStrictly: false\r\n    };\r\n\r\n    if (typeof props.initRef === \"function\") {\r\n      props.initRef(this);\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    let {\r\n      rowKey,\r\n      columns,\r\n      loading,\r\n      selectMode,\r\n      disabledSelectKeys,\r\n      orderNumber,\r\n      checkStrictly,\r\n      resizable\r\n    } = nextProps;\r\n\r\n    let data = nextProps.data || nextProps.dataSource || [];\r\n\r\n    let nextState = null;\r\n\r\n    if (prevState.prevProps !== nextProps) {\r\n      let extraColumns = [];\r\n\r\n      //\r\n      if (selectMode === \"multiple\") {\r\n        extraColumns.unshift({\r\n          key: \"__checkbox_column\",\r\n          dataKey: \"__checkbox_column\",\r\n          __type: \"__checkbox_column\",\r\n          width: 50,\r\n          align: \"center\"\r\n        });\r\n      }\r\n\r\n      if (orderNumber === true) {\r\n        extraColumns.unshift({\r\n          key: \"__ordernumber_column\",\r\n          dataIndex: \"__ordernumber_column\",\r\n          __type: \"__ordernumber_column\",\r\n          width: 50,\r\n          title: \"No.\",\r\n          align: \"center\"\r\n        });\r\n      }\r\n      //\r\n\r\n      let columnsArr = [].concat(extraColumns).concat(columns);\r\n\r\n      let { leafs: columnList, maxDepth: columnDepth, list } = treeToList(\r\n        columnsArr\r\n      );\r\n\r\n      let hasFrozenLeft = false;\r\n\r\n      //兼容antd table column的属性\r\n      list.forEach(d => {\r\n        d.frozen = d.fixed;\r\n        d.key = d.key || d.dataIndex;\r\n        d.dataKey = d.dataIndex;\r\n\r\n        if (d.fixed === \"left\") {\r\n          hasFrozenLeft = true;\r\n        }\r\n\r\n        if (!d.hasOwnProperty(\"resizable\")) {\r\n          d.resizable = resizable;\r\n        }\r\n\r\n        if (typeof d.render === \"function\") {\r\n          d.cellRenderer = ({\r\n            cellData,\r\n            columns,\r\n            column,\r\n            columnIndex,\r\n            rowData,\r\n            rowIndex\r\n          }) => {\r\n            let r = d.render(cellData, rowData, rowIndex);\r\n\r\n            if (React.isValidElement(r)) {\r\n              return r;\r\n            }\r\n\r\n            if (r && r.children) {\r\n              if (React.isValidElement(r.children)) {\r\n                return r.children;\r\n              }\r\n            }\r\n            return r;\r\n          };\r\n        }\r\n      });\r\n\r\n      if (hasFrozenLeft === true) {\r\n        extraColumns.forEach(d => {\r\n          d.fixed = \"left\";\r\n          d.frozen = \"left\";\r\n        });\r\n      }\r\n\r\n      //\r\n\r\n      let { list: dataArr } = treeToList(data, rowKey);\r\n\r\n      nextState = {\r\n        rowKey,\r\n        columns: columnsArr,\r\n        columnList: columnList,\r\n        columnDepth: columnDepth,\r\n        data: data,\r\n        flatData: dataArr,\r\n        loading: !!loading,\r\n        selectMode,\r\n        disabledSelectKeys,\r\n        rowKey,\r\n        orderNumber,\r\n        checkStrictly\r\n      };\r\n\r\n      if (\"selectedRowKeys\" in nextProps) {\r\n        nextState.selectedRowKeys = nextProps.selectedRowKeys || [];\r\n      }\r\n\r\n      nextState.prevProps = nextProps;\r\n    }\r\n\r\n    return nextState;\r\n  }\r\n\r\n  getScrollbarSize = () => {\r\n    return 6;\r\n  };\r\n\r\n  components = {\r\n    ExpandIcon: ExpandIcon\r\n  };\r\n\r\n  expandIconProps = ({ rowData }) => {\r\n    let rowKey = this.props.rowKey;\r\n    let key = rowData[rowKey];\r\n\r\n    return {\r\n      rowKey: key,\r\n      rowData,\r\n      isLeaf: rowData.children instanceof Array ? false : true,\r\n      loading: this.state.loadingKeys.indexOf(key) > -1\r\n    };\r\n  };\r\n\r\n  /**\r\n   * 行是否正在加载子级\r\n   */\r\n  isLoadingChildren = key => {\r\n    let { loadingKeys } = this.state;\r\n\r\n    return loadingKeys.indexOf(key) > -1;\r\n  };\r\n\r\n  /**\r\n   * 设置行的子级加载状态\r\n   */\r\n  setLoadingChildren = (key, bl, callback) => {\r\n    let { loadingKeys } = this.state;\r\n\r\n    let i = loadingKeys.indexOf(key);\r\n\r\n    let nextKeys = [...loadingKeys];\r\n\r\n    if (bl === true) {\r\n      if (i === -1) {\r\n        nextKeys.push(key);\r\n      }\r\n    } else {\r\n      if (i > -1) {\r\n        nextKeys.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      loadingKeys: nextKeys,\r\n      data: cloneDeep(this.state.data)\r\n    });\r\n  };\r\n\r\n  /**\r\n   * 异步加载子级数据\r\n   */\r\n  loadChildrenData = (key, row) => {\r\n    let fn = this.props.loadChildrenData;\r\n\r\n    if (typeof fn === \"function\") {\r\n      let res = fn(row);\r\n\r\n      if (res && res.constructor.name === \"Promise\") {\r\n        this.setLoadingChildren(key, true);\r\n\r\n        res.then(childrens => {\r\n          this.setLoadingChildren(key, false);\r\n        });\r\n\r\n        res.catch(e => {\r\n          this.setLoadingChildren(key, false);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  onRowExpand = ({ expanded, rowData, rowIndex, rowKey }) => {\r\n    if (\r\n      rowData &&\r\n      rowData.children instanceof Array &&\r\n      rowData.children.length > 0\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (expanded === true) {\r\n      this.loadChildrenData(rowKey, rowData);\r\n    }\r\n  };\r\n\r\n  headerRenderer = ({ cells, columns, headerIndex }) => {\r\n    return (\r\n      <TableHeader\r\n        cells={cells}\r\n        columns={this.state.columns}\r\n        columnList={columns}\r\n        columnDepth={this.state.columnDepth}\r\n        headerIndex={headerIndex}\r\n        headerHeight={this.state.rowHeight}\r\n      />\r\n    );\r\n  };\r\n\r\n  onScroll = ({ scrollLeft, horizontalScrollDirection }) => {};\r\n\r\n  /** 通过rowKey获取数据行 */\r\n  getRowsByKeys = (keys = []) => {\r\n    let rows = [];\r\n    let { rowKey, flatData: arr } = this.state;\r\n\r\n    keys.forEach(k => {\r\n      let row = arr.find(r => r[rowKey] === k);\r\n      if (row != null) {\r\n        rows.push(Object.assign({}, row));\r\n      }\r\n    });\r\n\r\n    return rows;\r\n  };\r\n\r\n  /** 是否为单选 */\r\n  isSingleSelect = () => {\r\n    return this.state.selectMode === \"single\";\r\n  };\r\n\r\n  /** 是否为多选 */\r\n  isMultipleSelect = () => {\r\n    return this.state.selectMode === \"multiple\";\r\n  };\r\n\r\n  /** 当前行是否被禁用选择 */\r\n  isDisabledSelect = key => {\r\n    let bl = this.state.disabledSelectKeys.findIndex(d => d === key) > -1;\r\n    return bl;\r\n  };\r\n\r\n  /** 是否为自动添加的扩展列 */\r\n  isExtraColumn = (type = \"\") => {\r\n    return [\"__checkbox_column\", \"__ordernumber_column\"].indexOf(type) > -1;\r\n  };\r\n\r\n  onSelectChange = rowKey => {\r\n    let { selectedRowKeys } = this.state;\r\n    let i = selectedRowKeys.indexOf(rowKey);\r\n    let nextKeys = [].concat(selectedRowKeys);\r\n\r\n    if (this.isDisabledSelect(rowKey)) {\r\n      return;\r\n    }\r\n\r\n    if (this.isSingleSelect()) {\r\n      if (i > -1) {\r\n        nextKeys = [];\r\n      } else {\r\n        nextKeys = [rowKey];\r\n      }\r\n    } else if (this.isMultipleSelect()) {\r\n      if (i > -1) {\r\n        nextKeys.splice(i, 1);\r\n      } else {\r\n        nextKeys.push(rowKey);\r\n      }\r\n    } else {\r\n      return;\r\n    }\r\n\r\n    if (typeof this.props.onSelectChange === \"function\") {\r\n      this.props.onSelectChange(nextKeys, this.getRowsByKeys(nextKeys), rowKey);\r\n    }\r\n\r\n    this.setState({ selectedRowKeys: nextKeys });\r\n  };\r\n\r\n  rowEventHandlers = {\r\n    onClick: ({ rowData, rowIndex, rowKey, event }) => {\r\n      if (this.isSingleSelect()) {\r\n        this.onSelectChange(rowKey);\r\n      }\r\n\r\n      if (this.isMultipleSelect()) {\r\n        let { selectedRowKeys } = this.state;\r\n        let isSelected = selectedRowKeys.indexOf(rowKey) > -1;\r\n        let isEnabled = !this.isDisabledCheck(rowKey, rowData);\r\n        isEnabled && this.onCheckChange(!isSelected, rowKey);\r\n      }\r\n    }\r\n  };\r\n\r\n  onCheckChange = (bl, value) => {\r\n    if (this.state.checkStrictly === false) {\r\n      this.onSelectChange(value);\r\n    } else {\r\n      if (bl === true) {\r\n        this.addChecked(value);\r\n      } else {\r\n        this.removeChecked(value);\r\n      }\r\n    }\r\n  };\r\n\r\n  /** 添加复选行 */\r\n  addChecked(key) {\r\n    let {\r\n      selectedRowKeys,\r\n      rowKey,\r\n      flatData,\r\n      halfCheckedKeys,\r\n      disabledSelectKeys\r\n    } = this.state;\r\n\r\n    let {\r\n      selectedRowKeys: nextKeys,\r\n      halfCheckedKeys: nextHalflCheckedKeys\r\n    } = addCheckedKeyWithDisabled({\r\n      key,\r\n      selectedRowKeys,\r\n      rowKey,\r\n      flatData,\r\n      halfCheckedKeys,\r\n      disabledSelectKeys\r\n    });\r\n\r\n    if (typeof this.props.onSelectChange === \"function\") {\r\n      this.props.onSelectChange(nextKeys, this.getRowsByKeys(nextKeys), rowKey);\r\n    }\r\n\r\n    this.setState({\r\n      selectedRowKeys: nextKeys,\r\n      halfCheckedKeys: nextHalflCheckedKeys,\r\n      data: cloneDeep(this.state.data)\r\n    });\r\n  }\r\n\r\n  /** 移除复选行 */\r\n  removeChecked(key) {\r\n    let { selectedRowKeys, rowKey, flatData, halfCheckedKeys } = this.state;\r\n\r\n    let {\r\n      selectedRowKeys: nextKeys,\r\n      halfCheckedKeys: nextHalflCheckedKeys\r\n    } = removeCheckedKey({\r\n      key,\r\n      selectedRowKeys,\r\n      rowKey,\r\n      flatData,\r\n      halfCheckedKeys\r\n    });\r\n\r\n    if (typeof this.props.onSelectChange === \"function\") {\r\n      this.props.onSelectChange(nextKeys, this.getRowsByKeys(nextKeys), rowKey);\r\n    }\r\n\r\n    this.setState({\r\n      selectedRowKeys: nextKeys,\r\n      halfCheckedKeys: nextHalflCheckedKeys,\r\n      data: cloneDeep(this.state.data)\r\n    });\r\n  }\r\n\r\n  onCheckAllChange = bl => {\r\n    if (bl === true) {\r\n      this.addAllChecked();\r\n    } else {\r\n      this.removeAllChecked();\r\n    }\r\n  };\r\n\r\n  addAllChecked = () => {\r\n    let { rowKey, flatData } = this.state;\r\n    let nextSelected = [];\r\n    let arr = [];\r\n\r\n    flatData.forEach(d => {\r\n      let k = d[rowKey];\r\n\r\n      let bl = !this.isDisabledCheck(k, d);\r\n\r\n      if (bl) {\r\n        nextSelected.push(k);\r\n        arr.push(d);\r\n      }\r\n    });\r\n\r\n    if (typeof this.props.onSelectChange === \"function\") {\r\n      this.props.onSelectChange(nextSelected, arr, \"\");\r\n    }\r\n\r\n    this.setState({\r\n      selectedRowKeys: nextSelected,\r\n      halfCheckedKeys: [],\r\n      data: cloneDeep(this.state.data)\r\n    });\r\n  };\r\n\r\n  removeAllChecked = () => {\r\n    if (typeof this.props.onSelectChange === \"function\") {\r\n      this.props.onSelectChange([], [], \"\");\r\n    }\r\n\r\n    this.setState({\r\n      selectedRowKeys: [],\r\n      halfCheckedKeys: [],\r\n      data: cloneDeep(this.state.data)\r\n    });\r\n  };\r\n\r\n  /** 判断行/行父级是否被禁用选中 */\r\n  isDisabledCheck = (key, rowData) => {\r\n    let arr = this.state.disabledSelectKeys;\r\n    let bl = arr.indexOf(key) > -1;\r\n\r\n    if (bl === false) {\r\n      let parentKeys = rowData.__parents || [];\r\n\r\n      for (let i = 0; i < parentKeys.length; i++) {\r\n        const p = parentKeys[i];\r\n        if (arr.indexOf(p) > -1) {\r\n          bl = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return bl;\r\n  };\r\n\r\n  checkboxCellRender = ({ rowData }) => {\r\n    let { rowKey, selectedRowKeys, halfCheckedKeys } = this.state;\r\n    let key = rowData[rowKey];\r\n\r\n    let attr = {};\r\n\r\n    if (selectedRowKeys.indexOf(key) > -1) {\r\n      attr.checked = true;\r\n    }\r\n\r\n    if (halfCheckedKeys.indexOf(key) > -1) {\r\n      attr.indeterminate = true;\r\n    }\r\n\r\n    if (this.isDisabledCheck(key, rowData)) {\r\n      attr.disabled = true;\r\n    }\r\n\r\n    return (\r\n      <Checkbox\r\n        rowData={rowData}\r\n        value={key}\r\n        onChange={this.onCheckChange}\r\n        {...attr}\r\n      />\r\n    );\r\n  };\r\n\r\n  checkboxHeadRender = ({ rowData }) => {\r\n    let { selectedRowKeys, halfCheckedKeys, flatData, rowKey } = this.state;\r\n\r\n    let isCheckedAll = true;\r\n\r\n    for (let i = 0; i < flatData.length; i++) {\r\n      const key = flatData[i][rowKey];\r\n\r\n      if (this.isDisabledCheck(key, flatData[i])) {\r\n        continue;\r\n      }\r\n\r\n      if (selectedRowKeys.indexOf(key) === -1) {\r\n        isCheckedAll = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    let attr = {};\r\n\r\n    if (isCheckedAll === true) {\r\n      attr.checked = true;\r\n    } else {\r\n      if (selectedRowKeys.length > 0 || halfCheckedKeys.length > 0) {\r\n        attr.indeterminate = true;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Checkbox rowData={rowData} {...attr} onChange={this.onCheckAllChange} />\r\n    );\r\n  };\r\n\r\n  orderNumberCellRender = ({ rowIndex }) => {\r\n    return <span>{rowIndex + 1}</span>;\r\n  };\r\n\r\n  rowClassName = ({ rowData, rowIndex }) => {\r\n    let { rowKey, selectedRowKeys } = this.state;\r\n    let key = rowData[rowKey];\r\n    let isSelected = false;\r\n\r\n    if (selectedRowKeys.indexOf(key) > -1) {\r\n      isSelected = true;\r\n    }\r\n\r\n    let cls = [];\r\n\r\n    if (rowIndex % 2 === 0) {\r\n      cls.push(\"table__row--even\");\r\n    } else {\r\n      cls.push(\"table__row--odd\");\r\n    }\r\n\r\n    if (isSelected) {\r\n      cls.push(\"table__row--selected\");\r\n    }\r\n\r\n    let tempCls = \"\";\r\n    if (typeof this.props.rowClassName === \"function\") {\r\n      tempCls = this.props.rowClassName(record, index);\r\n    }\r\n\r\n    tempCls && cls.push(tempCls);\r\n\r\n    return cls.join(\" \");\r\n  };\r\n\r\n  tableApi = {\r\n    getSelectedKeys: () => {\r\n      return this.state.selectedRowKeys;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let props = this.props;\r\n\r\n    let expandColumnKey = this.props.expandColumnKey;\r\n\r\n    if (!expandColumnKey && this.props.columns.length > 0) {\r\n      expandColumnKey = this.props.columns[0].dataKey;\r\n    }\r\n\r\n    let { columnDepth, columnList, data, rowHeight } = this.state;\r\n\r\n    let checkboxColumn = columnList.find(d => d.__type === \"__checkbox_column\");\r\n    let orderNumberColumn = columnList.find(\r\n      d => d.__type === \"__ordernumber_column\"\r\n    );\r\n\r\n    if (checkboxColumn) {\r\n      checkboxColumn.cellRenderer = this.checkboxCellRender;\r\n      checkboxColumn.headerRenderer = this.checkboxHeadRender;\r\n    }\r\n\r\n    if (orderNumberColumn) {\r\n      orderNumberColumn.cellRenderer = this.orderNumberCellRender;\r\n    }\r\n\r\n    return (\r\n      <BaseTable\r\n        {...props}\r\n        fixed={true}\r\n        data={data}\r\n        columns={columnList}\r\n        expandColumnKey={expandColumnKey}\r\n        className=\"table__striped\"\r\n        classPrefix=\"table\"\r\n        getScrollbarSize={this.getScrollbarSize}\r\n        expandIconProps={this.expandIconProps}\r\n        components={this.components}\r\n        onRowExpand={this.onRowExpand}\r\n        rowHeight={rowHeight}\r\n        headerHeight={[(columnDepth + 1) * rowHeight]}\r\n        headerRenderer={this.headerRenderer}\r\n        onScroll={this.onScroll}\r\n        rowEventHandlers={this.rowEventHandlers}\r\n        rowClassName={this.rowClassName}\r\n        overscanRowCount={2}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst AutoResizeTable = props => {\r\n  return (\r\n    <AutoResizer>\r\n      {({ width, height }) => (\r\n        <Table {...props} width={width} height={height} />\r\n      )}\r\n    </AutoResizer>\r\n  );\r\n};\r\n\r\nexport default AutoResizeTable;\r\n","import React from \"react\";\r\nimport BaseTable from \"./BaseTable\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n/**\r\n * 表格组件\r\n */\r\nconst Table = props => {\r\n  return <BaseTable {...props} />;\r\n};\r\n\r\nTable.defaultProps = {\r\n  rowKey: \"key\",\r\n  columns: [],\r\n  dataSource: [],\r\n  selectMode: \"single\",\r\n  selectedRowKeys: [],\r\n  disabledSelectKeys: [],\r\n  orderNumber: false,\r\n  checkStrictly: true,\r\n  resizable: true\r\n};\r\n\r\nTable.propTypes = {\r\n  /** 数据行主键字段 */\r\n  rowKey: PropTypes.string.isRequired,\r\n  /** 列 */\r\n  columns: PropTypes.array.isRequired,\r\n  /** 行数据源 */\r\n  dataSource: PropTypes.array,\r\n  /** table实例回调\r\n   * (ins:React.Element) => void\r\n   */\r\n  initRef: PropTypes.func,\r\n  /** 选择模式：多选 单选 不可选择 */\r\n  selectMode: PropTypes.oneOf([\"multiple\", \"single\", \"none\"]),\r\n  /** 选中的行键值 */\r\n  selectedRowKeys: PropTypes.array,\r\n  /** 将被禁用选中的行key */\r\n  disabledSelectKeys: PropTypes.array,\r\n  /**\r\n   * 行选择事件\r\n   *  (selectedKeys,selectedRows,triggerKey) => void\r\n   * */\r\n  onSelectChange: PropTypes.func,\r\n  /** 是否显示序号列 */\r\n  orderNumber: PropTypes.bool,\r\n  /** 列是否可设置宽度，优先级小于column.resizable */\r\n  resizable: PropTypes.bool,\r\n  /** 多选模式是否级联控制checkbox选中状态 */\r\n  checkStrictly: PropTypes.bool,\r\n\r\n  /** 展开的行键值 */\r\n  expandedRowKeys: PropTypes.array,\r\n  /** \r\n   * 行展开事件 \r\n   * (expandedRowKeys:Array) => void\r\n   * */\r\n  onExpandedRowsChange: PropTypes.func,\r\n\r\n  /** \r\n   * 展开时加载children的方法 \r\n   * (row:object) => Promise\r\n   * */\r\n  loadChildrenData: PropTypes.func,\r\n  /** 表格全局id，通过此id记忆表格配置，由于采用localStorage存储配置，需保证id唯一 */\r\n  tableId: function(props, propName, componentName) {\r\n    let count = 0;\r\n    let v = props[propName];\r\n\r\n    if (typeof v !== \"undefined\" && v !== \"\") {\r\n      let tbs = document.getElementsByClassName(\"table-extend\");\r\n\r\n      for (let i = 0, len = tbs.length; i < len; i++) {\r\n        const tb = tbs[i];\r\n        if (tb) {\r\n          const t = tb.getAttribute(\"data-tableid\");\r\n          if (t === v) {\r\n            count = count + 1;\r\n\r\n            if (count > 1) {\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (count > 1) {\r\n      return new Error(\r\n        ` Encountered two table with the same tableId, '${v}'.The tableId must be unique in the whole application.\r\n                  We Recommended set the tableId based on file path.\r\n                  eg: platform/user/index.js =>  platform-user-xxx `\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nexport default Table;\r\n","export function treeToList(arr, idField = \"id\") {\r\n  let treeList = arr || [];\r\n\r\n  //末级节点\r\n  let leafs = [];\r\n\r\n  //根\r\n  let roots = [];\r\n\r\n  //所有节点\r\n  let list = [];\r\n\r\n  let maxDepth = 0;\r\n\r\n  for (let i = 0; i < treeList.length; i++) {\r\n    const d = treeList[i];\r\n\r\n    if (!d) {\r\n      continue;\r\n    }\r\n\r\n    const childrens = d.children || [];\r\n\r\n    d.__depth = 0;\r\n\r\n    list.push(d);\r\n    roots.push(d);\r\n\r\n    if (childrens.length > 0) {\r\n      getChildren(d, 0, []);\r\n    } else {\r\n      leafs.push(d);\r\n    }\r\n  }\r\n\r\n  function getChildren(item, depth, parents) {\r\n    const tempArr = item.children || [];\r\n\r\n    for (let i = 0; i < tempArr.length; i++) {\r\n      const d = tempArr[i];\r\n      const childrens = d.children || [];\r\n\r\n      d.__depth = depth + 1;\r\n      d.__parent = {\r\n        title: item.title,\r\n        key: item[idField],\r\n        width: item.width\r\n      };\r\n\r\n      d.__parents = [].concat(parents).concat([item[idField]]);\r\n\r\n      list.push(d);\r\n\r\n      if (childrens.length > 0) {\r\n        getChildren(d, d.__depth, [].concat(d.__parents));\r\n      } else {\r\n        leafs.push(d);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (leafs.length > 0) {\r\n    let sortedArr = [].concat(leafs);\r\n    sortedArr.sort((a, b) => b.__depth - a.__depth);\r\n    maxDepth = sortedArr[0].__depth;\r\n  }\r\n\r\n  return { list, leafs, roots, maxDepth };\r\n}\r\n\r\nexport function treeToFlatten(arr) {\r\n  let treeList = arr || [];\r\n\r\n  //末级节点\r\n  let leafs = [];\r\n  //根\r\n  let roots = [];\r\n\r\n  //所有节点\r\n  let list = [];\r\n\r\n  for (let i = 0; i < treeList.length; i++) {\r\n    const d = treeList[i];\r\n\r\n    if (!d) {\r\n      continue;\r\n    }\r\n    const childrens = d.children || [];\r\n\r\n    list.push(d);\r\n    roots.push(d);\r\n\r\n    if (childrens.length > 0) {\r\n      getChildren(d, 0);\r\n    } else {\r\n      leafs.push(d);\r\n    }\r\n  }\r\n\r\n  function getChildren(item, depth) {\r\n    const tempArr = item.children || [];\r\n\r\n    for (let i = 0; i < tempArr.length; i++) {\r\n      const d = tempArr[i];\r\n      const childrens = d.children || [];\r\n\r\n      list.push(d);\r\n\r\n      if (childrens.length > 0) {\r\n        getChildren(d, depth + 1);\r\n      } else {\r\n        leafs.push(d);\r\n      }\r\n    }\r\n  }\r\n\r\n  return { list, leafs, roots };\r\n}\r\n\r\nexport function getTreeLeafs(arr) {\r\n  let treeList = arr || [];\r\n  //末级节点\r\n  let leafs = [];\r\n\r\n  for (let i = 0; i < treeList.length; i++) {\r\n    const d = treeList[i];\r\n\r\n    if (!d) {\r\n      continue;\r\n    }\r\n\r\n    const childrens = d.children || [];\r\n\r\n    if (childrens.length > 0) {\r\n      getChildren(d, 0);\r\n    } else {\r\n      leafs.push(d);\r\n    }\r\n  }\r\n\r\n  function getChildren(item, depth) {\r\n    const tempArr = item.children || [];\r\n\r\n    for (let i = 0; i < tempArr.length; i++) {\r\n      const d = tempArr[i];\r\n      const childrens = d.children || [];\r\n\r\n      if (childrens.length > 0) {\r\n        getChildren(d, depth + 1);\r\n      } else {\r\n        leafs.push(d);\r\n      }\r\n    }\r\n  }\r\n\r\n  return leafs;\r\n}\r\n\r\nexport function getDataListWithExpanded(list, expandedKeys = [], rowKey) {\r\n  let arr = [];\r\n\r\n  for (let i = 0; i < list.length; i++) {\r\n    let d = list[i];\r\n\r\n    d.__depth = 0;\r\n\r\n    arr.push(d);\r\n\r\n    if (expandedKeys.indexOf(d[rowKey]) > -1) {\r\n      if (d.children) {\r\n        setChildren(d, 0);\r\n      }\r\n    }\r\n  }\r\n\r\n  function setChildren(c, depth) {\r\n    let cArr = c.children;\r\n    for (let i = 0; i < cArr.length; i++) {\r\n      let d = cArr[i];\r\n      d.__depth = depth + 1;\r\n      arr.push(d);\r\n\r\n      if (expandedKeys.indexOf(d[rowKey]) > -1) {\r\n        if (d.children) {\r\n          setChildren(d, depth + 1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return arr;\r\n}\r\n\r\nexport function treeFilter(arr, fn) {\r\n  let treeList = arr || [];\r\n\r\n  //根\r\n  let roots = [];\r\n\r\n  for (let i = 0; i < treeList.length; i++) {\r\n    const d = treeList[i];\r\n\r\n    let bl = fn(d, i);\r\n\r\n    if (bl === true) {\r\n      if (d.children && d.children.length > 0) {\r\n        d.children = getChildren(d);\r\n      }\r\n\r\n      roots.push(d);\r\n    }\r\n  }\r\n\r\n  function getChildren(node) {\r\n    const tempArr = node.children || [];\r\n\r\n    const nextChildrens = [];\r\n\r\n    for (let i = 0; i < tempArr.length; i++) {\r\n      const d = tempArr[i];\r\n\r\n      let bl = fn(d, i);\r\n\r\n      if (bl === true) {\r\n        if (d.children && d.children.length > 0) {\r\n          d.children = getChildren(d);\r\n        }\r\n\r\n        nextChildrens.push(d);\r\n      }\r\n    }\r\n\r\n    return nextChildrens;\r\n  }\r\n\r\n  return roots;\r\n}\r\n\r\nexport function getScrollbarWidth() {\r\n  var userAgent = navigator.userAgent; //取得浏览器的userAgent字符串\r\n\r\n  if (userAgent.indexOf(\"Chrome\") > -1) {\r\n    return 6;\r\n  }\r\n\r\n  var oP = document.createElement(\"p\"),\r\n    styles = {\r\n      width: \"100px\",\r\n      height: \"100px\",\r\n      overflowY: \"scroll\"\r\n    },\r\n    i,\r\n    scrollbarWidth;\r\n\r\n  for (i in styles) {\r\n    oP.style[i] = styles[i];\r\n  }\r\n  document.body.appendChild(oP);\r\n  scrollbarWidth = oP.offsetWidth - oP.clientWidth;\r\n  oP.remove();\r\n\r\n  return scrollbarWidth;\r\n}\r\n\r\n/**\r\n * 添加选中行\r\n * @key {Array} 行key\r\n * @selectedRowKeys {Array} 当前选中的行key\r\n * @rowKey {string} 数据行主键key字段名\r\n * @flatData {Array} 展平的表格数据\r\n * @halfCheckedKeys {Array} 当前半选状态的行key\r\n */\r\nexport function addCheckedKey({\r\n  key,\r\n  selectedRowKeys,\r\n  rowKey,\r\n  flatData,\r\n  halfCheckedKeys\r\n}) {\r\n  let nextKeys = [].concat(selectedRowKeys);\r\n  let nextHalfCheckedKeys = [].concat(halfCheckedKeys);\r\n  let row = flatData.find(d => d[rowKey] === key);\r\n  let parentKeys = [].concat(row.__parents || []);\r\n\r\n  if (selectedRowKeys.indexOf(key) === -1) {\r\n    let halfIndex = nextHalfCheckedKeys.indexOf(key);\r\n    if (halfIndex > -1) {\r\n      nextHalfCheckedKeys.splice(halfIndex, 1);\r\n    }\r\n    nextKeys.push(key);\r\n  }\r\n\r\n  //父级半选的key\r\n  let parentHalfCheckedKeys = [];\r\n\r\n  //子级key\r\n  let childrenSelectedKeys = [];\r\n\r\n  flatData.filter(d => {\r\n    let pArr = d.__parents || [];\r\n    let bl = pArr.indexOf(key) > -1;\r\n    let ck = d[rowKey];\r\n    if (bl) {\r\n      if (selectedRowKeys.indexOf(ck) === -1) {\r\n        childrenSelectedKeys.push(ck);\r\n      }\r\n    }\r\n    return bl;\r\n  });\r\n\r\n  nextKeys = nextKeys.concat(childrenSelectedKeys);\r\n\r\n  for (let i = parentKeys.length - 1; i >= 0; i--) {\r\n    let p = parentKeys[i];\r\n\r\n    let pNode = flatData.find(d => {\r\n      return d[rowKey] === p;\r\n    });\r\n\r\n    let childrens = [];\r\n    if (pNode) {\r\n      childrens = pNode.children || [];\r\n    }\r\n\r\n    //子级是否全被选中\r\n    let childrensAllChecked = true;\r\n\r\n    for (let i = 0; i < childrens.length; i++) {\r\n      const cKey = childrens[i][rowKey];\r\n      if (nextKeys.indexOf(cKey) === -1) {\r\n        childrensAllChecked = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    //子级全被选中，则勾选其父节点\r\n    if (childrensAllChecked === true) {\r\n      if (nextKeys.indexOf(p) === -1) {\r\n        nextKeys.push(p);\r\n      }\r\n\r\n      //取消半选中父级\r\n      let k = nextHalfCheckedKeys.findIndex(d => d === p);\r\n      if (k > -1) {\r\n        nextHalfCheckedKeys.splice(k, 1);\r\n      }\r\n    } else {\r\n      //未全选，则半选父节点\r\n      if (halfCheckedKeys.indexOf(p) === -1) {\r\n        parentHalfCheckedKeys.push(p);\r\n\r\n        //取消选中父级\r\n        let j = nextKeys.findIndex(d => d === p);\r\n        if (j > -1) {\r\n          nextKeys.splice(j, 1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  let newHalflCheckedKeys = nextHalfCheckedKeys.concat(parentHalfCheckedKeys);\r\n\r\n  return {\r\n    selectedRowKeys: nextKeys,\r\n    halfCheckedKeys: newHalflCheckedKeys\r\n  };\r\n}\r\n\r\nexport function removeCheckedKey({\r\n  key,\r\n  selectedRowKeys,\r\n  rowKey,\r\n  flatData,\r\n  halfCheckedKeys\r\n}) {\r\n  let nextKeys = [].concat(selectedRowKeys);\r\n  let nextHalfCheckedKeys = [].concat(halfCheckedKeys);\r\n\r\n  let row = flatData.find(d => d[rowKey] === key);\r\n\r\n  let parentKeys = [].concat(row.__parents || []);\r\n\r\n  //父级半选的key\r\n  let parentHalfCheckedKeys = [];\r\n\r\n  //子级key\r\n  let childrenKeys = [];\r\n\r\n  flatData.filter(d => {\r\n    let pArr = d.__parents || [];\r\n    let bl = pArr.indexOf(key) > -1;\r\n    if (bl) {\r\n      childrenKeys.push(d[rowKey]);\r\n    }\r\n    return bl;\r\n  });\r\n\r\n  //移除子级\r\n  if (childrenKeys.length > 0) {\r\n    for (let i = 0; i < childrenKeys.length; i++) {\r\n      const k = childrenKeys[i];\r\n\r\n      //移除选中\r\n      let j = nextKeys.findIndex(d => d === k);\r\n      if (j > -1) {\r\n        nextKeys.splice(j, 1);\r\n      }\r\n\r\n      //移除半选\r\n      let m = nextHalfCheckedKeys.findIndex(d => d === k);\r\n      if (m > -1) {\r\n        nextHalfCheckedKeys.splice(m, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  //移除本级选中\r\n  let i = nextKeys.findIndex(d => d === key);\r\n  if (i > -1) {\r\n    nextKeys.splice(i, 1);\r\n  }\r\n\r\n  //移除本级半选\r\n  let j = nextHalfCheckedKeys.findIndex(d => d === key);\r\n  if (j > -1) {\r\n    nextHalfCheckedKeys.splice(j, 1);\r\n  }\r\n\r\n  for (let i = parentKeys.length - 1; i >= 0; i--) {\r\n    let p = parentKeys[i];\r\n    let childrens = flatData.filter(d => {\r\n      return (d.__parents || []).indexOf(p) > -1;\r\n    });\r\n\r\n    //子级是否全未选中\r\n    let childrensAllUnChecked = true;\r\n\r\n    for (let i = 0; i < childrens.length; i++) {\r\n      const cKey = childrens[i][rowKey];\r\n      if (nextKeys.indexOf(cKey) > -1) {\r\n        childrensAllUnChecked = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    //子级全未选中，则取消勾选其父节点\r\n    if (childrensAllUnChecked === true) {\r\n      //取消选中父级\r\n      let j = nextKeys.findIndex(d => d === p);\r\n      if (j > -1) {\r\n        nextKeys.splice(j, 1);\r\n      }\r\n\r\n      //取消半选父级\r\n      let k = nextHalfCheckedKeys.findIndex(d => d === p);\r\n      if (k > -1) {\r\n        nextHalfCheckedKeys.splice(k, 1);\r\n      }\r\n    } else {\r\n      //否则半选父节点\r\n      if (halfCheckedKeys.indexOf(p) === -1) {\r\n        parentHalfCheckedKeys.push(p);\r\n\r\n        //取消选中父级\r\n        let j = nextKeys.findIndex(d => d === p);\r\n        if (j > -1) {\r\n          nextKeys.splice(j, 1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  let newHalflCheckedKeys = nextHalfCheckedKeys.concat(parentHalfCheckedKeys);\r\n\r\n  return {\r\n    selectedRowKeys: nextKeys,\r\n    halfCheckedKeys: newHalflCheckedKeys\r\n  };\r\n}\r\n\r\n/**\r\n * 添加选中行\r\n * @key {Array} 行key\r\n * @selectedRowKeys {Array} 当前选中的行key\r\n * @rowKey {string} 数据行主键key字段名\r\n * @flatData {Array} 展平的表格数据\r\n * @halfCheckedKeys {Array} 当前半选状态的行key\r\n * @disabledSelectKeys {Array} 禁用选择的数据行key\r\n */\r\nexport function addCheckedKeyWithDisabled({\r\n  key,\r\n  selectedRowKeys,\r\n  rowKey,\r\n  flatData,\r\n  halfCheckedKeys,\r\n  disabledSelectKeys = []\r\n}) {\r\n  let nextKeys = [].concat(selectedRowKeys);\r\n  let nextHalfCheckedKeys = [].concat(halfCheckedKeys);\r\n  let row = flatData.find(d => d[rowKey] === key);\r\n  let parentKeys = [].concat(row.__parents || []);\r\n\r\n  /** 是否允许被选择 */\r\n  function isEnabled(itemKey) {\r\n    return disabledSelectKeys.indexOf(itemKey) === -1;\r\n  }\r\n\r\n  //本级是否允许选择\r\n  if (isEnabled(key) === false) {\r\n    return {\r\n      selectedRowKeys,\r\n      halfCheckedKeys\r\n    };\r\n  }\r\n\r\n  //父级是否允许选择\r\n  let parentEnableSelect = true;\r\n  for (let i = 0; i < parentKeys.length; i++) {\r\n    const pk = parentKeys[i];\r\n    if (isEnabled(pk) === false) {\r\n      parentEnableSelect = false;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (parentEnableSelect === false) {\r\n    return {\r\n      selectedRowKeys,\r\n      halfCheckedKeys\r\n    };\r\n  }\r\n\r\n  if (selectedRowKeys.indexOf(key) === -1) {\r\n    let halfIndex = nextHalfCheckedKeys.indexOf(key);\r\n    if (halfIndex > -1) {\r\n      nextHalfCheckedKeys.splice(halfIndex, 1);\r\n    }\r\n\r\n    nextKeys.push(key);\r\n  }\r\n\r\n  //父级半选的key\r\n  let parentHalfCheckedKeys = [];\r\n\r\n  //子级key\r\n  let childrenSelectedKeys = [];\r\n\r\n  flatData.filter(d => {\r\n    let pArr = d.__parents || [];\r\n    let bl = pArr.indexOf(key) > -1;\r\n    let ck = d[rowKey];\r\n    if (bl) {\r\n      if (selectedRowKeys.indexOf(ck) === -1) {\r\n        //子级是否允许被选择\r\n        let isEnableSelect = isEnabled(ck);\r\n\r\n        for (let i = 0; i < pArr.length; i++) {\r\n          const cpk = pArr[i];\r\n          if (isEnabled(cpk) === false) {\r\n            isEnableSelect = false;\r\n            break;\r\n          }\r\n        }\r\n\r\n        isEnableSelect && childrenSelectedKeys.push(ck);\r\n      }\r\n    }\r\n    return bl;\r\n  });\r\n\r\n  nextKeys = nextKeys.concat(childrenSelectedKeys);\r\n\r\n  for (let i = parentKeys.length - 1; i >= 0; i--) {\r\n    let p = parentKeys[i];\r\n\r\n    let pNode = flatData.find(d => {\r\n      return d[rowKey] === p;\r\n    });\r\n\r\n    let childrens = [];\r\n    if (pNode) {\r\n      childrens = pNode.children || [];\r\n    }\r\n\r\n    //子级是否全被选中\r\n    let childrensAllChecked = true;\r\n\r\n    for (let i = 0; i < childrens.length; i++) {\r\n      const cKey = childrens[i][rowKey];\r\n      if (isEnabled(cKey) && nextKeys.indexOf(cKey) === -1) {\r\n        childrensAllChecked = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    //子级全被选中，则勾选其父节点\r\n    if (childrensAllChecked === true) {\r\n      if (nextKeys.indexOf(p) === -1) {\r\n        isEnabled(p) && nextKeys.push(p);\r\n      }\r\n\r\n      //取消半选中父级\r\n      let k = nextHalfCheckedKeys.findIndex(d => d === p);\r\n      if (k > -1) {\r\n        nextHalfCheckedKeys.splice(k, 1);\r\n      }\r\n    } else {\r\n      //未全选，则半选父节点\r\n      if (halfCheckedKeys.indexOf(p) === -1) {\r\n        isEnabled(p) && parentHalfCheckedKeys.push(p);\r\n\r\n        //取消选中父级\r\n        let j = nextKeys.findIndex(d => d === p);\r\n        if (j > -1) {\r\n          nextKeys.splice(j, 1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  let newHalflCheckedKeys = nextHalfCheckedKeys.concat(parentHalfCheckedKeys);\r\n\r\n  return {\r\n    selectedRowKeys: nextKeys,\r\n    halfCheckedKeys: newHalflCheckedKeys\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport cloneDeep from \"lodash/cloneDeep\";\r\nimport merge from \"lodash/merge\";\r\nimport Table from \"../base/index\";\r\nimport { treeToFlatten as treeToList, treeFilter } from \"../base/utils\";\r\nimport Tooltip from \"antd/lib/tooltip\";\r\nimport Button from \"antd/lib/button\";\r\nimport message from \"antd/lib/message\";\r\nimport Popconfirm from \"antd/lib/popconfirm\";\r\nimport Menu from \"antd/lib/menu\";\r\nimport Dropdown from \"antd/lib/dropdown\";\r\nimport Icon from \"antd/lib/icon\";\r\nimport Layout from \"antd/lib/layout\";\r\nconst { Content, Header } = Layout;\r\n\r\n/**\r\n * 可编辑表格\r\n */\r\nclass EditableTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            rowKey: props.rowKey,\r\n            propsOriginal: {},\r\n            sourceColumns: [],\r\n            columns: [],\r\n            data: [],\r\n            dataList: [],\r\n            sourceData: [],\r\n            changedRows: [],\r\n            isEditAll: false,\r\n            isAdding: false,\r\n            isAddingRange: false,\r\n            addedData: [],\r\n            isEditing: false,\r\n            editKeys: [],\r\n            editSaveLoading: false,\r\n            deleteLoading: false,\r\n            dataControled: false,\r\n            //编辑前的原始数据，数据受控时，必须传入此值，当编辑被取消时，此值会覆盖值表格数据\r\n            rawData: []\r\n        };\r\n    }\r\n\r\n    rowsAttributes = [];\r\n    tableRef = null;\r\n    initRef = inst => {\r\n        if (typeof this.props.initRef === \"function\") {\r\n            this.props.initRef(inst);\r\n        }\r\n        this.tableRef = inst;\r\n    };\r\n\r\n    isEditing = () => {\r\n        return this.state.isEditing;\r\n    };\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        let nextState = {};\r\n\r\n        //是否让数据受控\r\n        nextState.dataControled = nextProps.dataControled || false;\r\n        //\r\n        let columns = cloneDeep(nextProps.columns || []);\r\n        let columnList = treeToList(columns).list;\r\n        nextState.columns = columns;\r\n        nextState.columnList = columnList;\r\n\r\n        let data = nextProps.data || nextProps.dataSource;\r\n\r\n        if (prevState.propsOriginal !== nextProps) {\r\n            nextState.propsOriginal = nextProps;\r\n\r\n            // newState.isEditAll = false;\r\n            // newState.editKeys = [];\r\n            nextState.changedRows = [];\r\n\r\n            if (prevState.dataControled === true) {\r\n                let newData = data || []; //data || [];//\r\n                let dataList = treeToList(newData).list;\r\n                nextState.dataList = dataList;\r\n                nextState.data = newData;\r\n                nextState.sourceData = cloneDeep(newData);\r\n                nextState.rawData = cloneDeep(nextProps.rawData || []);\r\n            } else {\r\n                if (prevState.sourceData !== data) {\r\n                    let newData = data || [];\r\n                    let dataList = treeToList(newData).list;\r\n                    nextState.dataList = dataList;\r\n                    nextState.data = newData;\r\n                    nextState.sourceData = cloneDeep(newData);\r\n                    nextState.rawData = cloneDeep(nextProps.rawData || []);\r\n                }\r\n            }\r\n        }\r\n        return nextState;\r\n    }\r\n\r\n    updateComponent = () => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    delayTimer = null;\r\n    delayUpdate = fn => {\r\n        let delay = 300;\r\n\r\n        if (typeof this.props.validateDelay === \"number\") {\r\n            delay = this.props.validateDelay;\r\n        }\r\n\r\n        if (this.delayTimer) {\r\n            clearTimeout(this.delayTimer);\r\n        }\r\n\r\n        if (typeof fn === \"function\") {\r\n            this.delayTimer = setTimeout(() => {\r\n                fn();\r\n                this.updateComponent();\r\n            }, delay);\r\n        } else {\r\n            this.delayTimer = setTimeout(this.updateComponent, delay);\r\n        }\r\n    };\r\n\r\n    isMouseFocus = false;\r\n\r\n    changedRows = [];\r\n    addToChanged = newRow => {\r\n        let rowKey = this.props.rowKey;\r\n        let changedRows = this.changedRows;\r\n        let validateTrigger = this.props.validateTrigger;\r\n\r\n        let i = changedRows.findIndex(d => d[rowKey] === newRow[rowKey]);\r\n\r\n        if (i >= 0) {\r\n            changedRows[i] = newRow;\r\n        } else {\r\n            changedRows.push(newRow);\r\n        }\r\n\r\n        this.changedRows = changedRows;\r\n\r\n        // 当change时立即验证行\r\n        if (validateTrigger === \"onChange\") {\r\n            this.validateRow(newRow);\r\n            this.updateComponent();\r\n            // this.delayUpdate(() => {\r\n            //    // this.validateRow(newRow);\r\n            // });\r\n        }\r\n\r\n        //需要调用更新，否则editor onchange改变了其它字段值后，最新的值无法传递给editor回调中，因为未调用editor\r\n        //this.updateComponent();\r\n    };\r\n\r\n    editChange = (newValues = {}, row, index) => {\r\n        let { data, addedData } = this.state;\r\n\r\n        let rowKey = this.props.rowKey;\r\n\r\n        // let dataList = data.concat(addedData);\r\n\r\n        let arr = treeToList(data).list;\r\n\r\n        let k = row[rowKey];\r\n        let i = arr.findIndex(d => d[rowKey] === k);\r\n\r\n        if (i > -1) {\r\n            let changedRow = {};\r\n\r\n            Object.keys(newValues).forEach(k => {\r\n                arr[i][k] = newValues[k];\r\n                changedRow = Object.assign({}, arr[i]);\r\n                changedRow[k] = newValues[k];\r\n                //row[k] = newValues[k];\r\n            });\r\n\r\n            //this.setState({});\r\n\r\n            this.addToChanged(arr[i]);\r\n        }\r\n\r\n        let j = addedData.findIndex(d => d[rowKey] === k);\r\n\r\n        if (j > -1) {\r\n            Object.keys(newValues).forEach(k => {\r\n                addedData[j][k] = newValues[k];\r\n            });\r\n\r\n            this.addToChanged(addedData[j]);\r\n        }\r\n    };\r\n\r\n    setRowAttr = (row, attr = {}) => {\r\n        let rowKey = this.props.rowKey;\r\n        let key = row[rowKey];\r\n\r\n        let attrs = this.rowsAttributes || [];\r\n\r\n        let i = attrs.findIndex(d => d[rowKey] === key);\r\n\r\n        if (i > -1) {\r\n            let fRow = attrs[i];\r\n\r\n            if (typeof fRow.__attribute === \"undefined\") {\r\n                fRow.__attribute = attr;\r\n            } else {\r\n                fRow.__attribute = merge({}, fRow.__attribute, attr);\r\n            }\r\n        } else {\r\n            let newAttr = Object.assign({}, row);\r\n            newAttr.__attribute = attr;\r\n            attrs.push(newAttr);\r\n        }\r\n\r\n        this.rowsAttributes = attrs;\r\n    };\r\n\r\n    getRowAttr = row => {\r\n        let rowKey = this.props.rowKey;\r\n        let key = row[rowKey];\r\n\r\n        let attrs = this.rowsAttributes || [];\r\n        let attr = {};\r\n\r\n        let i = attrs.findIndex(d => d[rowKey] === key);\r\n        if (i > -1) {\r\n            attr = attrs[i] || {};\r\n        }\r\n\r\n        return Object.assign({}, attr.__attribute || {});\r\n    };\r\n\r\n    getValidate = (row, key) => {\r\n        let attr = this.getRowAttr(row);\r\n        let r = (attr[\"validation\"] || {})[key] || {};\r\n\r\n        return r;\r\n    };\r\n\r\n    //进行异步验证的promise\r\n    validatorAsync = [];\r\n\r\n    validateRow = row => {\r\n        let { columnList: columns } = this.state;\r\n\r\n        let bl = true;\r\n\r\n        let validation = {};\r\n\r\n        for (let i = 0; i < columns.length; i++) {\r\n            const c = columns[i];\r\n            const ck = c.dataIndex;\r\n\r\n            if (typeof c.validator === \"function\") {\r\n                var v = c.validator(row[ck], row);\r\n\r\n                if (v.constructor.name === \"Promise\") {\r\n                    this.validatorAsync.push(\r\n                        new Promise((resolve, reject) => {\r\n                            v.then(d => {\r\n                                resolve({ validation: d, row, columnKey: ck });\r\n                            });\r\n\r\n                            v.catch(e => {\r\n                                reject(e);\r\n                            });\r\n                        })\r\n                    );\r\n                } else {\r\n                    validation[ck] = {\r\n                        valid: v.valid,\r\n                        msg: v.valid ? \"\" : v.message || \"输入不正确\"\r\n                    };\r\n\r\n                    if (!v.valid) bl = false;\r\n\r\n                    this.setRowAttr(row, {\r\n                        validation\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        return bl;\r\n    };\r\n\r\n    //异步验证数据行\r\n    validateAsync = rows => {\r\n        let arr = rows || [];\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let bl = true;\r\n\r\n            for (let i = 0; i < arr.length; i++) {\r\n                const r = arr[i];\r\n                let temp = this.validateRow(r);\r\n                if (temp === false) {\r\n                    bl = false;\r\n                }\r\n            }\r\n\r\n            if (this.validatorAsync.length > 0) {\r\n                Promise.all(this.validatorAsync).then(datas => {\r\n                    datas.forEach(d => {\r\n                        let v = d.validation;\r\n\r\n                        if (v.valid === false) {\r\n                            bl = false;\r\n                        }\r\n\r\n                        let validation = {};\r\n\r\n                        validation[d.columnKey] = {\r\n                            valid: v.valid,\r\n                            msg: v.valid ? \"\" : v.message\r\n                        };\r\n\r\n                        this.setRowAttr(d.row, {\r\n                            validation\r\n                        });\r\n                    });\r\n\r\n                    this.validatorAsync = [];\r\n                    this.forceUpdate();\r\n\r\n                    resolve(bl);\r\n                });\r\n            } else {\r\n                if (arr.length > 0) {\r\n                    this.forceUpdate();\r\n                }\r\n\r\n                resolve(bl);\r\n            }\r\n        });\r\n    };\r\n\r\n    //验证改变的数据行\r\n    validate = async () => {\r\n        let bl = true;\r\n        let arr = this.changedRows;\r\n\r\n        // let { data, addedData } = this.state;\r\n\r\n        // let arr = data.concat(addedData);\r\n\r\n        bl = await this.validateAsync(arr);\r\n\r\n        return bl;\r\n    };\r\n\r\n    //验证当前所有数据行\r\n    validateAll = async () => {\r\n        let bl = true;\r\n        let { data, addedData, editKeys, isEditAll } = this.state;\r\n        let rowKey = this.props.rowKey;\r\n\r\n        let allData = data.concat(addedData);\r\n\r\n        let arr = [];\r\n\r\n        if (isEditAll === true) {\r\n            arr = allData;\r\n        } else {\r\n            arr = allData.filter(d => {\r\n                return editKeys.indexOf(d[rowKey]) > -1;\r\n            });\r\n        }\r\n\r\n        bl = await this.validateAsync(arr);\r\n        // this.forceUpdate();\r\n        return bl;\r\n    };\r\n\r\n    editorInstance = [];\r\n    setEditorIns = (row, column, ins) => {\r\n \r\n        if (ins === null) {\r\n            return;\r\n        }\r\n\r\n        let rowKey = row[this.props.rowKey];\r\n        let columnKey = column.dataIndex;\r\n\r\n        let editorInstance = [].concat(this.editorInstance);\r\n\r\n        let ed = this.editorInstance.find(\r\n            d => d.rowKey === rowKey && d.columnKey === columnKey\r\n        );\r\n\r\n        if (ed) {\r\n            ed.editorInstance = ins;\r\n        } else {\r\n            editorInstance.push({\r\n                columnKey: columnKey,\r\n                rowKey: rowKey,\r\n                editorInstance: ins\r\n            });\r\n        }\r\n\r\n        \r\n\r\n        this.editorInstance = editorInstance;\r\n    };\r\n\r\n    getEditorIns = (rowKey, columnKey) => {\r\n        let ed = this.editorInstance.find(\r\n            d => d.rowKey === rowKey && d.columnKey === columnKey\r\n        );\r\n\r\n        if (ed) {\r\n            return ed.editorInstance;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    formatColumns = () => {\r\n        let { columns, editKeys, isEditAll, isEditing } = this.state;\r\n        let rowKey = this.props.rowKey;\r\n\r\n        let arr = columns;\r\n\r\n        if (isEditing === true) {\r\n            arr = treeFilter(columns, d => {\r\n                if (d.editingVisible === true) {\r\n                    d.hidden = false;\r\n                }\r\n                return d.editingVisible !== false;\r\n            });\r\n        }\r\n\r\n        let cols = treeToList(arr).leafs;\r\n\r\n        if (isEditAll === true) {\r\n            cols.forEach(d => {\r\n                let editor = d.editor;\r\n\r\n                if (typeof editor === \"function\") {\r\n                    let renderFn = d.render;\r\n\r\n                    d.render = (value, row, index) => {\r\n                        let renderProps = null;\r\n                        let newRenderProps = {};\r\n\r\n                        if (typeof renderFn === \"function\") {\r\n                            renderProps = renderFn(value, row, index);\r\n                        }\r\n\r\n                        if (\r\n                            renderProps &&\r\n                            renderProps.props &&\r\n                            renderProps.props.colSpan === 0\r\n                        ) {\r\n                            return renderProps;\r\n                        }\r\n\r\n                        let { valid, msg } =\r\n                            this.getValidate(row, d.dataIndex) || {};\r\n\r\n                        let ed = editor(\r\n                            value,\r\n                            row,\r\n                            index,\r\n                            values => {\r\n                                this.editChange(values, row, index);\r\n                            },\r\n                            ins => {\r\n                                this.setEditorIns(row, d, ins);\r\n                            },\r\n                            this.validate\r\n                        );\r\n\r\n                        let c = (\r\n                            <span\r\n                                style={{ verticalAlign: \"middle\" }}\r\n                                className={valid === false ? \"has-error\" : \"\"}\r\n                                onClick={e => this.onClick(e, row, d)}\r\n                                onKeyDown={e => this.onKeyDown(e, row, d)}\r\n                            >\r\n                                <Tooltip placement=\"topLeft\" title={msg}>\r\n                                    {ed}\r\n                                </Tooltip>\r\n                            </span>\r\n                        );\r\n\r\n                        newRenderProps.children = c;\r\n\r\n                        if (renderProps && renderProps.props) {\r\n                            newRenderProps.props = renderProps.props;\r\n                        }\r\n\r\n                        return newRenderProps;\r\n                    };\r\n                }\r\n            });\r\n        } else if (editKeys.length > 0) {\r\n            cols.forEach(d => {\r\n                if (typeof d.editingVisible === \"boolean\") {\r\n                    d.hidden = !d.editingVisible;\r\n                }\r\n\r\n                let editor = d.editor;\r\n\r\n                if (typeof editor === \"function\") {\r\n                    let renderFn = d.render;\r\n\r\n                    d.render = (value, row, index) => {\r\n                        let renderProps = null;\r\n                        let newRenderProps = {};\r\n\r\n                        if (typeof renderFn === \"function\") {\r\n                            renderProps = renderFn(value, row, index);\r\n                        }\r\n\r\n                        if (\r\n                            renderProps &&\r\n                            renderProps.props &&\r\n                            renderProps.props.colSpan === 0\r\n                        ) {\r\n                            return renderProps;\r\n                        }\r\n\r\n                        let bl =\r\n                            editKeys.findIndex(k => k === row[rowKey]) > -1;\r\n\r\n                        if (bl) {\r\n                            let { valid, msg } =\r\n                                this.getValidate(row, d.dataIndex) || {};\r\n\r\n                            let ed = editor(\r\n                                value,\r\n                                row,\r\n                                index,\r\n                                values => {\r\n                                    this.editChange(values, row, index);\r\n                                },\r\n                                ins => {\r\n                                    this.setEditorIns(row, d, ins);\r\n                                }\r\n                            );\r\n\r\n                            let c = (\r\n                                <span\r\n                                    style={{ verticalAlign: \"middle\" }}\r\n                                    className={\r\n                                        valid === false ? \"has-error\" : \"\"\r\n                                    }\r\n                                    onClick={e => this.onClick(e, row, d)}\r\n                                    onKeyDown={e => this.onKeyDown(e, row, d)}\r\n                                >\r\n                                    <Tooltip placement=\"topLeft\" title={msg}>\r\n                                        {ed}\r\n                                    </Tooltip>\r\n                                </span>\r\n                            );\r\n\r\n                            newRenderProps.children = c;\r\n\r\n                            if (renderProps && renderProps.props) {\r\n                                newRenderProps.props = renderProps.props;\r\n                            }\r\n\r\n                            return newRenderProps;\r\n                        } else {\r\n                            if (typeof renderFn === \"function\") {\r\n                                return renderFn(value, row, index);\r\n                            }\r\n                            return value;\r\n                        }\r\n                    };\r\n                }\r\n            });\r\n        }\r\n\r\n        return cloneDeep(arr);\r\n    };\r\n\r\n    toggleSettingColumns = bl => {\r\n        // bl === true ? this.tableRef.enableTableSetting() : this.tableRef.disableTableSetting();\r\n    };\r\n\r\n    editAll = () => {\r\n        this.toggleSettingColumns(false);\r\n        this.setState({ isEditAll: true, isEditing: true, editKeys: [] });\r\n    };\r\n\r\n    endEdit = callBack => {\r\n        this.toggleSettingColumns(true);\r\n\r\n        let arr = [].concat(this.changedRows);\r\n\r\n        this.changedRows = [];\r\n\r\n        let nextState = {\r\n            editSaveLoading: false,\r\n            isEditAll: false,\r\n            isAdding: false,\r\n            isAddingRange: false,\r\n            isEditing: false,\r\n            editKeys: [],\r\n            changedRows: [],\r\n            addedData: [],\r\n            sourceData: cloneDeep(this.state.data)\r\n        };\r\n\r\n        if (typeof callBack === \"function\") {\r\n            this.setState(nextState, () => {\r\n                callBack(arr, this.state.data, this.editType);\r\n            });\r\n        } else {\r\n            this.setState(nextState);\r\n        }\r\n    };\r\n\r\n    //取消编辑\r\n    cancelEdit = () => {\r\n        if (typeof this.props.onCancel === \"function\") {\r\n            this.props.onCancel();\r\n        }\r\n\r\n        this.reset();\r\n    };\r\n\r\n    editRows = keys => {\r\n        this.setState({ isEditAll: false, editKeys: keys, isEditing: true });\r\n    };\r\n\r\n    getChangedRows = () => {\r\n        return this.changedRows;\r\n    };\r\n\r\n    getRows = () => {\r\n        return this.state.data;\r\n    };\r\n\r\n    addRow = (r = {}, editting = true) => {\r\n        this.addRows([r], editting);\r\n    };\r\n\r\n    addRows = (arr = [], editting = true) => {\r\n        let rowKey = this.props.rowKey;\r\n        let { addedData, editKeys } = this.state;\r\n\r\n        let rowKeys = [];\r\n        let newEditKeys = [];\r\n        let newAddedData = [];\r\n\r\n        this.editType = \"add\";\r\n\r\n        let rows = [];\r\n\r\n        let rowTemplate = {};\r\n\r\n        arr.forEach((d, i) => {\r\n            let k = d[rowKey];\r\n\r\n            if (!k) {\r\n                k = d[rowKey] = \"__id_\" + i + \"_\" + new Date().getTime();\r\n            }\r\n\r\n            rows.push(Object.assign({}, rowTemplate, d));\r\n            rowKeys.push(k);\r\n        });\r\n\r\n        newEditKeys = editKeys.concat(rowKeys);\r\n        newAddedData = [].concat(rows);\r\n\r\n        if (editting === false) {\r\n            this.setState({\r\n                isAddingRange: true,\r\n                addedData: newAddedData\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isAddingRange: true,\r\n                isEditing: true,\r\n                addedData: newAddedData,\r\n                editKeys: newEditKeys\r\n            });\r\n        }\r\n    };\r\n\r\n    setRows = (arr = []) => {\r\n        this.changedRows = [];\r\n        this.setState({\r\n            data: arr,\r\n            editKeys: [],\r\n            isEditAll: false,\r\n            changedRows: []\r\n        });\r\n    };\r\n\r\n    reset = () => {\r\n        this.toggleSettingColumns(true);\r\n        let data = cloneDeep(this.state.sourceData);\r\n\r\n        let nextState = {\r\n            isEditAll: false,\r\n            isAdding: false,\r\n            isAddingRange: false,\r\n            isEditing: false,\r\n            editKeys: [],\r\n            data: data,\r\n            changedRows: [],\r\n            addedData: []\r\n        };\r\n\r\n        this.changedRows = [];\r\n        this.setState(nextState);\r\n    };\r\n\r\n    focusInput = editor => {\r\n        if (!editor) {\r\n            return;\r\n        }\r\n\r\n        if (editor.input && typeof editor.input.select === \"function\") {\r\n            setTimeout(() => {\r\n                editor.input.select();\r\n            }, 1);\r\n        } else if (typeof editor.focus === \"function\") {\r\n            editor.focus();\r\n        } else {\r\n            let el = ReactDom.findDOMNode(editor);\r\n\r\n            if (el) {\r\n                let inputEl = el.getElementsByTagName(\"input\")[0];\r\n                inputEl && inputEl.focus();\r\n                el.focus();\r\n            }\r\n        }\r\n    };\r\n\r\n    getNextEditor = (keyCode, row, column) => {\r\n        let nextEditor = null;\r\n\r\n        let key = this.props.rowKey;\r\n\r\n        let rowKey = row[key];\r\n\r\n        let columnKey = column.dataIndex;\r\n\r\n        let { data, addedData, columns } = this.state;\r\n\r\n        let rows = [].concat(data).concat(addedData);\r\n\r\n        let arr = treeToList(columns).leafs;\r\n\r\n        if (keyCode === 38) {\r\n            //top\r\n\r\n            let currIndex = rows.findIndex(d => d[key] === rowKey);\r\n            let nextRow = rows[currIndex - 1];\r\n\r\n            if (nextRow) {\r\n                nextEditor = this.getEditorIns(nextRow[key], columnKey);\r\n            }\r\n        }\r\n\r\n        if (keyCode === 40) {\r\n            //bottom\r\n\r\n            let currIndex = rows.findIndex(d => d[key] === rowKey);\r\n            let nextRow = rows[currIndex + 1];\r\n\r\n            if (nextRow) {\r\n                nextEditor = this.getEditorIns(nextRow[key], columnKey);\r\n            }\r\n\r\n        }\r\n\r\n        if (keyCode === 37) {\r\n            //left\r\n\r\n            let currColumnIndex = arr.findIndex(\r\n                d => d[\"dataIndex\"] === columnKey\r\n            );\r\n            let nextColumn = arr[currColumnIndex - 1];\r\n\r\n            if (nextColumn) {\r\n                nextEditor = this.getEditorIns(rowKey, nextColumn[\"dataIndex\"]);\r\n            }\r\n        }\r\n\r\n        if (keyCode === 39 || keyCode === 13) {\r\n            //right\r\n\r\n            let currColumnIndex = arr.findIndex(\r\n                d => d[\"dataIndex\"] === columnKey\r\n            );\r\n            let nextColumn = arr[currColumnIndex + 1];\r\n\r\n            if (nextColumn) {\r\n                nextEditor = this.getEditorIns(rowKey, nextColumn[\"dataIndex\"]);\r\n            }\r\n        }\r\n\r\n        return nextEditor;\r\n    };\r\n\r\n    onKeyDown = (e, row, column) => {\r\n        // e.preventDefault();\r\n        //e.stopPropagation();\r\n\r\n        let key = this.props.rowKey;\r\n\r\n        let rowKey = row[key];\r\n        let columnKey = column.dataIndex;\r\n\r\n        let nextEditor = this.getNextEditor(e.keyCode, row, column);\r\n\r\n        let currEditor = this.getEditorIns(rowKey, columnKey);\r\n\r\n        if (currEditor) {\r\n            //ly 2018年11月6日 11点12分\r\n            //当当前编辑器为下拉类型时，如 datePicker comobobox 。获取展开状态，展开时禁用表格列的快捷键切换\r\n            if (typeof currEditor.getRealOpenState === \"function\") {\r\n                let bl = currEditor.getRealOpenState();\r\n\r\n                if (e.keyCode === 13) {\r\n                    this.focusInput(nextEditor);\r\n                    return false;\r\n                }\r\n\r\n                if (bl === true) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.focusInput(nextEditor);\r\n    };\r\n\r\n    onClick = (e, row, column) => {\r\n        this.isMouseFocus = true;\r\n    };\r\n\r\n    completeEdit = async callBack => {\r\n        let changedRows = this.getChangedRows();\r\n\r\n        let editType = this.editType;\r\n        let { data, sourceData, deletedRows, rawData, addedData } = this.state;\r\n        let { allowSaveEmpty, alwaysValidate, isAppend } = this.props;\r\n\r\n        let newRows = [].concat(data);\r\n        if (editType === \"add\") {\r\n            if (allowSaveEmpty === true) {\r\n                let addedRows = addedData.map(d => {\r\n                    let r = Object.assign({}, d);\r\n                    delete r.__isAddedRow;\r\n                    return r;\r\n                });\r\n                newRows = data.concat(addedRows);\r\n            } else {\r\n                newRows = data.concat(changedRows);\r\n            }\r\n        } else if (editType === \"edit\") {\r\n            newRows = data;\r\n        } else if (editType === \"delete\") {\r\n            newRows = data;\r\n        }\r\n\r\n        let bl = true;\r\n\r\n        if (alwaysValidate === true) {\r\n            bl = await this.validateAll();\r\n        } else {\r\n            bl = await this.validate();\r\n        }\r\n\r\n        if (bl === false) {\r\n            message.error(\"信息录入不正确，请检查\");\r\n            return;\r\n        }\r\n\r\n        if (allowSaveEmpty !== true) {\r\n            if (changedRows.length <= 0) {\r\n                this.cancelEdit();\r\n                return;\r\n            }\r\n        }\r\n\r\n        let onEditSave = this.props.onEditSave;\r\n\r\n        if (typeof onEditSave === \"function\") {\r\n            this.setState({ editSaveLoading: true });\r\n\r\n            let fn = onEditSave(changedRows, newRows, this.editType);\r\n\r\n            if (fn) {\r\n                //如果返回的是一个promise对象，则只有当调用resolve时，才触发编辑完成事件\r\n                if (\r\n                    typeof fn.then === \"function\" &&\r\n                    typeof fn.catch === \"function\"\r\n                ) {\r\n                    fn.then(() => {\r\n                        this.endEdit(callBack);\r\n                    });\r\n\r\n                    fn.catch(() => {\r\n                        this.setState({ editSaveLoading: false });\r\n                    });\r\n                } else {\r\n                    this.setState({ editSaveLoading: false });\r\n                }\r\n            } else {\r\n                this.endEdit(callBack);\r\n            }\r\n        } else {\r\n            this.endEdit(callBack);\r\n        }\r\n    };\r\n\r\n    //\"edit\"：编辑 ； \"add\"：新增 \"delete\"： 删除\r\n    editType = \"\";\r\n    edit = () => {\r\n        let arr = this.state.data || [];\r\n\r\n        if (arr.length === 0) {\r\n            message.error(\"没有可编辑的数据\");\r\n            return false;\r\n        }\r\n\r\n        let bl = true;\r\n\r\n        if (typeof this.props.onBeforeEdit === \"function\") {\r\n            bl = this.props.onBeforeEdit();\r\n        }\r\n\r\n        if (bl === false) {\r\n            return false;\r\n        }\r\n\r\n        this.editType = \"edit\";\r\n\r\n        this.editAll();\r\n\r\n        if (typeof this.props.onEdit === \"function\") {\r\n            this.props.onEdit();\r\n        }\r\n    };\r\n\r\n    delete = () => {\r\n        let bl = true;\r\n\r\n        if (typeof this.props.onBeforeDelete === \"function\") {\r\n            bl = this.props.onBeforeDelete();\r\n        }\r\n\r\n        if (bl === false) {\r\n            return false;\r\n        }\r\n\r\n        let selectedKeys = this.tableRef.tableApi.getSelectedKeys();\r\n\r\n        if (selectedKeys.length <= 0) {\r\n            message.warn(\"请选择要删除的数据\");\r\n        } else {\r\n            this.editType = \"delete\";\r\n\r\n            let { data, rowKey } = this.state;\r\n\r\n            let newData = [].concat(data);\r\n            let deletedRows = [];\r\n\r\n            for (let i = 0; i < selectedKeys.length; i++) {\r\n                let index = newData.findIndex(\r\n                    d => d[rowKey] === selectedKeys[i]\r\n                );\r\n\r\n                deletedRows.push(Object.assign({}, newData[index]));\r\n\r\n                if (index > -1) {\r\n                    newData.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            let onEditSave = this.props.onEditSave;\r\n\r\n            if (typeof onEditSave === \"function\") {\r\n                this.setState({ deleteLoading: true });\r\n\r\n                let fn = onEditSave(deletedRows, newData, this.editType);\r\n\r\n                if (fn && typeof fn.then === \"function\") {\r\n                    fn.then(() => {\r\n                        this.setState({ deleteLoading: false });\r\n                    });\r\n                } else {\r\n                    this.setState({ deleteLoading: false });\r\n                }\r\n            } else {\r\n                this.setState({ data: newData, deletedRows });\r\n            }\r\n\r\n            if (typeof this.props.onDelete === \"function\") {\r\n                this.props.onDelete();\r\n            }\r\n        }\r\n    };\r\n\r\n    addRange = rowCount => {\r\n        let { rowTemplate, rowKey, isAppend, defaultAddCount } = this.props;\r\n\r\n        let bl = true;\r\n\r\n        if (typeof this.props.onBeforeAdd === \"function\") {\r\n            bl = this.props.onBeforeAdd();\r\n        }\r\n\r\n        if (bl === false) {\r\n            return false;\r\n        }\r\n\r\n        this.editType = \"add\";\r\n\r\n        let addCount = rowCount || defaultAddCount;\r\n\r\n        let data = this.state.data || [];\r\n\r\n        let newData = [];\r\n\r\n        let addedData = [];\r\n        let keys = [];\r\n\r\n        for (let i = 0; i < addCount; i++) {\r\n            let row = {};\r\n\r\n            if (typeof rowTemplate === \"function\") {\r\n                row = rowTemplate(i);\r\n                if (!row[rowKey]) {\r\n                    row[rowKey] = \"__id_\" + i + \"_\" + new Date().getTime();\r\n                }\r\n            } else {\r\n                row[rowKey] = \"__id_\" + i + \"_\" + new Date().getTime();\r\n            }\r\n\r\n            keys.push(row[rowKey]);\r\n            addedData.push(row);\r\n        }\r\n\r\n        // if (isAppend === true) {\r\n        //     newData = data.concat(addedData)\r\n        // } else {\r\n        //     newData = addedData;\r\n        // }\r\n\r\n        this.changedRows = [];\r\n\r\n        this.setState({\r\n            addedData,\r\n            data: data,\r\n            editKeys: keys,\r\n            isEditing: true,\r\n            isEditAll: false,\r\n            isAdding: false,\r\n            isAddingRange: true,\r\n            changedRows: []\r\n        });\r\n\r\n        if (typeof this.props.onAdd === \"function\") {\r\n            this.props.onAdd(addedData, newData, \"add\");\r\n        }\r\n    };\r\n\r\n    editTools = () => {\r\n        let w = 0;\r\n\r\n        let tools = this.props.editTools || [];\r\n        let config = this.props.editToolsConfig || {};\r\n        let isTop = config.position === \"top\";\r\n\r\n        if (tools.length <= 0) {\r\n            return null;\r\n        }\r\n\r\n        let buttons = [];\r\n\r\n        let { isEditing } = this.state;\r\n\r\n        let itemStyle = config.itemStyle || { marginLeft: 5 };\r\n\r\n        let okText = config.okText || \"确定\";\r\n        let okIcon = config.okIcon || \"\";\r\n        okIcon = okIcon ? <Icon type={okIcon} /> : null;\r\n\r\n        let cancelText = config.cancelText || \"取消\";\r\n        let cancelIcon = config.cancelIcon || \"\";\r\n        cancelIcon = cancelIcon ? <Icon type={cancelIcon} /> : null;\r\n\r\n        let addText = config.addText || \"新增\";\r\n        let addIcon = config.addIcon || \"\";\r\n        addIcon = addIcon ? <Icon type={addIcon} /> : null;\r\n\r\n        let editText = config.editText || \"编辑\";\r\n        let editIcon = config.editIcon || \"\";\r\n        editIcon = editIcon ? <Icon type={editIcon} /> : null;\r\n\r\n        let deleteText = config.deleteText || \"删除\";\r\n        let deleteIcon = config.deleteIcon || \"\";\r\n        deleteIcon = deleteIcon ? <Icon type={deleteIcon} /> : null;\r\n\r\n        if (isEditing) {\r\n            w = 160;\r\n            buttons.push(\r\n                <Button\r\n                    key={\"_btnOk\"}\r\n                    loading={this.state.editSaveLoading}\r\n                    onClick={this.completeEdit}\r\n                    style={{ ...itemStyle, marginLeft: isTop === true ? 0 : 5 }}\r\n                >\r\n                    {okIcon}\r\n                    {okText}\r\n                </Button>\r\n            );\r\n            buttons.push(\r\n                <Button\r\n                    key={\"_btnCancel\"}\r\n                    onClick={this.cancelEdit}\r\n                    style={itemStyle}\r\n                >\r\n                    {cancelIcon}\r\n                    {cancelText}\r\n                </Button>\r\n            );\r\n        } else {\r\n            tools.forEach((d, i) => {\r\n                w += 80;\r\n\r\n                let styles = { ...itemStyle };\r\n                if (i === 0 && isTop === true) {\r\n                    styles[\"marginLeft\"] = 0;\r\n                }\r\n\r\n                const menu = (\r\n                    <Menu onClick={e => this.addRange(e.item.props.value)}>\r\n                        <Menu.Item key=\"1\" value={5}>\r\n                            5 行\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"2\" value={10}>\r\n                            10 行\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                );\r\n\r\n                if (d === \"addSingle\") {\r\n                    buttons.push(\r\n                        <Button\r\n                            key={d + \"_1\"}\r\n                            onClick={() => this.addRange(1)}\r\n                            style={styles}\r\n                        >\r\n                            {addIcon}\r\n                            {addText}\r\n                        </Button>\r\n                    );\r\n                }\r\n\r\n                if (d === \"add\") {\r\n                    buttons.push(\r\n                        <Dropdown key={d + \"_1\"} overlay={menu}>\r\n                            <Button\r\n                                tool=\"add\"\r\n                                style={styles}\r\n                                onClick={() => this.addRange()}\r\n                            >\r\n                                {addIcon} {addText}\r\n                                <Icon type=\"down\" />\r\n                            </Button>\r\n                        </Dropdown>\r\n                    );\r\n                }\r\n\r\n                if (d === \"edit\") {\r\n                    buttons.push(\r\n                        <Button\r\n                            key={d + \"_1\"}\r\n                            onClick={this.edit}\r\n                            style={styles}\r\n                        >\r\n                            {editIcon}\r\n                            {editText}\r\n                        </Button>\r\n                    );\r\n                }\r\n\r\n                if (d === \"delete\") {\r\n                    buttons.push(\r\n                        <Popconfirm\r\n                            key={d}\r\n                            title=\"确定删除选中的数据吗？\"\r\n                            okText=\"确定\"\r\n                            cancelText=\"取消\"\r\n                            onConfirm={this.delete}\r\n                        >\r\n                            <Button\r\n                                style={styles}\r\n                                loading={this.state.deleteLoading}\r\n                                onClick={e => {\r\n                                    e.stopPropagation();\r\n                                }}\r\n                            >\r\n                                {deleteIcon}\r\n                                {deleteText}\r\n                            </Button>\r\n                        </Popconfirm>\r\n                    );\r\n                }\r\n\r\n                if (typeof d === \"function\") {\r\n                    buttons.push(\r\n                        <span style={styles} key={\"_fnTools_\" + i}>\r\n                            {d()}\r\n                        </span>\r\n                    );\r\n                }\r\n\r\n                if (typeof d === \"object\" && d !== null) {\r\n                    let toolIcon = d.icon;\r\n                    toolIcon = toolIcon ? <Icon type={toolIcon} /> : null;\r\n                    let toolAttr = d.props || {};\r\n                    buttons.push(\r\n                        <Button\r\n                            key={\"_objTools_\" + i}\r\n                            onClick={d.handler}\r\n                            style={styles}\r\n                            {...toolAttr}\r\n                        >\r\n                            {toolIcon}\r\n                            {d.text}\r\n                        </Button>\r\n                    );\r\n                }\r\n            });\r\n        }\r\n\r\n        let pagerAttr = this.props.pagination || null;\r\n\r\n        if (buttons.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        return <div>{buttons}</div>;\r\n    };\r\n\r\n    getProps = () => {\r\n        let props = this.props || {};\r\n        let newProps = Object.assign({}, props);\r\n\r\n        return newProps;\r\n    };\r\n\r\n    bottomExtra = () => {\r\n        if (typeof this.props.bottomExtra === \"function\") {\r\n        }\r\n    };\r\n\r\n    createToolBar = () => {\r\n        if (\r\n            this.props.editToolsConfig &&\r\n            this.props.editToolsConfig.position === \"top\"\r\n        ) {\r\n            let tools = this.editTools();\r\n\r\n            if (tools !== null) {\r\n                return (\r\n                    <Header\r\n                        style={{\r\n                            padding: \"10px 0\",\r\n                            backgroundColor: \"#ffffff\"\r\n                        }}\r\n                    >\r\n                        {tools}\r\n                    </Header>\r\n                );\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    getDataRows = () => {\r\n        let { data, addedData, isAdding, isAddingRange, dataList } = this.state;\r\n\r\n        let { isAppend, rowKey } = this.props;\r\n\r\n        let addedRows = [];\r\n\r\n        addedData.forEach(d => {\r\n            if (dataList.findIndex(c => c[rowKey] === d[rowKey]) <= -1) {\r\n                let r = d;\r\n                r.__isAddedRow = true;\r\n                addedRows.push(r);\r\n            }\r\n        });\r\n\r\n        let arr = data;\r\n\r\n        if (isAdding === true || isAddingRange === true) {\r\n            if (isAppend === true) {\r\n                arr = data.concat(addedRows);\r\n            } else {\r\n                arr = addedRows;\r\n            }\r\n        }\r\n\r\n        return arr;\r\n    };\r\n\r\n    updateRows = callback => {\r\n        let arr = [];\r\n\r\n        if (typeof callback === \"function\") {\r\n            let currData = this.getDataRows();\r\n\r\n            arr = callback(currData);\r\n\r\n            if (arr.length > 0) {\r\n                this.setState({\r\n                    data: this.state.data\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    api = {\r\n        editAll: this.editAll,\r\n        addRange: this.addRange,\r\n        delete: this.delete,\r\n        reset: this.reset,\r\n        completeEdit: this.completeEdit,\r\n        cancelEdit: this.cancelEdit,\r\n        isEditing: this.isEditing,\r\n        getData: () => this.state.data\r\n    };\r\n\r\n    render() {\r\n        let columns = this.formatColumns();\r\n\r\n        let arr = this.getDataRows(); //this.state.data;\r\n\r\n        let props = this.props;\r\n        let { readOnly, editToolsConfig = {} } = props;\r\n\r\n        let newProps = {\r\n            dataSource: arr,\r\n            columns,\r\n            hover: true,\r\n            initRef: this.initRef\r\n        };\r\n\r\n        if (editToolsConfig.position !== \"top\" && readOnly != true) {\r\n            newProps.bottomExtra = this.editTools;\r\n        }\r\n\r\n        if (readOnly === true) {\r\n            newProps.selectMode = \"none\";\r\n        }\r\n\r\n        let cls = { height: \"100%\", width: \"100%\", backgroundColor: \"#ffffff\" };\r\n\r\n        return (\r\n            <Layout style={cls} data-tableid={this.props.tableId}>\r\n                {readOnly != true && this.createToolBar()}\r\n                <Content style={{ height: \"100%\" }}>\r\n                    <Table {...props} {...newProps} />\r\n                </Content>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditableTable;\r\n","import React from \"react\";\r\nimport Table from \"./EditableTable\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n/**\r\n * 可编辑表格\r\n * */\r\nconst EditableTable = React.forwardRef((props, ref) => (\r\n  <Table {...props} ref={ref} />\r\n));\r\n\r\nEditableTable.defaultProps = {\r\n  editTools: [\"edit\", \"add\"],\r\n  editToolsConfig: {\r\n    position: \"bottom\",\r\n    itemStyle: { marginLeft: \"5px\" },\r\n    editText: \"\",\r\n    editIcon: \"\",\r\n    addText: \"\",\r\n    addIcon: \"\",\r\n    deleteText: \"\",\r\n    deleteIcon: \"\",\r\n    okText: \"\",\r\n    okIcon: \"\",\r\n    cancelText: \"\",\r\n    cancelIcon: \"\"\r\n  },\r\n  defaultAddCount: 1,\r\n  isAppend: false,\r\n  validateTrigger: \"onSave\",\r\n  validateDelay: 300,\r\n  allowSaveEmpty: false,\r\n  dataControled: false,\r\n  alwaysValidate: false,\r\n  readOnly: false\r\n};\r\n\r\nEditableTable.propTypes = {\r\n  /** 工具栏，工具按钮 ['edit', 'add','delete',{icon:\"\",text:\"\",props:{},handler:Function},Function] addSingle:单行新增 */\r\n  editTools: PropTypes.array,\r\n  /** 工具栏，工具按钮属性配置{ position: \"bottom\", itemStyle: { marginLeft: \"5px\" }, editText: \"\", editIcon: \"\", addText: \"\", addIcon: \"\", deleteText: \"\", deleteIcon: \"\", okText: \"\", okIcon: \"\", cancelText: \"\", cancelIcon: \"\" } */\r\n  editToolsConfig: PropTypes.object,\r\n  /** 新增行时，是追加，还是清空当前页数据 */\r\n  isAppend: PropTypes.bool,\r\n  /** 新增行时的默认条数 */\r\n  defaultAddCount: PropTypes.number,\r\n\r\n  /** 编辑确定事件 (changedRows,newRows,editType)=>void\r\n   * @param {Array} changedRows-改变的数据行\r\n   * @param {Array} newRows-改变后最新的数据\r\n   * @param {string} editType-编辑类型;\"edit\":编辑;\"add\":新增;\"delete\":删除\r\n   */\r\n  onEditSave: PropTypes.func,\r\n  /** 当没有改变行数据时，是否仍然执行onEditSave */\r\n  allowSaveEmpty: PropTypes.bool,\r\n  /** 验证时机 */\r\n  validateTrigger: PropTypes.oneOf([\"onChange\", \"onBlur\", \"onSave\"]),\r\n\r\n  /** 新增按钮前置事件，返回false不进入新增状态 ()=>bool */\r\n  onBeforeAdd: PropTypes.func,\r\n\r\n  /** 新增按钮事件 (addedData, newData)=>void\r\n   * @param {Array} addedData-添加的数据行\r\n   * @param {Array} newRows-添加后最新的数据\r\n   */\r\n  onAdd: PropTypes.func,\r\n\r\n  /** 新增时的行数据模板，可通过此项设置默认行数据 (rowIndex)=>object\r\n   * @param {numer} rowIndex\r\n   * @returns {object} 行对象\r\n   */\r\n  rowTemplate: PropTypes.func,\r\n\r\n  /** 编辑取消事件 */\r\n  onCancel: PropTypes.func,\r\n  /** 编辑按钮前置事件，返回false不进入编辑状态 */\r\n  onBeforeEdit: PropTypes.func,\r\n\r\n  /** 编辑按钮事件 */\r\n  onEdit: PropTypes.func,\r\n  /**\r\n   * 删除按钮前置事件,返回false 不可删除\r\n   */\r\n  onBeforeDelete: PropTypes.func,\r\n  /** 删除按钮事件 */\r\n  onDelete: PropTypes.func,\r\n  /** 无论是否存在输入变化，是否始终验证 */\r\n  alwaysValidate: PropTypes.bool,\r\n  /** 数据是否完全受控，如若受控，请在onEditSave、onCancel中自行更新数据源 */\r\n  dataControled: PropTypes.bool,\r\n  /** 表格是否只读模式，只读时将不显示编辑栏以及复选框 */\r\n  readOnly: PropTypes.bool\r\n};\r\n\r\nexport default EditableTable;\r\n"],"sourceRoot":""}