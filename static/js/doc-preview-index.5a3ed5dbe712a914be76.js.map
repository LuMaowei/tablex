{"version":3,"sources":["e:/WebRoot/tablex/packages/siteCN/doc/Preview/preview.js","e:/WebRoot/tablex/packages/siteCN/doc/Preview/index.mdx"],"names":["columns","count","prefix","Array","fill","map","row","rowIndex","reduce","rowData","column","columnIndex","dataIndex","id","parentId","generateData","props","key","title","width","generateColumns","fixedColumns","titleRender","align","halign","minWidth","validator","value","valid","message","editor","index","onchange","ref","el","defaultValue","onChange","e","target","obj","children","colSpan","render","rowSpan","maxWidth","sortable","createTreeData","data","i","d","level","age","address","push","Demo","tableRef","React","createRef","tableRef2","state","loading","expandedRowKeys","expandedRowRender","record","extra","frozen","Date","getTime","onExpandedRowsChange","arr","setState","tableInner","innerRef","ins","scrollToItem","getData","setTimeout","edit","current","api","editRows","add","insertData","parentKey","editing","prepend","startIndex","onSelectChange","a","b","c","orderNumber","resizable","fixed","orders","join","selectionColumn","attrs","disabled","checked","onEditSave","changedRows","newRows","console","log","scrollToItem1","scrollToItem2","this","onClick","style","height","marginTop","editTools","tableId","editable","isAppend","allowSaveEmpty","overscanCount","alwaysValidate","rowKey","checkStrictly","selectMode","selectOnRowClick","defaultExpandedRowKeys","onExpand","r","rowClassName","summary","border","text","type","frozenRender","rowHeight","bottom","cellRender","onRow2","position","top","zIndex","footerExtra","padding","rowHeight2","expandRowHeight","headerRowHeight","Component","layoutProps","MDXLayout","MDXContent","components","mdxType","__position","__code","__scope","Playground","Props","Preview","isMDXComponent"],"mappings":"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","file":"static/js/doc-preview-index.f4d17d2f.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Table } from \"tablex\";\nimport { Checkbox, Input, Button } from \"antd\";\n\nconst generateColumns = (count = 10, prefix = \"column-\", props) =>\n  new Array(count).fill(0).map((column, columnIndex) => ({\n    ...props,\n    key: `${prefix}${columnIndex}`,\n    dataIndex: `${prefix}${columnIndex}`,\n    title: `Column ${columnIndex}`,\n    width: 150\n  }));\n\nconst generateData = (columns, count = 20, prefix = \"row-\") =>\n  new Array(count).fill(0).map((row, rowIndex) => {\n    return columns.reduce(\n      (rowData, column, columnIndex) => {\n        rowData[column.dataIndex] = `Row ${rowIndex} - Col ${columnIndex}`;\n\n        if (rowIndex === 0) {\n          //rowData.children = [];\n        }\n\n        return rowData;\n      },\n      {\n        id: `${prefix}${rowIndex}`,\n        parentId: null\n      }\n    );\n  });\n\nconst columns = generateColumns(10);\nconst data = generateData(columns, 100);\n\nlet fixedColumns = [\n  {\n    dataIndex: \"column-1\",\n    key: \"column-1\",\n    title: <span>标签title</span>,\n    titleRender: () => {\n      return <span>titleRender</span>;\n    },\n    align: \"left\",\n    halign: \"center\",\n    minWidth: 300,\n    validator: function(value, row) {\n      if (!value) {\n        return { valid: false, message: \"请输入\" };\n      }\n\n      return { valid: true, message: \"false\" };\n    },\n    editor: function(value, row, index, onchange, ref) {\n      let el = (\n        <Input\n          defaultValue={value}\n          ref={ref}\n          onChange={e => onchange({ \"column-1\": e.target.value })}\n        />\n      );\n\n      const obj = {\n        children: el,\n        props: {}\n      };\n\n      if (index === 1) {\n        obj.props.colSpan = 2;\n        obj.children = el;\n      }\n\n      return obj;\n    },\n    render: (value, row, index) => {\n      const obj = {\n        children: value,\n        props: {}\n      };\n\n      if (index % 20 === 0) {\n        obj.props.rowSpan = 13;\n        obj.children = value;\n      }\n\n      return obj;\n    }\n  },\n  {\n    title: \"appellation\",\n    width: 150,\n    halign: \"left\",\n    children: [\n      {\n        dataIndex: \"address\",\n        title: \"name\",\n        render: (value, row, index) => {\n          const obj = {\n            children: value,\n            props: {}\n          };\n    \n          if (index % 5 === 0) {\n            obj.props.rowSpan = 3;\n            obj.children = value;\n          }\n    \n          return obj;\n        }\n      },\n      {\n        title: \"nick name\",\n        width: 150,\n        children: [\n          {\n            dataIndex: \"id\",\n            title: \"nick-1\",\n            maxWidth: 300,\n            width: 150,\n            sortable: true\n          },\n          {\n            dataIndex: \"level\",\n            title: \"level\"\n          }\n        ]\n      }\n    ]\n  },\n  {\n    dataIndex: \"id\",\n    key: \"column-4\",\n    title: \"id\"\n  }\n];\n\nfunction createData(level, parentKey, maxLevel, index) {\n  if (level > maxLevel) {\n    return;\n  }\n\n  let l = level;\n  let data = [];\n  for (let i = 0; i < 3; i++) {\n    let k = parentKey + \"-\" + level + \"-\" + i;\n    let d = {\n      id: k,\n      \"column-1\": \"Edward King \" + k,\n      age: 32,\n      level: level,\n      address: \"London, Park Lane no. \" + i\n    };\n\n    if (i === 2) {\n      d.children = createData(l + 1, k, maxLevel, i);\n    }\n\n    data.push(d);\n  }\n  return data;\n}\n\nfunction createTreeData() {\n  let data = [];\n  for (let i = 0; i < 50; i++) {\n    // let childrens = createData(0, i, 2);\n    let d = {\n      id: \"\" + i,\n      level: 0,\n      \"column-1\": \"Edward King \" + i,\n      age: i,\n      address: \"London, Park Lane no. \" + i\n    };\n\n    if (i % 3 === 0) {\n      // d.children = childrens;\n    }\n\n    data.push(d);\n  }\n\n  return data;\n}\n\nclass Demo extends Component {\n  tableRef = React.createRef();\n  tableRef2 = React.createRef();\n\n  state = {\n    data: [],\n    loading: false,\n    expandedRowKeys: []\n  };\n\n  componentDidMount() {\n    this.setState({\n      data: createTreeData()\n    });\n  }\n\n  expandedRowRender = (record, index, extra) => {\n    if (extra.frozen === \"none\") {\n      return <div>expandedRowRender{new Date().getTime()}</div>;\n    }\n    return null;\n  };\n\n  onExpandedRowsChange = arr => {\n    this.setState({ expandedRowKeys: arr });\n  };\n\n  tableInner = null;\n  innerRef = ins => {\n    this.tableInner = ins;\n  };\n\n  scrollToItem = () => {\n    if (this.tableInner) {\n      this.tableInner.scrollToItem(13);\n    }\n  };\n\n  getData = () => {\n    this.setState({ loading: true });\n    setTimeout(() => {\n      this.setState({ loading: false, data: createTreeData() });\n    }, 1000);\n  };\n\n  edit = () => {\n    if (this.tableRef.current) {\n      this.tableRef.current.api.editRows([\"2\"]);\n    }\n  };\n\n  add = () => {\n    if (this.tableRef.current) {\n      this.tableRef.current.api.insertData({\n        data: [{ id: \"inserted_row_\" + new Date().getTime() }],\n        parentKey: \"3\",\n        editing: true,\n        prepend: false,\n        startIndex: 2\n      });\n    }\n  };\n\n  delete = () => {\n    if (this.tableRef.current) {\n      this.tableRef.current.api.delete();\n    }\n  };\n\n  onSelectChange = (a, b, c) => {\n    //console.log(\"onSelectChange:\", b);\n  };\n\n  orderNumber = {\n    title: \"排序\",\n    width: 50,\n    align: \"left\",\n    resizable: true,\n    fixed: \"left\",\n    render: (value, row, index, extra) => {\n      let { orders = [] } = extra;\n      return orders.join(\"-\");\n    }\n  };\n\n  selectionColumn = {\n    fixed: \"left\",\n    title: attrs => {\n      return (\n        <Checkbox\n          {...attrs}\n          disabled={true}\n          onChange={e => {\n            attrs.onChange(e.target.checked);\n          }}\n        />\n      );\n    },\n    render: (row, index, extra) => {\n      return (\n        <Checkbox\n          {...extra}\n          onChange={e => {\n            extra.onChange(e.target.checked);\n          }}\n        />\n      );\n    }\n  };\n\n  onEditSave = (changedRows, newRows) => {\n    console.log(\"onEditSave changedRows:\", changedRows);\n    console.log(\"onEditSave newRows:\", newRows);\n\n    this.setState({ data: newRows });\n  };\n\n  scrollToItem1 = () => {\n    this.tableRef.current.scrollToItem(12, \"smart\");\n  };\n\n  scrollToItem2 = () => {\n    this.tableRef2.current.scrollToItem(12, \"smart\");\n  };\n\n  render() {\n    return (\n      <>\n        <Button onClick={this.scrollToItem1}>scrollToItem</Button>\n\n        <div style={{ height: \"800px\", marginTop: 10 }}>\n          <Table\n            loading={this.state.loading}\n            editTools={[\"edit\", \"add\", \"delete\"]}\n            tableId=\"preview_table\"\n            sortable={false}\n            editable={true}\n            isAppend={true}\n            allowSaveEmpty={true}\n            overscanCount={100}\n            alwaysValidate={true}\n            rowKey=\"id\"\n            onEditSave={this.onEditSave}\n            ref={this.tableRef}\n            columns={fixedColumns}\n            checkStrictly={true}\n            selectMode=\"multiple\"\n            selectOnRowClick={true}\n            defaultExpandedRowKeys={[\"0\"]}\n            data={this.state.data}\n            onExpand={(b, r) => {\n              //  console.log(\"onExpand:\", r);\n            }}\n            onExpandedRowsChange={this.onExpandedRowsChange}\n            onSelectChange={this.onSelectChange}\n            rowClassName={() => {\n              // console.log(\"rowClassName\");\n            }}\n            orderNumber={this.orderNumber}\n            selectionColumn={this.selectionColumn}\n            summary={{\n              style: { border: \"none\" },\n              title: { text: \"合计:\", column: \"__checkbox_column\" },\n              data: [\n                {\n                  age: \"sum\",\n                  level: \"min\"\n                }\n              ],\n              render: (value, dataIndex, type, index) => {\n                return type + \":\" + value;\n              }\n            }}\n            frozenRender={{\n              rowHeight: 40,\n              rowKey: \"id\",\n              bottom: [this.state.data[0]],\n              cellRender: (value, row, index, extra) => {\n                console.log(\"cellRender:\", extra);\n                return value;\n              }\n            }}\n            onRow2={(row, index, extra) => {\n              if (index === 4) {\n                return {\n                  style: { position: \"sticky\", top: 0, zIndex: 2 }\n                };\n              } else {\n                if (index < 4) {\n                  return {\n                    style: { top: extra.style.top + 50 }\n                  };\n                }\n              }\n            }}\n            footerExtra={() => {\n              return <div style={{ padding: \"14px 10px\" }}>底部信息展示</div>;\n            }}\n            rowHeight2={(d, i) => {\n              if (i % 2 === 0) {\n                return 50;\n              } else {\n                return 30;\n              }\n            }}\n            expandRowHeight={200}\n            headerRowHeight={[30, 40, 60]}\n          />\n        </div>\n\n        <Button onClick={this.scrollToItem2} style={{ marginTop: 10 }}>\n          scrollToItem\n        </Button>\n        {/* \n        <div style={{ height: \"600px\", marginTop: 10 }}>\n          <Table\n            loading={this.state.loading}\n            virtual={false}\n            editTools={[\"edit\", \"add\", \"delete\"]}\n            tableId=\"preview_table\"\n            editable={true}\n            isAppend={true}\n            allowSaveEmpty={true}\n            alwaysValidate={true}\n            ref={this.tableRef2}\n            rowKey=\"id\"\n            onEditSave={this.onEditSave}\n            innerRef={this.innerRef}\n            columns={fixedColumns}\n            checkStrictly={true}\n            selectMode=\"multiple\"\n            selectOnRowClick={false}\n            defaultExpandedRowKeys={[\"0\"]}\n            data={this.state.data}\n            onExpand={(b, r) => {\n              //  console.log(\"onExpand:\", r);\n            }}\n            onExpandedRowsChange={this.onExpandedRowsChange}\n            onSelectChange={this.onSelectChange}\n            rowClassName={() => {\n              // console.log(\"rowClassName\");\n            }}\n            orderNumber={this.orderNumber}\n            selectionColumn={this.selectionColumn}\n            summary={{\n              style: { border: \"none\" },\n              title: { text: \"合计:\", column: \"__checkbox_column\" },\n              data: [\n                {\n                  age: \"sum\",\n                  level: \"min\"\n                }\n              ],\n              render: (value, dataIndex, type, index) => {\n                return type + \":\" + value;\n              }\n            }}\n            frozenRender={{\n              rowHeight: 40,\n              rowKey: \"id\",\n              bottom: [this.state.data[0]],\n              cellRender: (value, row, index, extra) => {\n                console.log(\"cellRender:\", extra);\n                return value;\n              }\n            }}\n            onRow2={(row, index, extra) => {\n              if (index === 4) {\n                return {\n                  style: { position: \"sticky\", top: 0, zIndex: 2 }\n                };\n              } else {\n                if (index < 4) {\n                  return {\n                    style: { top: extra.style.top + 50 }\n                  };\n                }\n              }\n            }}\n            footerExtra={() => {\n              return <div style={{ padding: \"14px 10px\" }}>底部信息展示</div>;\n            }}\n            rowHeight2={(d, i) => {\n              if (i % 2 === 0) {\n                return 50;\n              } else {\n                return 30;\n              }\n            }}\n            expandRowHeight={200}\n            headerRowHeight={[30, 40, 60]}\n          />\n        </div> */}\n      </>\n    );\n  }\n}\n\nexport default Demo;\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground, Props } from \"docz\";\nimport Preview from \"./preview\";\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"features-preview\"\n    }}>{`Features Preview`}</h1>\n    <h2 {...{\n      \"id\": \"示例\"\n    }}>{`示例`}</h2>\n    <Playground __position={0} __code={'<Preview />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Preview\n    }} mdxType=\"Playground\">\n  <Preview mdxType=\"Preview\" />\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}