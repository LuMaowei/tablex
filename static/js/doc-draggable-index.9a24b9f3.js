(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{"./doc/Draggable/index.mdx":function(n,e,t){"use strict";t.r(e),t.d(e,"default",(function(){return w}));var a=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js"),o=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js"),l=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js"),r=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js"),d=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js"),u=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),c=t("./node_modules/react/index.js"),i=t.n(c),s=t("./node_modules/@mdx-js/react/dist/index.es.js"),m=t("./node_modules/docz/dist/index.esm.js"),g=t("../tablex/lib/index.js"),p=t("./node_modules/antd/es/input/index.js"),h=t("./node_modules/antd/es/icon/index.js"),b=t("./node_modules/antd/es/button/index.js"),x=(t("./node_modules/antd/dist/antd.css"),{}),I="wrapper";function w(n){var e=n.components,t=Object(u.a)(n,["components"]);return Object(s.b)(I,Object.assign({},x,t,{components:e,mdxType:"MDXLayout"}),Object(s.b)("h1",{id:"\u7528\u6cd5\u793a\u4f8b"},"\u7528\u6cd5\u793a\u4f8b"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),'import DraggableTable, { flatten, unflatten } from "tablex";\n')),Object(s.b)("h2",{id:"\u53ea\u53ef\u62d6\u52a8\u6392\u5e8f\uff0c\u4e0d\u53ef\u6539\u53d8\u5c42\u7ea7"},"\u53ea\u53ef\u62d6\u52a8\u6392\u5e8f\uff0c\u4e0d\u53ef\u6539\u53d8\u5c42\u7ea7"),Object(s.b)(m.c,{__position:0,__code:"class Demo extends React.Component {\n    generateData(columns, count = 20, prefix = 'Row') {\n      return new Array(count).fill(0).map((row, rowIndex) => {\n        return columns.reduce(\n          (rowData, column, columnIndex) => {\n            if (column.dataIndex !== 'id') {\n              rowData[column.dataIndex] = Math.floor(Math.random() * 100 + 1)\n            } else {\n              rowData[column.dataIndex] =\n                prefix + ' ' + rowIndex + ' - Col ' + columnIndex\n            }\n            return rowData\n          },\n          {\n            id: prefix + rowIndex,\n            parentId: null,\n          },\n        )\n      })\n    }\n    constructor(props) {\n      super(props)\n      const columns = [\n        {\n          dataIndex: 'id',\n          title: 'id',\n          key: 'id',\n          width: 150,\n        },\n        {\n          dataIndex: 'column-1',\n          key: 'column-1',\n          title: 'column-1',\n          width: 100,\n        },\n\n        {\n          dataIndex: 'column-2',\n          key: 'column-2',\n          title: 'column-2',\n          width: 150,\n        },\n\n        {\n          dataIndex: 'column-3',\n          key: 'column-3',\n          title: 'column-3',\n          align: 'right',\n        },\n        {\n          dataIndex: 'column-4',\n          key: 'column-4',\n          title: 'column-4',\n          width: 100,\n          align: 'center',\n        },\n      ]\n\n      let data = this.generateData(columns, 20)\n\n      this.state = {\n        data: data,\n        columns: columns,\n      }\n    }\n    onDragComplete(result) {\n      console.log('onDragComplete:', result)\n    }\n    onRow() {\n      return {\n        onClick: function() {\n          console.log('onRow:onClick')\n        },\n      }\n    }\n    render() {\n      let { columns, data } = this.state\n      return (\n        <DraggableTable\n          rowKey=\"id\"\n          allowDragLevel={false}\n          columns={columns}\n          data={data}\n          onRow={this.onRow}\n          onDragComplete={this.onDragComplete.bind(this)}\n        />\n      )\n    }\n  }",__scope:{props:this?this.props:t,Playground:m.c,Props:m.d,flatten:g.flatten,DraggableTable:g.DraggableTable,Input:p.a,Icon:h.a,Button:b.a},style:{height:400},mdxType:"Playground"},function(n){function e(n){var t;Object(a.a)(this,e);var r=[{dataIndex:"id",title:"id",key:"id",width:150},{dataIndex:"column-1",key:"column-1",title:"column-1",width:100},{dataIndex:"column-2",key:"column-2",title:"column-2",width:150},{dataIndex:"column-3",key:"column-3",title:"column-3",align:"right"},{dataIndex:"column-4",key:"column-4",title:"column-4",width:100,align:"center"}],d=(t=Object(o.a)(this,Object(l.a)(e).call(this,n))).generateData(r,20);return t.state={data:d,columns:r},t}return Object(d.a)(e,n),Object(r.a)(e,[{key:"generateData",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Row";return new Array(e).fill(0).map((function(e,a){return n.reduce((function(n,e,o){return"id"!==e.dataIndex?n[e.dataIndex]=Math.floor(100*Math.random()+1):n[e.dataIndex]=t+" "+a+" - Col "+o,n}),{id:t+a,parentId:null})}))}}]),Object(r.a)(e,[{key:"onDragComplete",value:function(n){console.log("onDragComplete:",n)}},{key:"onRow",value:function(){return{onClick:function(){console.log("onRow:onClick")}}}},{key:"render",value:function(){var n=this.state,e=n.columns,t=n.data;return Object(s.b)(g.DraggableTable,{rowKey:"id",allowDragLevel:!1,columns:e,data:t,onRow:this.onRow,onDragComplete:this.onDragComplete.bind(this),mdxType:"DraggableTable"})}}]),e}(i.a.Component)),Object(s.b)("h2",{id:"\u53ef\u6539\u53d8\u5c42\u7ea7"},"\u53ef\u6539\u53d8\u5c42\u7ea7"),Object(s.b)(m.c,{__position:1,__code:"class Demo extends React.Component {\n    generateData(columns, count = 20, prefix = 'Row') {\n      return new Array(count).fill(0).map((row, rowIndex) => {\n        return columns.reduce(\n          (rowData, column, columnIndex) => {\n            if (column.dataIndex !== 'id') {\n              rowData[column.dataIndex] = Math.floor(Math.random() * 100 + 1)\n            } else {\n              rowData[column.dataIndex] =\n                prefix + ' ' + rowIndex + ' - Col ' + columnIndex\n            }\n            return rowData\n          },\n          {\n            id: prefix + rowIndex,\n            parentId: null,\n          },\n        )\n      })\n    }\n    constructor(props) {\n      super(props)\n      const columns = [\n        {\n          dataIndex: 'id',\n          title: 'id',\n          key: 'id',\n          width: 150,\n        },\n        {\n          dataIndex: 'column-1',\n          key: 'column-1',\n          title: 'column-1',\n          width: 100,\n        },\n\n        {\n          dataIndex: 'column-2',\n          key: 'column-2',\n          title: 'column-2',\n          width: 150,\n        },\n\n        {\n          dataIndex: 'column-3',\n          key: 'column-3',\n          title: 'column-3',\n          align: 'right',\n        },\n        {\n          dataIndex: 'column-4',\n          key: 'column-4',\n          title: 'column-4',\n          width: 100,\n          align: 'center',\n        },\n      ]\n\n      let data = this.generateData(columns, 20)\n\n      this.state = {\n        data: data,\n        columns: columns,\n      }\n    }\n    onDragComplete(result) {\n      console.log('onDragComplete:', result)\n    }\n    render() {\n      let { columns, data } = this.state\n      return (\n        <DraggableTable\n          rowKey=\"id\"\n          columns={columns}\n          data={data}\n          onDragComplete={this.onDragComplete.bind(this)}\n        />\n      )\n    }\n  }",__scope:{props:this?this.props:t,Playground:m.c,Props:m.d,flatten:g.flatten,DraggableTable:g.DraggableTable,Input:p.a,Icon:h.a,Button:b.a},style:{height:400},mdxType:"Playground"},function(n){function e(n){var t;Object(a.a)(this,e);var r=[{dataIndex:"id",title:"id",key:"id",width:150},{dataIndex:"column-1",key:"column-1",title:"column-1",width:100},{dataIndex:"column-2",key:"column-2",title:"column-2",width:150},{dataIndex:"column-3",key:"column-3",title:"column-3",align:"right"},{dataIndex:"column-4",key:"column-4",title:"column-4",width:100,align:"center"}],d=(t=Object(o.a)(this,Object(l.a)(e).call(this,n))).generateData(r,20);return t.state={data:d,columns:r},t}return Object(d.a)(e,n),Object(r.a)(e,[{key:"generateData",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Row";return new Array(e).fill(0).map((function(e,a){return n.reduce((function(n,e,o){return"id"!==e.dataIndex?n[e.dataIndex]=Math.floor(100*Math.random()+1):n[e.dataIndex]=t+" "+a+" - Col "+o,n}),{id:t+a,parentId:null})}))}}]),Object(r.a)(e,[{key:"onDragComplete",value:function(n){console.log("onDragComplete:",n)}},{key:"render",value:function(){var n=this.state,e=n.columns,t=n.data;return Object(s.b)(g.DraggableTable,{rowKey:"id",columns:e,data:t,onDragComplete:this.onDragComplete.bind(this),mdxType:"DraggableTable"})}}]),e}(i.a.Component)),Object(s.b)("h2",{id:"\u70b9\u51fb\u62d6\u62fd\u6807\u8bc6\u62d6\u52a8"},"\u70b9\u51fb\u62d6\u62fd\u6807\u8bc6\u62d6\u52a8"),Object(s.b)(m.c,{__position:2,__code:"class Demo extends React.Component {\n    generateData(columns, count = 20, prefix = 'Row') {\n      return new Array(count).fill(0).map((row, rowIndex) => {\n        return columns.reduce(\n          (rowData, column, columnIndex) => {\n            if (column.dataIndex !== 'id') {\n              rowData[column.dataIndex] = Math.floor(Math.random() * 100 + 1)\n            } else {\n              rowData[column.dataIndex] =\n                prefix + ' ' + rowIndex + ' - Col ' + columnIndex\n            }\n            return rowData\n          },\n          {\n            id: prefix + rowIndex,\n            parentId: null,\n          },\n        )\n      })\n    }\n    constructor(props) {\n      super(props)\n      const columns = [\n        {\n          dataIndex: 'id',\n          title: 'id',\n          key: 'id',\n          width: 150,\n        },\n        {\n          dataIndex: 'column-1',\n          key: 'column-1',\n          title: 'column-1',\n          width: 100,\n        },\n\n        {\n          dataIndex: 'column-2',\n          key: 'column-2',\n          title: 'column-2',\n          width: 150,\n        },\n\n        {\n          dataIndex: 'column-3',\n          key: 'column-3',\n          title: 'column-3',\n          align: 'right',\n        },\n        {\n          dataIndex: 'column-4',\n          key: 'column-4',\n          title: 'column-4',\n          width: 100,\n          align: 'center',\n        },\n      ]\n\n      let data = this.generateData(columns, 20)\n\n      this.state = {\n        data: data,\n        columns: columns,\n      }\n    }\n    onDragComplete(result) {\n      console.log('onDragComplete:', result)\n    }\n    render() {\n      let { columns, data } = this.state\n      return (\n        <DraggableTable\n          rowKey=\"id\"\n          columns={columns}\n          data={data}\n          useDragHandle={true}\n          onDragComplete={this.onDragComplete.bind(this)}\n        />\n      )\n    }\n  }",__scope:{props:this?this.props:t,Playground:m.c,Props:m.d,flatten:g.flatten,DraggableTable:g.DraggableTable,Input:p.a,Icon:h.a,Button:b.a},style:{height:400},mdxType:"Playground"},function(n){function e(n){var t;Object(a.a)(this,e);var r=[{dataIndex:"id",title:"id",key:"id",width:150},{dataIndex:"column-1",key:"column-1",title:"column-1",width:100},{dataIndex:"column-2",key:"column-2",title:"column-2",width:150},{dataIndex:"column-3",key:"column-3",title:"column-3",align:"right"},{dataIndex:"column-4",key:"column-4",title:"column-4",width:100,align:"center"}],d=(t=Object(o.a)(this,Object(l.a)(e).call(this,n))).generateData(r,20);return t.state={data:d,columns:r},t}return Object(d.a)(e,n),Object(r.a)(e,[{key:"generateData",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Row";return new Array(e).fill(0).map((function(e,a){return n.reduce((function(n,e,o){return"id"!==e.dataIndex?n[e.dataIndex]=Math.floor(100*Math.random()+1):n[e.dataIndex]=t+" "+a+" - Col "+o,n}),{id:t+a,parentId:null})}))}}]),Object(r.a)(e,[{key:"onDragComplete",value:function(n){console.log("onDragComplete:",n)}},{key:"render",value:function(){var n=this.state,e=n.columns,t=n.data;return Object(s.b)(g.DraggableTable,{rowKey:"id",columns:e,data:t,useDragHandle:!0,onDragComplete:this.onDragComplete.bind(this),mdxType:"DraggableTable"})}}]),e}(i.a.Component)),Object(s.b)("h2",{id:"\u81ea\u5b9a\u4e49\u62d6\u62fd\u6807\u8bc6"},"\u81ea\u5b9a\u4e49\u62d6\u62fd\u6807\u8bc6"),Object(s.b)(m.c,{__position:3,__code:"class Demo extends React.Component {\n    generateData(columns, count = 20, prefix = 'Row') {\n      return new Array(count).fill(0).map((row, rowIndex) => {\n        return columns.reduce(\n          (rowData, column, columnIndex) => {\n            if (column.dataIndex !== 'id') {\n              rowData[column.dataIndex] = Math.floor(Math.random() * 100 + 1)\n            } else {\n              rowData[column.dataIndex] =\n                prefix + ' ' + rowIndex + ' - Col ' + columnIndex\n            }\n            return rowData\n          },\n          {\n            id: prefix + rowIndex,\n            parentId: null,\n          },\n        )\n      })\n    }\n    constructor(props) {\n      super(props)\n      const columns = [\n        {\n          dataIndex: 'id',\n          title: 'id',\n          key: 'id',\n          width: 150,\n        },\n        {\n          dataIndex: 'column-1',\n          key: 'column-1',\n          title: 'column-1',\n          width: 100,\n        },\n\n        {\n          dataIndex: 'column-2',\n          key: 'column-2',\n          title: 'column-2',\n          width: 150,\n        },\n\n        {\n          dataIndex: 'column-3',\n          key: 'column-3',\n          title: 'column-3',\n          align: 'right',\n        },\n        {\n          dataIndex: 'column-4',\n          key: 'column-4',\n          title: 'column-4',\n          width: 100,\n          align: 'center',\n        },\n      ]\n\n      let data = this.generateData(columns, 20)\n\n      this.state = {\n        data: data,\n        columns: columns,\n      }\n    }\n    onDragComplete(result) {\n      console.log('onDragComplete:', result)\n    }\n    dragHandleRender() {\n      return 'D'\n    }\n    render() {\n      let { columns, data } = this.state\n      return (\n        <DraggableTable\n          rowKey=\"id\"\n          columns={columns}\n          data={data}\n          useDragHandle={true}\n          dragHandleRender={this.dragHandleRender.bind(this)}\n          onDragComplete={this.onDragComplete.bind(this)}\n        />\n      )\n    }\n  }",__scope:{props:this?this.props:t,Playground:m.c,Props:m.d,flatten:g.flatten,DraggableTable:g.DraggableTable,Input:p.a,Icon:h.a,Button:b.a},style:{height:400},mdxType:"Playground"},function(n){function e(n){var t;Object(a.a)(this,e);var r=[{dataIndex:"id",title:"id",key:"id",width:150},{dataIndex:"column-1",key:"column-1",title:"column-1",width:100},{dataIndex:"column-2",key:"column-2",title:"column-2",width:150},{dataIndex:"column-3",key:"column-3",title:"column-3",align:"right"},{dataIndex:"column-4",key:"column-4",title:"column-4",width:100,align:"center"}],d=(t=Object(o.a)(this,Object(l.a)(e).call(this,n))).generateData(r,20);return t.state={data:d,columns:r},t}return Object(d.a)(e,n),Object(r.a)(e,[{key:"generateData",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Row";return new Array(e).fill(0).map((function(e,a){return n.reduce((function(n,e,o){return"id"!==e.dataIndex?n[e.dataIndex]=Math.floor(100*Math.random()+1):n[e.dataIndex]=t+" "+a+" - Col "+o,n}),{id:t+a,parentId:null})}))}}]),Object(r.a)(e,[{key:"onDragComplete",value:function(n){console.log("onDragComplete:",n)}},{key:"dragHandleRender",value:function(){return"D"}},{key:"render",value:function(){var n=this.state,e=n.columns,t=n.data;return Object(s.b)(g.DraggableTable,{rowKey:"id",columns:e,data:t,useDragHandle:!0,dragHandleRender:this.dragHandleRender.bind(this),onDragComplete:this.onDragComplete.bind(this),mdxType:"DraggableTable"})}}]),e}(i.a.Component)),Object(s.b)("h2",{id:"\u4f7f\u7528\u62d6\u62fd\u6807\u8bc6\u5143\u7d20\u9009\u62e9\u5668"},"\u4f7f\u7528\u62d6\u62fd\u6807\u8bc6\u5143\u7d20\u9009\u62e9\u5668"),Object(s.b)(m.c,{__position:4,__code:"class Demo extends React.Component {\n    generateData(columns, count = 20, prefix = 'Row') {\n      return new Array(count).fill(0).map((row, rowIndex) => {\n        return columns.reduce(\n          (rowData, column, columnIndex) => {\n            if (column.dataIndex !== 'id') {\n              rowData[column.dataIndex] = Math.floor(Math.random() * 100 + 1)\n            } else {\n              rowData[column.dataIndex] =\n                prefix + ' ' + rowIndex + ' - Col ' + columnIndex\n            }\n            return rowData\n          },\n          {\n            id: prefix + rowIndex,\n            parentId: null,\n          },\n        )\n      })\n    }\n    constructor(props) {\n      super(props)\n      const columns = [\n        {\n          dataIndex: 'id',\n          title: 'id',\n          key: 'id',\n          width: 150,\n        },\n        {\n          dataIndex: 'column-1',\n          key: 'column-1',\n          title: 'column-1',\n          width: 100,\n          render: function() {\n            return (\n              <span\n                className=\"customDragHandle\"\n                style={{ backgroundColor: '#ccc' }}\n              >\n                drag me\n              </span>\n            )\n          },\n        },\n\n        {\n          dataIndex: 'column-2',\n          key: 'column-2',\n          title: 'column-2',\n          width: 150,\n        },\n\n        {\n          dataIndex: 'column-3',\n          key: 'column-3',\n          title: 'column-3',\n          align: 'right',\n        },\n        {\n          dataIndex: 'column-4',\n          key: 'column-4',\n          title: 'column-4',\n          width: 100,\n          align: 'center',\n        },\n      ]\n\n      let data = this.generateData(columns, 20)\n\n      this.state = {\n        data: data,\n        columns: columns,\n      }\n    }\n    onDragComplete(result) {\n      console.log('onDragComplete:', result)\n    }\n    render() {\n      let { columns, data } = this.state\n      return (\n        <DraggableTable\n          rowKey=\"id\"\n          columns={columns}\n          data={data}\n          dragHandleSelector=\".customDragHandle\"\n          onDragComplete={this.onDragComplete.bind(this)}\n        />\n      )\n    }\n  }",__scope:{props:this?this.props:t,Playground:m.c,Props:m.d,flatten:g.flatten,DraggableTable:g.DraggableTable,Input:p.a,Icon:h.a,Button:b.a},style:{height:400},mdxType:"Playground"},function(n){function e(n){var t;Object(a.a)(this,e);var r=[{dataIndex:"id",title:"id",key:"id",width:150},{dataIndex:"column-1",key:"column-1",title:"column-1",width:100,render:function(){return Object(s.b)("span",{className:"customDragHandle",style:{backgroundColor:"#ccc"}},"drag me")}},{dataIndex:"column-2",key:"column-2",title:"column-2",width:150},{dataIndex:"column-3",key:"column-3",title:"column-3",align:"right"},{dataIndex:"column-4",key:"column-4",title:"column-4",width:100,align:"center"}],d=(t=Object(o.a)(this,Object(l.a)(e).call(this,n))).generateData(r,20);return t.state={data:d,columns:r},t}return Object(d.a)(e,n),Object(r.a)(e,[{key:"generateData",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Row";return new Array(e).fill(0).map((function(e,a){return n.reduce((function(n,e,o){return"id"!==e.dataIndex?n[e.dataIndex]=Math.floor(100*Math.random()+1):n[e.dataIndex]=t+" "+a+" - Col "+o,n}),{id:t+a,parentId:null})}))}}]),Object(r.a)(e,[{key:"onDragComplete",value:function(n){console.log("onDragComplete:",n)}},{key:"render",value:function(){var n=this.state,e=n.columns,t=n.data;return Object(s.b)(g.DraggableTable,{rowKey:"id",columns:e,data:t,dragHandleSelector:".customDragHandle",onDragComplete:this.onDragComplete.bind(this),mdxType:"DraggableTable"})}}]),e}(i.a.Component)),Object(s.b)("h2",{id:"\u4f7f\u7528tableref"},"\u4f7f\u7528tableRef"),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"DraggableTable\u57fa\u4e8e\u539f\u8868\u683c\u5c01\u88c5\uff0c\u8c03\u7528\u8868\u683capi\u9700\u8981\u901a\u8fc7tableRef\u51fd\u6570\u83b7\u53d6\u5185\u90e8\u8868\u683c\u5b9e\u4f8b")),Object(s.b)(m.c,{__position:5,__code:"class Demo extends React.Component {\n    generateData(columns, count = 20, prefix = 'Row') {\n      return new Array(count).fill(0).map((row, rowIndex) => {\n        return columns.reduce(\n          (rowData, column, columnIndex) => {\n            if (column.dataIndex !== 'id') {\n              rowData[column.dataIndex] = Math.floor(Math.random() * 100 + 1)\n            } else {\n              rowData[column.dataIndex] =\n                prefix + ' ' + rowIndex + ' - Col ' + columnIndex\n            }\n            return rowData\n          },\n          {\n            id: prefix + rowIndex,\n            parentId: null,\n          },\n        )\n      })\n    }\n    constructor(props) {\n      super(props)\n      const columns = [\n        {\n          dataIndex: 'id',\n          title: 'id',\n          key: 'id',\n          width: 150,\n        },\n        {\n          dataIndex: 'column-1',\n          key: 'column-1',\n          title: 'column-1',\n          width: 100,\n        },\n\n        {\n          dataIndex: 'column-2',\n          key: 'column-2',\n          title: 'column-2',\n          width: 150,\n        },\n\n        {\n          dataIndex: 'column-3',\n          key: 'column-3',\n          title: 'column-3',\n          align: 'right',\n        },\n        {\n          dataIndex: 'column-4',\n          key: 'column-4',\n          title: 'column-4',\n          width: 100,\n          align: 'center',\n        },\n      ]\n\n      let data = this.generateData(columns, 20)\n\n      this.state = {\n        data: data,\n        columns: columns,\n      }\n    }\n    scrollToItem(result) {\n      if (this.tableRef) {\n        this.tableRef.scrollToItem(15)\n      }\n    }\n    render() {\n      let { columns, data } = this.state\n      return (\n        <DraggableTable\n          rowKey=\"id\"\n          columns={columns}\n          data={data}\n          tableRef={ins => {\n            this.tableRef = ins\n          }}\n          header={() => {\n            return (\n              <Button onClick={this.scrollToItem.bind(this)}>\n                scroll to\n              </Button>\n            )\n          }}\n        />\n      )\n    }\n  }",__scope:{props:this?this.props:t,Playground:m.c,Props:m.d,flatten:g.flatten,DraggableTable:g.DraggableTable,Input:p.a,Icon:h.a,Button:b.a},style:{height:400},mdxType:"Playground"},function(n){function e(n){var t;Object(a.a)(this,e);var r=[{dataIndex:"id",title:"id",key:"id",width:150},{dataIndex:"column-1",key:"column-1",title:"column-1",width:100},{dataIndex:"column-2",key:"column-2",title:"column-2",width:150},{dataIndex:"column-3",key:"column-3",title:"column-3",align:"right"},{dataIndex:"column-4",key:"column-4",title:"column-4",width:100,align:"center"}],d=(t=Object(o.a)(this,Object(l.a)(e).call(this,n))).generateData(r,20);return t.state={data:d,columns:r},t}return Object(d.a)(e,n),Object(r.a)(e,[{key:"generateData",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Row";return new Array(e).fill(0).map((function(e,a){return n.reduce((function(n,e,o){return"id"!==e.dataIndex?n[e.dataIndex]=Math.floor(100*Math.random()+1):n[e.dataIndex]=t+" "+a+" - Col "+o,n}),{id:t+a,parentId:null})}))}}]),Object(r.a)(e,[{key:"scrollToItem",value:function(n){this.tableRef&&this.tableRef.scrollToItem(15)}},{key:"render",value:function(){var n=this,e=this.state,t=e.columns,a=e.data;return Object(s.b)(g.DraggableTable,{rowKey:"id",columns:t,data:a,tableRef:function(e){n.tableRef=e},header:function(){return Object(s.b)(b.a,{onClick:n.scrollToItem.bind(n),mdxType:"Button"},"scroll to")},mdxType:"DraggableTable"})}}]),e}(i.a.Component)),Object(s.b)("h2",{id:"\u62d6\u52a8\u7f16\u8f91"},"\u62d6\u52a8&\u7f16\u8f91"),Object(s.b)(m.c,{__position:6,__code:"class Demo extends React.Component {\n    generateData(columns, count = 20, prefix = 'Row') {\n      return new Array(count).fill(0).map((row, rowIndex) => {\n        return columns.reduce(\n          (rowData, column, columnIndex) => {\n            if (column.dataIndex !== 'id') {\n              rowData[column.dataIndex] = Math.floor(Math.random() * 100 + 1)\n            } else {\n              rowData[column.dataIndex] =\n                prefix + ' ' + rowIndex + ' - Col ' + columnIndex\n            }\n            return rowData\n          },\n          {\n            id: prefix + rowIndex,\n            parentId: null,\n          },\n        )\n      })\n    }\n    constructor(props) {\n      super(props)\n      const columns = [\n        {\n          dataIndex: 'id',\n          title: 'id',\n          key: 'id',\n          width: 150,\n        },\n        {\n          dataIndex: 'column-1',\n          key: 'column-1',\n          title: 'column-1',\n          width: 100,\n          editor: (value, row, index, onchange, ref) => {\n            return (\n              <Input\n                ref={ref}\n                defaultValue={value}\n                onChange={e => onchange({ 'column-1': e.target.value })}\n              />\n            )\n          },\n        },\n\n        {\n          dataIndex: 'column-2',\n          key: 'column-2',\n          title: 'column-2',\n          width: 150,\n        },\n\n        {\n          dataIndex: 'column-3',\n          key: 'column-3',\n          title: 'column-3',\n          align: 'right',\n        },\n        {\n          dataIndex: 'column-4',\n          key: 'column-4',\n          title: 'column-4',\n          width: 100,\n          align: 'center',\n        },\n      ]\n\n      let data = this.generateData(columns, 20)\n\n      this.state = {\n        data: data,\n        columns: columns,\n      }\n    }\n    onDragComplete(result) {\n      console.log('onDragComplete:', result)\n    }\n    onEditSave(changedRows, newRows, editType) {\n      this.setState({ data: newRows })\n    }\n    render() {\n      let { columns, data } = this.state\n      return (\n        <DraggableTable\n          rowKey=\"id\"\n          editable={true}\n          useDragHandle={true}\n          onEditSave={this.onEditSave.bind(this)}\n          columns={columns}\n          data={data}\n          onDragComplete={this.onDragComplete.bind(this)}\n        />\n      )\n    }\n  }",__scope:{props:this?this.props:t,Playground:m.c,Props:m.d,flatten:g.flatten,DraggableTable:g.DraggableTable,Input:p.a,Icon:h.a,Button:b.a},style:{height:400},mdxType:"Playground"},function(n){function e(n){var t;Object(a.a)(this,e);var r=[{dataIndex:"id",title:"id",key:"id",width:150},{dataIndex:"column-1",key:"column-1",title:"column-1",width:100,editor:function(n,e,t,a,o){return Object(s.b)(p.a,{ref:o,defaultValue:n,onChange:function(n){return a({"column-1":n.target.value})},mdxType:"Input"})}},{dataIndex:"column-2",key:"column-2",title:"column-2",width:150},{dataIndex:"column-3",key:"column-3",title:"column-3",align:"right"},{dataIndex:"column-4",key:"column-4",title:"column-4",width:100,align:"center"}],d=(t=Object(o.a)(this,Object(l.a)(e).call(this,n))).generateData(r,20);return t.state={data:d,columns:r},t}return Object(d.a)(e,n),Object(r.a)(e,[{key:"generateData",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Row";return new Array(e).fill(0).map((function(e,a){return n.reduce((function(n,e,o){return"id"!==e.dataIndex?n[e.dataIndex]=Math.floor(100*Math.random()+1):n[e.dataIndex]=t+" "+a+" - Col "+o,n}),{id:t+a,parentId:null})}))}}]),Object(r.a)(e,[{key:"onDragComplete",value:function(n){console.log("onDragComplete:",n)}},{key:"onEditSave",value:function(n,e,t){this.setState({data:e})}},{key:"render",value:function(){var n=this.state,e=n.columns,t=n.data;return Object(s.b)(g.DraggableTable,{rowKey:"id",editable:!0,useDragHandle:!0,onEditSave:this.onEditSave.bind(this),columns:e,data:t,onDragComplete:this.onDragComplete.bind(this),mdxType:"DraggableTable"})}}]),e}(i.a.Component)))}w&&w===Object(w)&&Object.isExtensible(w)&&Object.defineProperty(w,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"doc\\Draggable\\index.mdx"}}),w.isMDXComponent=!0}}]);
//# sourceMappingURL=doc-draggable-index.519389e7c1edbac187e4.js.map