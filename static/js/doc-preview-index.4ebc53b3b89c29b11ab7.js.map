{"version":3,"sources":["e:/WebRoot/tablex/packages/siteCN/doc/Preview/treeSelection.js","e:/WebRoot/tablex/packages/siteCN/doc/Preview/index.mdx"],"names":["Demo","props","columns","dataIndex","title","key","width","align","data","generateData","children","state","count","prefix","Array","fill","map","row","rowIndex","reduce","rowData","column","columnIndex","Math","floor","random","id","parentId","this","rowKey","autoHeight","selectMode","selectedRowKeys","onRow2","onClick","console","log","onSelect","a","b","c","onSelectAll","onUnSelect","onUnSelectAll","onSelectChange","rowSelection","type","areaSelectEnabled","selectOnCheck","checkOnSelect","selectType","checkStrictly","React","Component","layoutProps","MDXLayout","MDXContent","components","mdxType","__position","__code","__scope","Playground","Props","Preview","isMDXComponent"],"mappings":"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","file":"static/js/doc-preview-index.ef943771.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Table } from \"tablex\";\n\nclass Demo extends React.Component {\n  generateData(columns, count = 20, prefix = \"Row\") {\n    return new Array(count).fill(0).map((row, rowIndex) => {\n      return columns.reduce(\n        (rowData, column, columnIndex) => {\n          if (column.dataIndex !== \"id\") {\n            rowData[column.dataIndex] = Math.floor(Math.random() * 100 + 1);\n          } else {\n            rowData[column.dataIndex] =\n              prefix + \" \" + rowIndex + \" - Col \" + columnIndex;\n          }\n\n          return rowData;\n        },\n        {\n          id: prefix + rowIndex,\n          parentId: null\n        }\n      );\n    });\n  }\n  constructor(props) {\n    super(props);\n    const columns = [\n      {\n        dataIndex: \"id\",\n        title: \"id\",\n        key: \"id\",\n        width: 150\n      },\n      {\n        dataIndex: \"column-1\",\n        key: \"column-1\",\n        title: \"column-1\",\n        width: 100\n      },\n\n      {\n        dataIndex: \"column-2\",\n        key: \"column-2\",\n        title: \"column-2\",\n        width: 150,\n        align: \"center\"\n      },\n\n      {\n        dataIndex: \"column-3\",\n        key: \"column-3\",\n        title: \"column-3\",\n        align: \"right\"\n      },\n      {\n        dataIndex: \"column-4\",\n        key: \"column-4\",\n        title: \"column-4\",\n        width: 100,\n        align: \"center\"\n      }\n    ];\n\n    let data = this.generateData(columns, 20);\n\n    data[0].children = this.generateData(columns, 5, \"Row-0-children-\");\n    data[0].children[0].children = this.generateData(\n      columns,\n      5,\n      \"Row-0-children-0-\"\n    );\n\n    data[3].children = this.generateData(columns, 5, \"Row-3-children-\");\n    data[3].children[0].children = this.generateData(\n      columns,\n      5,\n      \"Row-3-children-0-\"\n    );\n\n    this.state = {\n      data: data,\n      columns: columns\n    };\n  }\n  render() {\n    let { columns, data } = this.state;\n    return (\n      <Table\n        rowKey=\"id\"\n        autoHeight={true}\n        columns={columns}\n        data={data}\n        selectMode=\"multiple\"\n        selectedRowKeys={[\"Row 1 - Col 0\"]}\n        onRow2={() => {\n          return {\n            onClick: () => {\n              console.log(\"onClick\");\n              //this.forceUpdate();\n            }\n          };\n        }}\n        onSelect={(a, b, c) => {\n          console.log(\"onSelect\", a, b, c);\n        }}\n        onSelectAll={(a, b, c) => {\n          console.log(\"onSelectAll\", a, b, c);\n        }}\n        onUnSelect={(a, b, c) => {\n          console.log(\"onUnSelect\", a, b, c);\n        }}\n        onUnSelectAll={(a, b, c) => {\n          console.log(\"onUnSelectAll\", a, b, c);\n        }}\n        onSelectChange={(a, b, c) => {\n          console.log(\"onSelectChange\", a, b, c);\n        }}\n        rowSelection={{\n          type: \"checkbox\",\n          areaSelectEnabled: true,\n          selectOnCheck: false, //false\n          checkOnSelect: false,\n          selectType: \"single\",\n          // selectedRowKeys:[\"Row 1 - Col 0\"],\n          // selectInverted:false,\n          checkStrictly: true,\n          onSelect: (a, b, c) => {\n            console.log(\"onSelect：\", a, b, c);\n          }\n          // onCheck:(a,b,c)=>{\n          //   console.log(\"onCheck\",a,b,c)\n          // }\n        }}\n      />\n    );\n  }\n}\n\nexport default Demo;\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground, Props } from \"docz\";\nimport 'antd/dist/antd.css';\nimport Preview from \"./treeSelection.js\";\n //import Preview from \"./selection.js\";\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"features-preview\"\n    }}>{`Features Preview`}</h1>\n    <h2 {...{\n      \"id\": \"示例\"\n    }}>{`示例`}</h2>\n    <Playground __position={0} __code={'<Preview />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Preview\n    }} mdxType=\"Playground\">\n  <Preview mdxType=\"Preview\" />\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}