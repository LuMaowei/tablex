{"remainingRequest":"E:\\WebRoot\\tablex\\tablex\\node_modules\\thread-loader\\dist\\cjs.js??ref--5-1!E:\\WebRoot\\tablex\\tablex\\node_modules\\docz-core\\node_modules\\babel-loader\\lib\\index.js??ref--5-2!E:\\WebRoot\\tablex\\tablex\\node_modules\\source-map-loader\\index.js!E:\\WebRoot\\tablex\\tablex\\examples\\stickyRow.js","dependencies":[{"path":"E:\\WebRoot\\tablex\\tablex\\examples\\stickyRow.js","mtime":1559355624896},{"path":"E:\\WebRoot\\tablex\\tablex\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1553685911267},{"path":"E:\\WebRoot\\tablex\\tablex\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1554538856109},{"path":"E:\\WebRoot\\tablex\\tablex\\node_modules\\docz-core\\node_modules\\babel-loader\\lib\\index.js","mtime":1553685910943},{"path":"E:\\WebRoot\\tablex\\tablex\\node_modules\\source-map-loader\\index.js","mtime":1553685912297}],"contextDependencies":[],"result":["import _objectWithoutProperties from \"E:\\\\WebRoot\\\\tablex\\\\tablex\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"E:\\\\WebRoot\\\\tablex\\\\tablex\\\\examples\\\\stickyRow.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React, { createContext, forwardRef, useContext } from \"react\";\nimport { render } from \"react-dom\";\nimport \"./styles.css\";\nimport { FixedSizeList as List } from \"react-window\";\nvar StickyListContext = createContext();\nStickyListContext.displayName = \"StickyListContext\";\n\nvar ItemWrapper = function ItemWrapper(_ref) {\n  var data = _ref.data,\n      index = _ref.index,\n      style = _ref.style;\n  var ItemRenderer = data.ItemRenderer,\n      stickyIndices = data.stickyIndices;\n\n  if (stickyIndices && stickyIndices.includes(index)) {\n    return null;\n  }\n\n  return React.createElement(ItemRenderer, {\n    index: index,\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  });\n};\n\nvar Row = function Row(_ref2) {\n  var index = _ref2.index,\n      style = _ref2.style;\n  return React.createElement(\"div\", {\n    className: \"row\",\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Row \", index);\n};\n\nvar StickyRow = function StickyRow(_ref3) {\n  var index = _ref3.index,\n      style = _ref3.style;\n  return React.createElement(\"div\", {\n    className: \"sticky\",\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Sticky Row \", index);\n};\n\nvar innerElementType = forwardRef(function (_ref4, ref) {\n  var children = _ref4.children,\n      rest = _objectWithoutProperties(_ref4, [\"children\"]);\n\n  return React.createElement(StickyListContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, function (_ref5) {\n    var stickyIndices = _ref5.stickyIndices;\n    return React.createElement(\"div\", Object.assign({\n      ref: ref\n    }, rest, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), stickyIndices.map(function (index) {\n      return React.createElement(StickyRow, {\n        index: index,\n        key: index,\n        style: {\n          top: index * 35,\n          left: 0,\n          width: \"100%\",\n          height: 35\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      });\n    }), children);\n  });\n});\n\nvar StickyList = function StickyList(_ref6) {\n  var children = _ref6.children,\n      stickyIndices = _ref6.stickyIndices,\n      rest = _objectWithoutProperties(_ref6, [\"children\", \"stickyIndices\"]);\n\n  return React.createElement(StickyListContext.Provider, {\n    value: {\n      ItemRenderer: children,\n      stickyIndices: stickyIndices\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(List, Object.assign({\n    itemData: {\n      ItemRenderer: children,\n      stickyIndices: stickyIndices\n    }\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), ItemWrapper));\n};\n\nvar Example = function Example() {\n  return React.createElement(StickyList, {\n    height: 150,\n    innerElementType: innerElementType,\n    itemCount: 1000,\n    itemSize: 35,\n    stickyIndices: [0, 1],\n    width: 300,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, Row);\n};\n\nvar _default = Example;\nexport default _default;\n\nif (typeof Example !== 'undefined' && Example && Example === Object(Example) && Object.isExtensible(Example)) {\n  Object.defineProperty(Example, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"Example\",\n      filename: \"examples\\\\stickyRow.js\"\n    }\n  });\n}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(StickyListContext, \"StickyListContext\", \"E:\\\\WebRoot\\\\tablex\\\\tablex\\\\examples\\\\stickyRow.js\");\n  reactHotLoader.register(ItemWrapper, \"ItemWrapper\", \"E:\\\\WebRoot\\\\tablex\\\\tablex\\\\examples\\\\stickyRow.js\");\n  reactHotLoader.register(Row, \"Row\", \"E:\\\\WebRoot\\\\tablex\\\\tablex\\\\examples\\\\stickyRow.js\");\n  reactHotLoader.register(StickyRow, \"StickyRow\", \"E:\\\\WebRoot\\\\tablex\\\\tablex\\\\examples\\\\stickyRow.js\");\n  reactHotLoader.register(innerElementType, \"innerElementType\", \"E:\\\\WebRoot\\\\tablex\\\\tablex\\\\examples\\\\stickyRow.js\");\n  reactHotLoader.register(StickyList, \"StickyList\", \"E:\\\\WebRoot\\\\tablex\\\\tablex\\\\examples\\\\stickyRow.js\");\n  reactHotLoader.register(Example, \"Example\", \"E:\\\\WebRoot\\\\tablex\\\\tablex\\\\examples\\\\stickyRow.js\");\n  reactHotLoader.register(_default, \"default\", \"E:\\\\WebRoot\\\\tablex\\\\tablex\\\\examples\\\\stickyRow.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["E:\\WebRoot\\tablex\\tablex\\examples\\stickyRow.js"],"names":["React","createContext","forwardRef","useContext","render","FixedSizeList","List","StickyListContext","displayName","ItemWrapper","data","index","style","ItemRenderer","stickyIndices","includes","Row","StickyRow","innerElementType","ref","children","rest","map","top","left","width","height","StickyList","Example"],"mappings":"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","sourcesContent":["import React, { createContext, forwardRef, useContext } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport \"./styles.css\";\r\nimport { FixedSizeList as List } from \"react-window\";\r\n\r\nconst StickyListContext = createContext();\r\nStickyListContext.displayName = \"StickyListContext\";\r\n\r\nconst ItemWrapper = ({ data, index, style }) => {\r\n  const { ItemRenderer, stickyIndices } = data;\r\n  if (stickyIndices && stickyIndices.includes(index)) {\r\n    return null;\r\n  }\r\n  return <ItemRenderer index={index} style={style} />;\r\n};\r\n\r\nconst Row = ({ index, style }) => (\r\n  <div className=\"row\" style={style}>\r\n    Row {index}\r\n  </div>\r\n);\r\n\r\nconst StickyRow = ({ index, style }) => (\r\n  <div className=\"sticky\" style={style}>\r\n    Sticky Row {index}\r\n  </div>\r\n);\r\n\r\nconst innerElementType = forwardRef(({ children, ...rest }, ref) => (\r\n  <StickyListContext.Consumer>\r\n    {({ stickyIndices }) => (\r\n      <div ref={ref} {...rest}>\r\n        {stickyIndices.map(index => (\r\n          <StickyRow\r\n            index={index}\r\n            key={index}\r\n            style={{ top: index * 35, left: 0, width: \"100%\", height: 35 }}\r\n          />\r\n        ))}\r\n\r\n        {children}\r\n      </div>\r\n    )}\r\n  </StickyListContext.Consumer>\r\n));\r\n\r\nconst StickyList = ({ children, stickyIndices, ...rest }) => (\r\n  <StickyListContext.Provider value={{ ItemRenderer: children, stickyIndices }}>\r\n    <List itemData={{ ItemRenderer: children, stickyIndices }} {...rest}>\r\n      {ItemWrapper}\r\n    </List>\r\n  </StickyListContext.Provider>\r\n);\r\n\r\n\r\nconst Example=()=>{\r\n\r\n  return <StickyList\r\n  height={150}\r\n  innerElementType={innerElementType}\r\n  itemCount={1000}\r\n  itemSize={35}\r\n  stickyIndices={[0, 1]}\r\n  width={300}\r\n>\r\n  {Row}\r\n</StickyList>\r\n}\r\n\r\n \r\n\r\nexport default Example;"]}]}