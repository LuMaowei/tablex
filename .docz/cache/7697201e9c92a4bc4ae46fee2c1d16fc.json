{"remainingRequest":"/home/nexx/develop/tablex/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/nexx/develop/tablex/node_modules/babel-loader/lib/index.js??ref--5-2!/home/nexx/develop/tablex/node_modules/source-map-loader/index.js!/home/nexx/develop/tablex/src/components/body.js","dependencies":[{"path":"/home/nexx/develop/tablex/src/components/body.js","mtime":1555836040894},{"path":"/home/nexx/develop/tablex/node_modules/cache-loader/dist/cjs.js","mtime":1555838893487},{"path":"/home/nexx/develop/tablex/node_modules/thread-loader/dist/cjs.js","mtime":1555838894922},{"path":"/home/nexx/develop/tablex/node_modules/babel-loader/lib/index.js","mtime":1555838893306},{"path":"/home/nexx/develop/tablex/node_modules/source-map-loader/index.js","mtime":1555838894829}],"contextDependencies":[],"result":["import _objectSpread from\"/home/nexx/develop/tablex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";import _classCallCheck from\"/home/nexx/develop/tablex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/nexx/develop/tablex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/nexx/develop/tablex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/nexx/develop/tablex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/nexx/develop/tablex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import{VariableSizeGrid as Grid}from\"react-window\";import AutoSizer from\"react-virtualized-auto-sizer\";import LoadingIcon from\"./loadingIcon\";import NoDataMsg from\"./noDataMsg\";var TableBody=/*#__PURE__*/function(_React$Component){_inherits(TableBody,_React$Component);function TableBody(){var _getPrototypeOf2;var _this;_classCallCheck(this,TableBody);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(TableBody)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.getColumn=function(index){var columnLeafs=_this.props.columnLeafs;return columnLeafs[index];};_this.getColumnWidth=function(){var columnLeafs=_this.props.columnLeafs;var cw=0;columnLeafs.forEach(function(d){cw+=d.width||100;});return cw;};_this.columnWidth=function(index,width){var column=_this.getColumn(index);var cw=_this.getColumnWidth();if(column){return column.width||100;}return width-cw-6;};_this.isLoadingChildren=function(key){var loadingKeys=_this.props.loadingKeys;return loadingKeys.indexOf(key)>-1;};_this.expandableEl=function(columnIndex,rowIndex,row){var _this$props=_this.props,rowIndent=_this$props.rowIndent,_this$props$expandedK=_this$props.expandedKeys,expandedKeys=_this$props$expandedK===void 0?[]:_this$props$expandedK,rowKey=_this$props.rowKey;var indent=(row.__depth||0)*rowIndent;var key=row[rowKey];var isLoading=_this.isLoadingChildren(key);var isExpand=false;var icon=\"+\";if(expandedKeys.indexOf(key)>-1){isExpand=true;icon=\"-\";}else{isExpand=false;icon=\"+\";}var iconFlag=React.createElement(\"span\",{className:\"tablex-row-expand-placeholder\"});if(row.children){iconFlag=React.createElement(\"span\",{className:\"tablex-row-expand-icon\",onClick:function onClick(){_this.props.onExpandChange(isExpand,key);}},icon);}if(isLoading===true){iconFlag=React.createElement(LoadingIcon,null);}if(columnIndex===0){return React.createElement(React.Fragment,null,indent>0?React.createElement(\"span\",{className:\"tablex-row-indent\",style:{marginLeft:indent}}):null,iconFlag);}return null;};_this.renderCell=function(_ref){var columnIndex=_ref.columnIndex,rowIndex=_ref.rowIndex,style=_ref.style;var dataSource=_this.props.dataSource;if(dataSource.length===0){return React.createElement(\"div\",null);}var column=_this.getColumn(columnIndex);if(column){var c=column.dataIndex;var row=dataSource[rowIndex];var expandableEl=_this.expandableEl(columnIndex,rowIndex,row);var cellData=row[c];if(typeof column.render===\"function\"){return React.createElement(\"div\",{className:\"tablex-cell\",style:style},expandableEl,\" \",column.render(cellData,row,rowIndex));}else{return React.createElement(\"div\",{className:\"tablex-cell\",style:style},expandableEl,cellData);}}return React.createElement(\"div\",{className:\"tablex-cell\",style:_objectSpread({},style,{borderRight:\"none\"})});};return _this;}_createClass(TableBody,[{key:\"render\",value:function render(){var _this2=this;var _this$props2=this.props,columns=_this$props2.columns,columnLeafs=_this$props2.columnLeafs,dataSource=_this$props2.dataSource,onScroll=_this$props2.onScroll;var columnWidth=0;columnLeafs.forEach(function(d){columnWidth+=d.width||100;});var rowCount=dataSource.length;return React.createElement(AutoSizer,null,function(_ref2){var height=_ref2.height,width=_ref2.width;var len=columnLeafs.length;if(width>columnWidth){len=len+1;}var NoData=null;if(dataSource.length===0){rowCount=1;NoData=React.createElement(NoDataMsg,null);}return React.createElement(React.Fragment,null,NoData,React.createElement(Grid,{columnCount:len,columnWidth:function columnWidth(i){return _this2.columnWidth(i,width);},height:height,rowCount:rowCount,rowHeight:function rowHeight(){return 35;},width:width,onScroll:onScroll},_this2.renderCell));});}}]);return TableBody;}(React.Component);TableBody.defaultProps={columns:[],columnLeafs:[],dataSource:[],rowIndent:20,expandedKeys:[],loadingKeys:[]};export default TableBody;if(typeof TableBody!=='undefined'&&TableBody&&TableBody===Object(TableBody)&&Object.isExtensible(TableBody)){Object.defineProperty(TableBody,'__filemeta',{enumerable:true,configurable:true,value:{name:\"TableBody\",filename:\"src/components/body.js\"}});}",{"version":3,"sources":["/home/nexx/develop/tablex/src/components/body.js"],"names":["React","VariableSizeGrid","Grid","AutoSizer","LoadingIcon","NoDataMsg","TableBody","getColumn","index","columnLeafs","props","getColumnWidth","cw","forEach","d","width","columnWidth","column","isLoadingChildren","key","loadingKeys","indexOf","expandableEl","columnIndex","rowIndex","row","rowIndent","expandedKeys","rowKey","indent","__depth","isLoading","isExpand","icon","iconFlag","children","onExpandChange","marginLeft","renderCell","style","dataSource","length","c","dataIndex","cellData","render","borderRight","columns","onScroll","rowCount","height","len","NoData","i","Component","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { VariableSizeGrid as Grid } from \"react-window\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport LoadingIcon from \"./loadingIcon\";\nimport NoDataMsg from \"./noDataMsg\";\n\nclass TableBody extends React.Component {\n  getColumn = index => {\n    let { columnLeafs } = this.props;\n\n    return columnLeafs[index];\n  };\n\n  getColumnWidth = () => {\n    let { columnLeafs } = this.props;\n\n    let cw = 0;\n    columnLeafs.forEach(d => {\n      cw += d.width || 100;\n    });\n\n    return cw;\n  };\n\n  columnWidth = (index, width) => {\n    let column = this.getColumn(index);\n    let cw = this.getColumnWidth();\n\n    if (column) {\n      return column.width || 100;\n    }\n\n    return width - cw - 6;\n  };\n\n  /**\n   * 行是否正在加载子级\n   */\n  isLoadingChildren = key => {\n    let { loadingKeys } = this.props;\n\n    return loadingKeys.indexOf(key) > -1;\n  };\n\n  expandableEl = (columnIndex, rowIndex, row) => {\n    let { rowIndent, expandedKeys = [], rowKey } = this.props;\n\n    let indent = (row.__depth || 0) * rowIndent;\n\n    let key = row[rowKey];\n\n    let isLoading = this.isLoadingChildren(key);\n\n    let isExpand = false;\n    let icon = \"+\";\n\n    if (expandedKeys.indexOf(key) > -1) {\n      isExpand = true;\n      icon = \"-\";\n    } else {\n      isExpand = false;\n      icon = \"+\";\n    }\n\n    let iconFlag = <span className=\"tablex-row-expand-placeholder\" />;\n\n    if (row.children) {\n      iconFlag = (\n        <span\n          className=\"tablex-row-expand-icon\"\n          onClick={() => {\n            this.props.onExpandChange(isExpand, key);\n          }}\n        >\n          {icon}\n        </span>\n      );\n    }\n\n    if (isLoading === true) {\n      iconFlag = <LoadingIcon />;\n    }\n\n    if (columnIndex === 0) {\n      return (\n        <>\n          {indent > 0 ? (\n            <span\n              className=\"tablex-row-indent\"\n              style={{ marginLeft: indent }}\n            />\n          ) : null}\n          {iconFlag}\n        </>\n      );\n    }\n    return null;\n  };\n\n  renderCell = ({ columnIndex, rowIndex, style }) => {\n    let { dataSource } = this.props;\n\n    if (dataSource.length === 0) {\n      return <div />;\n    }\n\n    let column = this.getColumn(columnIndex);\n\n    if (column) {\n      let c = column.dataIndex;\n      let row = dataSource[rowIndex];\n\n      let expandableEl = this.expandableEl(columnIndex, rowIndex, row);\n\n      let cellData = row[c];\n\n      if (typeof column.render === \"function\") {\n        return (\n          <div className=\"tablex-cell\" style={style}>\n            {expandableEl} {column.render(cellData, row, rowIndex)}\n          </div>\n        );\n      } else {\n        return (\n          <div className=\"tablex-cell\" style={style}>\n            {expandableEl}\n            {cellData}\n          </div>\n        );\n      }\n    }\n\n    return (\n      <div className=\"tablex-cell\" style={{ ...style, borderRight: \"none\" }} />\n    );\n  };\n\n  render() {\n    let { columns, columnLeafs, dataSource, onScroll } = this.props;\n\n    let columnWidth = 0;\n    columnLeafs.forEach(d => {\n      columnWidth += d.width || 100;\n    });\n\n    let rowCount = dataSource.length;\n\n    return (\n      <AutoSizer>\n        {({ height, width }) => {\n          let len = columnLeafs.length;\n\n          if (width > columnWidth) {\n            len = len + 1;\n          }\n\n          let NoData = null;\n\n          if (dataSource.length === 0) {\n            rowCount = 1;\n            NoData = <NoDataMsg />;\n          }\n\n          return (\n            <>\n              {NoData}\n              <Grid\n                columnCount={len}\n                columnWidth={i => this.columnWidth(i, width)}\n                height={height}\n                rowCount={rowCount}\n                rowHeight={() => 35}\n                width={width}\n                onScroll={onScroll}\n              >\n                {this.renderCell}\n              </Grid>\n            </>\n          );\n        }}\n      </AutoSizer>\n    );\n  }\n}\n\nTableBody.defaultProps = {\n  columns: [],\n  columnLeafs: [],\n  dataSource: [],\n  rowIndent: 20,\n  expandedKeys: [],\n  loadingKeys: []\n};\n\nTableBody.propTypes = {\n  /**\n   * 主要用于行展开\n   */\n  rowKey: PropTypes.string.isRequired,\n  columns: PropTypes.array.isRequired,\n  columnLeafs: PropTypes.array.isRequired,\n  dataSource: PropTypes.array.isRequired,\n  onScroll: PropTypes.func,\n\n  /**\n   * @isExpand 是否展开\n   * @key 受影响的行数据key\n   */\n  onExpandChange: PropTypes.func,\n  rowIndent: PropTypes.number,\n  expandedKeys: PropTypes.array,\n  loadingKeys: PropTypes.array\n};\n\nexport default TableBody;\n"]}]}