{"remainingRequest":"E:\\WebRoot\\tablex\\tablex\\node_modules\\thread-loader\\dist\\cjs.js??ref--5-1!E:\\WebRoot\\tablex\\tablex\\node_modules\\babel-loader\\lib\\index.js??ref--5-2!E:\\WebRoot\\tablex\\tablex\\node_modules\\source-map-loader\\index.js!E:\\WebRoot\\tablex\\tablex\\src\\index.js","dependencies":[{"path":"E:\\WebRoot\\tablex\\tablex\\src\\index.js","mtime":1559355624901},{"path":"E:\\WebRoot\\tablex\\tablex\\node_modules\\umi-library\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1559355688594},{"path":"E:\\WebRoot\\tablex\\tablex\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1554538856109},{"path":"E:\\WebRoot\\tablex\\tablex\\node_modules\\babel-loader\\lib\\index.js","mtime":1553685910943},{"path":"E:\\WebRoot\\tablex\\tablex\\node_modules\\source-map-loader\\index.js","mtime":1553685912297}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["E:\\WebRoot\\tablex\\tablex\\src\\index.js"],"names":["React","PropTypes","TableBody","TableHead","treeToList","getDataListWithExpanded","getScrollbarWidth","LoadingMsg","NoDataMsg","scrollbarWidth","Table","state","rowKey","undefined","columns","columnLeafs","dataSource","dataList","expandedKeys","loadingKeys","onExpandChange","isExpand","key","collapse","expand","nextExpandedKeys","i","indexOf","push","setState","props","loadChildrenData","splice","setLoadingChildren","bl","callback","nextKeys","row","find","d","res","constructor","name","then","childrens","children","e","onBodyScroll","scrollLeft","head","headRef","scrollTo","loading","ins","length","nextProps","prevState","leafs","nextState","Component","defaultProps","propTypes","array","isRequired","string","onExpandedRowsChange","func","rowIndent","number","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TableBody from \"./base/fixedBody\";\r\nimport TableHead from \"./base/fixedHead\";\r\nimport \"./index.css\";\r\nimport {\r\n  treeToList,\r\n  getDataListWithExpanded,\r\n  getScrollbarWidth\r\n} from \"./helper\";\r\n\r\nimport LoadingMsg from \"./components/loading\";\r\nimport NoDataMsg from \"./components/noDataMsg\";\r\n\r\nlet scrollbarWidth = getScrollbarWidth();\r\n\r\nclass Table extends React.Component {\r\n  state = {\r\n    rowKey: undefined,\r\n    columns: [],\r\n    columnLeafs: [],\r\n    dataSource: [],\r\n    dataList: [],\r\n\r\n    expandedKeys: [],\r\n    loadingKeys: []\r\n  };\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    let { expandedKeys } = prevState;\r\n\r\n    let { rowKey, columns, dataSource, loading } = nextProps;\r\n\r\n    let { leafs: columnLeafs } = treeToList(columns);\r\n\r\n    let dataList = dataSource;\r\n\r\n    if (expandedKeys.length > 0) {\r\n      dataList = getDataListWithExpanded(dataSource, expandedKeys, rowKey);\r\n    }\r\n\r\n    let nextState = {\r\n      rowKey,\r\n      columns,\r\n      dataSource,\r\n      columnLeafs,\r\n      dataList,\r\n      loading: !!loading\r\n    };\r\n\r\n    return nextState;\r\n  }\r\n\r\n  /**\r\n   * @isExpand 是否展开\r\n   * @key 受影响的行数据key\r\n   */\r\n  onExpandChange = (isExpand, key) => {\r\n    isExpand === true ? this.collapse(key) : this.expand(key);\r\n  };\r\n\r\n  /**\r\n   * 展开\r\n   */\r\n  expand = key => {\r\n    let { expandedKeys } = this.state;\r\n\r\n    let nextExpandedKeys = [...expandedKeys];\r\n\r\n    let i = expandedKeys.indexOf(key);\r\n\r\n    if (i === -1) {\r\n      nextExpandedKeys.push(key);\r\n    }\r\n\r\n    this.setState({\r\n      expandedKeys: nextExpandedKeys\r\n    });\r\n\r\n    if (typeof this.props.loadChildrenData === \"function\") {\r\n      this.loadChildrenData(key);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 折叠\r\n   */\r\n  collapse = key => {\r\n    let { expandedKeys } = this.state;\r\n\r\n    let nextExpandedKeys = [...expandedKeys];\r\n\r\n    let i = expandedKeys.indexOf(key);\r\n\r\n    if (i > -1) {\r\n      nextExpandedKeys.splice(i, 1);\r\n    }\r\n\r\n    this.setState({\r\n      expandedKeys: nextExpandedKeys\r\n    });\r\n  };\r\n\r\n  /**\r\n   * 设置行的子级加载状态\r\n   */\r\n  setLoadingChildren = (key, bl, callback) => {\r\n    let { loadingKeys } = this.state;\r\n\r\n    let i = loadingKeys.indexOf(key);\r\n\r\n    let nextKeys = [...loadingKeys];\r\n\r\n    if (bl === true) {\r\n      if (i === -1) {\r\n        nextKeys.push(key);\r\n      }\r\n    } else {\r\n      if (i > -1) {\r\n        nextKeys.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    return this.setState({ loadingKeys: nextKeys }, callback);\r\n  };\r\n\r\n  /**\r\n   * 异步加载子级数据\r\n   */\r\n  loadChildrenData = key => {\r\n    let { dataList, rowKey } = this.state;\r\n\r\n    let row = dataList.find(d => d[rowKey] === key);\r\n\r\n    let res = this.props.loadChildrenData(row);\r\n\r\n    if (res && res.constructor.name === \"Promise\") {\r\n      this.setLoadingChildren(key, true);\r\n\r\n      res.then(childrens => {\r\n        if (childrens) {\r\n          row.children = childrens;\r\n        }\r\n\r\n        this.setLoadingChildren(key, false);\r\n      });\r\n\r\n      res.catch(e => {\r\n        this.setLoadingChildren(key, false);\r\n      });\r\n    }\r\n  };\r\n\r\n  onBodyScroll = ({ scrollLeft }) => {\r\n    let head = this.headRef;\r\n    head && head.scrollTo({ scrollLeft });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      columns,\r\n      columnLeafs,\r\n      dataList,\r\n      rowKey,\r\n      expandedKeys,\r\n      loadingKeys,\r\n      loading\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"tablex\">\r\n        <div className=\"tablex-head\" >\r\n          <TableHead\r\n            columns={columns}\r\n            columnLeafs={columnLeafs}\r\n            initRef={ins => (this.headRef = ins)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"tablex-body\">\r\n          <TableBody\r\n            rowKey={rowKey}\r\n            columns={columns}\r\n            columnLeafs={columnLeafs}\r\n            dataSource={dataList}\r\n            onScroll={this.onBodyScroll}\r\n            onExpandChange={this.onExpandChange}\r\n            expandedKeys={expandedKeys}\r\n            loadingKeys={loadingKeys}\r\n            scrollbarWidth={scrollbarWidth}\r\n          />\r\n          {dataList.length === 0 ? <NoDataMsg /> : null}\r\n          {loading === true ? <LoadingMsg /> : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTable.defaultProps = {\r\n  columns: [],\r\n  dataSource: [],\r\n  loading: false\r\n};\r\n\r\nTable.propTypes = {\r\n  /**\r\n   * 表格列\r\n   *\r\n   */\r\n  columns: PropTypes.array.isRequired,\r\n\r\n  /**\r\n   * 表格数据\r\n   */\r\n  dataSource: PropTypes.array.isRequired,\r\n  /** 数据行主键字段\r\n   * 主要用于行展开\r\n   */\r\n  rowKey: PropTypes.string.isRequired,\r\n  /** 行展开变化事件\r\n   * @expandedRows 展开的行\r\n   */\r\n  onExpandedRowsChange: PropTypes.func,\r\n  rowIndent: PropTypes.number,\r\n  expandedKeys: PropTypes.array,\r\n  loadChildrenData: PropTypes.func,\r\n  loading: PropTypes.bool\r\n};\r\n\r\nexport default Table;\r\n"]}]}