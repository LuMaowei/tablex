{"remainingRequest":"E:\\WebRoot\\tablex\\node_modules\\thread-loader\\dist\\cjs.js??ref--5-1!E:\\WebRoot\\tablex\\node_modules\\babel-loader\\lib\\index.js??ref--5-2!E:\\WebRoot\\tablex\\node_modules\\source-map-loader\\index.js!E:\\WebRoot\\tablex\\src\\base\\body.js","dependencies":[{"path":"E:\\WebRoot\\tablex\\src\\base\\body.js","mtime":1559295991545},{"path":"E:\\WebRoot\\tablex\\node_modules\\umi-library\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1559204841349},{"path":"E:\\WebRoot\\tablex\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1554780430526},{"path":"E:\\WebRoot\\tablex\\node_modules\\babel-loader\\lib\\index.js","mtime":1551944504366},{"path":"E:\\WebRoot\\tablex\\node_modules\\source-map-loader\\index.js","mtime":1551944506105}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRTpcXFdlYlJvb3RcXHRhYmxleFxcbm9kZV9tb2R1bGVzXFx1bWktbGlicmFyeVxcbm9kZV9tb2R1bGVzXFxkb2N6XFxub2RlX21vZHVsZXNcXGJhYmVsLXByZXNldC1yZWFjdC1hcHBcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZCI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiRTpcXFdlYlJvb3RcXHRhYmxleFxcbm9kZV9tb2R1bGVzXFx1bWktbGlicmFyeVxcbm9kZV9tb2R1bGVzXFxkb2N6XFxub2RlX21vZHVsZXNcXGJhYmVsLXByZXNldC1yZWFjdC1hcHBcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICJFOlxcV2ViUm9vdFxcdGFibGV4XFxub2RlX21vZHVsZXNcXHVtaS1saWJyYXJ5XFxub2RlX21vZHVsZXNcXGRvY3pcXG5vZGVfbW9kdWxlc1xcYmFiZWwtcHJlc2V0LXJlYWN0LWFwcFxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4gZnJvbSAiRTpcXFdlYlJvb3RcXHRhYmxleFxcbm9kZV9tb2R1bGVzXFx1bWktbGlicmFyeVxcbm9kZV9tb2R1bGVzXFxkb2N6XFxub2RlX21vZHVsZXNcXGJhYmVsLXByZXNldC1yZWFjdC1hcHBcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iOwppbXBvcnQgX2dldFByb3RvdHlwZU9mIGZyb20gIkU6XFxXZWJSb290XFx0YWJsZXhcXG5vZGVfbW9kdWxlc1xcdW1pLWxpYnJhcnlcXG5vZGVfbW9kdWxlc1xcZG9jelxcbm9kZV9tb2R1bGVzXFxiYWJlbC1wcmVzZXQtcmVhY3QtYXBwXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS9oZWxwZXJzL2VzbS9nZXRQcm90b3R5cGVPZiI7CmltcG9ydCBfaW5oZXJpdHMgZnJvbSAiRTpcXFdlYlJvb3RcXHRhYmxleFxcbm9kZV9tb2R1bGVzXFx1bWktbGlicmFyeVxcbm9kZV9tb2R1bGVzXFxkb2N6XFxub2RlX21vZHVsZXNcXGJhYmVsLXByZXNldC1yZWFjdC1hcHBcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKdmFyIF9qc3hGaWxlTmFtZSA9ICJFOlxcV2ViUm9vdFxcdGFibGV4XFxzcmNcXGJhc2VcXGJvZHkuanMiOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgZW50ZXJNb2R1bGUgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5lbnRlck1vZHVsZTsKICBlbnRlck1vZHVsZSAmJiBlbnRlck1vZHVsZShtb2R1bGUpOwp9KSgpOwoKaW1wb3J0IFJlYWN0IGZyb20gInJlYWN0IjsKaW1wb3J0IFByb3BUeXBlcyBmcm9tICJwcm9wLXR5cGVzIjsKaW1wb3J0IHsgVmFyaWFibGVTaXplR3JpZCBhcyBHcmlkIH0gZnJvbSAicmVhY3Qtd2luZG93IjsKaW1wb3J0IEF1dG9TaXplciBmcm9tICJyZWFjdC12aXJ0dWFsaXplZC1hdXRvLXNpemVyIjsKaW1wb3J0IExvYWRpbmdJY29uIGZyb20gIi4uL2NvbXBvbmVudHMvbG9hZGluZ0ljb24iOwoKdmFyIFRhYmxlQm9keSA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHsKICBfaW5oZXJpdHMoVGFibGVCb2R5LCBfUmVhY3QkQ29tcG9uZW50KTsKCiAgZnVuY3Rpb24gVGFibGVCb2R5KCkgewogICAgdmFyIF9nZXRQcm90b3R5cGVPZjI7CgogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBUYWJsZUJvZHkpOwoKICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBfYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHsKICAgICAgX2FyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07CiAgICB9CgogICAgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoX2dldFByb3RvdHlwZU9mMiA9IF9nZXRQcm90b3R5cGVPZihUYWJsZUJvZHkpKS5jYWxsLmFwcGx5KF9nZXRQcm90b3R5cGVPZjIsIFt0aGlzXS5jb25jYXQoX2FyZ3MpKSk7CiAgICBfdGhpcy5ncmlkUmVmID0gUmVhY3QuY3JlYXRlUmVmKCk7CgogICAgX3RoaXMuZ2V0Q29sdW1uID0gZnVuY3Rpb24gKGluZGV4KSB7CiAgICAgIHZhciBjb2x1bW5MZWFmcyA9IF90aGlzLnByb3BzLmNvbHVtbkxlYWZzOwogICAgICByZXR1cm4gY29sdW1uTGVhZnNbaW5kZXhdOwogICAgfTsKCiAgICBfdGhpcy5nZXRDb2x1bW5XaWR0aCA9IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIGNvbHVtbkxlYWZzID0gX3RoaXMucHJvcHMuY29sdW1uTGVhZnM7CiAgICAgIHZhciBjdyA9IDA7CiAgICAgIGNvbHVtbkxlYWZzLmZvckVhY2goZnVuY3Rpb24gKGQpIHsKICAgICAgICBjdyArPSBkLndpZHRoIHx8IDEwMDsKICAgICAgfSk7CiAgICAgIHJldHVybiBjdzsKICAgIH07CgogICAgX3RoaXMuY29sdW1uV2lkdGggPSBmdW5jdGlvbiAoaW5kZXgsIHdpZHRoKSB7CiAgICAgIHZhciBjb2x1bW4gPSBfdGhpcy5nZXRDb2x1bW4oaW5kZXgpOwoKICAgICAgdmFyIGN3ID0gX3RoaXMuZ2V0Q29sdW1uV2lkdGgoKTsKCiAgICAgIHZhciBzdyA9IF90aGlzLnByb3BzLnNjcm9sbGJhcldpZHRoOwoKICAgICAgaWYgKGNvbHVtbikgewogICAgICAgIHJldHVybiBjb2x1bW4ud2lkdGggfHwgMTAwOwogICAgICB9CgogICAgICByZXR1cm4gd2lkdGggLSBjdyAtIHN3OwogICAgfTsKCiAgICBfdGhpcy5pc0xvYWRpbmdDaGlsZHJlbiA9IGZ1bmN0aW9uIChrZXkpIHsKICAgICAgdmFyIGxvYWRpbmdLZXlzID0gX3RoaXMucHJvcHMubG9hZGluZ0tleXM7CiAgICAgIHJldHVybiBsb2FkaW5nS2V5cy5pbmRleE9mKGtleSkgPiAtMTsKICAgIH07CgogICAgX3RoaXMuZXhwYW5kYWJsZUVsID0gZnVuY3Rpb24gKGNvbHVtbkluZGV4LCByb3dJbmRleCwgcm93KSB7CiAgICAgIHZhciBfdGhpcyRwcm9wcyA9IF90aGlzLnByb3BzLAogICAgICAgICAgcm93SW5kZW50ID0gX3RoaXMkcHJvcHMucm93SW5kZW50LAogICAgICAgICAgX3RoaXMkcHJvcHMkZXhwYW5kZWRLID0gX3RoaXMkcHJvcHMuZXhwYW5kZWRLZXlzLAogICAgICAgICAgZXhwYW5kZWRLZXlzID0gX3RoaXMkcHJvcHMkZXhwYW5kZWRLID09PSB2b2lkIDAgPyBbXSA6IF90aGlzJHByb3BzJGV4cGFuZGVkSywKICAgICAgICAgIHJvd0tleSA9IF90aGlzJHByb3BzLnJvd0tleTsKICAgICAgdmFyIGluZGVudCA9IChyb3cuX19kZXB0aCB8fCAwKSAqIHJvd0luZGVudDsKICAgICAgdmFyIGtleSA9IHJvd1tyb3dLZXldOwoKICAgICAgdmFyIGlzTG9hZGluZyA9IF90aGlzLmlzTG9hZGluZ0NoaWxkcmVuKGtleSk7CgogICAgICB2YXIgaXNFeHBhbmQgPSBmYWxzZTsKICAgICAgdmFyIGljb24gPSAiKyI7CgogICAgICBpZiAoZXhwYW5kZWRLZXlzLmluZGV4T2Yoa2V5KSA+IC0xKSB7CiAgICAgICAgaXNFeHBhbmQgPSB0cnVlOwogICAgICAgIGljb24gPSAiLSI7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgaXNFeHBhbmQgPSBmYWxzZTsKICAgICAgICBpY29uID0gIisiOwogICAgICB9CgogICAgICB2YXIgaWNvbkZsYWcgPSBSZWFjdC5jcmVhdGVFbGVtZW50KCJzcGFuIiwgewogICAgICAgIGNsYXNzTmFtZTogInRhYmxleC1yb3ctZXhwYW5kLXBsYWNlaG9sZGVyIiwKICAgICAgICBfX3NvdXJjZTogewogICAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgICAgIGxpbmVOdW1iZXI6IDY4CiAgICAgICAgfSwKICAgICAgICBfX3NlbGY6IHRoaXMKICAgICAgfSk7CgogICAgICBpZiAocm93LmNoaWxkcmVuKSB7CiAgICAgICAgaWNvbkZsYWcgPSBSZWFjdC5jcmVhdGVFbGVtZW50KCJzcGFuIiwgewogICAgICAgICAgY2xhc3NOYW1lOiAidGFibGV4LXJvdy1leHBhbmQtaWNvbiIsCiAgICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKCkgewogICAgICAgICAgICBfdGhpcy5wcm9wcy5vbkV4cGFuZENoYW5nZShpc0V4cGFuZCwga2V5KTsKICAgICAgICAgIH0sCiAgICAgICAgICBfX3NvdXJjZTogewogICAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICAgICAgICBsaW5lTnVtYmVyOiA3MgogICAgICAgICAgfSwKICAgICAgICAgIF9fc2VsZjogdGhpcwogICAgICAgIH0sIGljb24pOwogICAgICB9CgogICAgICBpZiAoaXNMb2FkaW5nID09PSB0cnVlKSB7CiAgICAgICAgaWNvbkZsYWcgPSBSZWFjdC5jcmVhdGVFbGVtZW50KExvYWRpbmdJY29uLCB7CiAgICAgICAgICBfX3NvdXJjZTogewogICAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICAgICAgICBsaW5lTnVtYmVyOiA4NAogICAgICAgICAgfSwKICAgICAgICAgIF9fc2VsZjogdGhpcwogICAgICAgIH0pOwogICAgICB9CgogICAgICBpZiAoY29sdW1uSW5kZXggPT09IDApIHsKICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSZWFjdC5GcmFnbWVudCwgbnVsbCwgaW5kZW50ID4gMCA/IFJlYWN0LmNyZWF0ZUVsZW1lbnQoInNwYW4iLCB7CiAgICAgICAgICBjbGFzc05hbWU6ICJ0YWJsZXgtcm93LWluZGVudCIsCiAgICAgICAgICBzdHlsZTogewogICAgICAgICAgICBtYXJnaW5MZWZ0OiBpbmRlbnQKICAgICAgICAgIH0sCiAgICAgICAgICBfX3NvdXJjZTogewogICAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICAgICAgICBsaW5lTnVtYmVyOiA5MQogICAgICAgICAgfSwKICAgICAgICAgIF9fc2VsZjogdGhpcwogICAgICAgIH0pIDogbnVsbCwgaWNvbkZsYWcpOwogICAgICB9CgogICAgICByZXR1cm4gbnVsbDsKICAgIH07CgogICAgX3RoaXMucmVuZGVyQ2VsbCA9IGZ1bmN0aW9uIChfcmVmKSB7CiAgICAgIHZhciBjb2x1bW5JbmRleCA9IF9yZWYuY29sdW1uSW5kZXgsCiAgICAgICAgICByb3dJbmRleCA9IF9yZWYucm93SW5kZXgsCiAgICAgICAgICBzdHlsZSA9IF9yZWYuc3R5bGU7CiAgICAgIHZhciBkYXRhU291cmNlID0gX3RoaXMucHJvcHMuZGF0YVNvdXJjZTsKCiAgICAgIGlmIChkYXRhU291cmNlLmxlbmd0aCA9PT0gMCkgewogICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICAgICAgICBfX3NvdXJjZTogewogICAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICAgICAgICBsaW5lTnVtYmVyOiAxMDcKICAgICAgICAgIH0sCiAgICAgICAgICBfX3NlbGY6IHRoaXMKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgdmFyIGNvbHVtbiA9IF90aGlzLmdldENvbHVtbihjb2x1bW5JbmRleCk7CgogICAgICB2YXIgYXR0ciA9IHt9OyAvLyBpZiAoY29sdW1uSW5kZXg9PT0wKSB7CiAgICAgIC8vICAgYXR0cj17CiAgICAgIC8vICAgICBwb3NpdGlvbjoic3RpY2t5IiwKICAgICAgLy8gICAgIHpJbmRleDoxLAogICAgICAvLyAgICAgbGVmdDowCiAgICAgIC8vICAgfQogICAgICAvLyB9CgogICAgICBpZiAoY29sdW1uKSB7CiAgICAgICAgdmFyIGMgPSBjb2x1bW4uZGF0YUluZGV4OwogICAgICAgIHZhciByb3cgPSBkYXRhU291cmNlW3Jvd0luZGV4XTsKCiAgICAgICAgdmFyIGV4cGFuZGFibGVFbCA9IF90aGlzLmV4cGFuZGFibGVFbChjb2x1bW5JbmRleCwgcm93SW5kZXgsIHJvdyk7CgogICAgICAgIHZhciBjZWxsRGF0YSA9IHJvd1tjXTsKICAgICAgICB2YXIgdGFibGVfY2VsbCA9IG51bGw7CgogICAgICAgIGlmICh0eXBlb2YgY29sdW1uLnJlbmRlciA9PT0gImZ1bmN0aW9uIikgewogICAgICAgICAgdGFibGVfY2VsbCA9IFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsKICAgICAgICAgICAgY2xhc3NOYW1lOiAidGFibGV4LWNlbGwiLAogICAgICAgICAgICBzdHlsZTogc3R5bGUsCiAgICAgICAgICAgIF9fc291cmNlOiB7CiAgICAgICAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgICAgICAgICBsaW5lTnVtYmVyOiAxMzQKICAgICAgICAgICAgfSwKICAgICAgICAgICAgX19zZWxmOiB0aGlzCiAgICAgICAgICB9LCBleHBhbmRhYmxlRWwsICIgIiwgY29sdW1uLnJlbmRlcihjZWxsRGF0YSwgcm93LCByb3dJbmRleCkpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0YWJsZV9jZWxsID0gUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgewogICAgICAgICAgICBjbGFzc05hbWU6ICJ0YWJsZXgtY2VsbCIsCiAgICAgICAgICAgIHN0eWxlOiBfb2JqZWN0U3ByZWFkKHt9LCBzdHlsZSwgYXR0ciksCiAgICAgICAgICAgIF9fc291cmNlOiB7CiAgICAgICAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgICAgICAgICBsaW5lTnVtYmVyOiAxNDAKICAgICAgICAgICAgfSwKICAgICAgICAgICAgX19zZWxmOiB0aGlzCiAgICAgICAgICB9LCBleHBhbmRhYmxlRWwsIGNlbGxEYXRhKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiB0YWJsZV9jZWxsOwogICAgICB9CgogICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgewogICAgICAgIGNsYXNzTmFtZTogInRhYmxleC1jZWxsIiwKICAgICAgICBzdHlsZTogX29iamVjdFNwcmVhZCh7fSwgc3R5bGUsIHsKICAgICAgICAgIGJvcmRlclJpZ2h0OiAibm9uZSIKICAgICAgICB9KSwKICAgICAgICBfX3NvdXJjZTogewogICAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgICAgIGxpbmVOdW1iZXI6IDE1MQogICAgICAgIH0sCiAgICAgICAgX19zZWxmOiB0aGlzCiAgICAgIH0pOwogICAgfTsKCiAgICBfdGhpcy5yZW5kZXJSb3cgPSBmdW5jdGlvbiAoX3JlZjIpIHsKICAgICAgdmFyIGluZGV4ID0gX3JlZjIuaW5kZXgsCiAgICAgICAgICBzdHlsZSA9IF9yZWYyLnN0eWxlOwogICAgICBjb25zb2xlLmxvZygicmVuZGVyUm93Iik7CiAgICAgIHZhciBjb2x1bW5zID0gX3RoaXMucHJvcHMuY29sdW1ucyB8fCBbXTsKICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsKICAgICAgICBjbGFzc05hbWU6ICJ0YWJsZXgtcm93IiwKICAgICAgICBzdHlsZTogX29iamVjdFNwcmVhZCh7fSwgc3R5bGUpLAogICAgICAgIF9fc291cmNlOiB7CiAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICAgICAgbGluZU51bWJlcjogMTU5CiAgICAgICAgfSwKICAgICAgICBfX3NlbGY6IHRoaXMKICAgICAgfSwgY29sdW1ucy5tYXAoZnVuY3Rpb24gKGNvbHVtbiwgY29sdW1uSW5kZXgpIHsKICAgICAgICByZXR1cm4gX3RoaXMucmVuZGVyQ2VsbCh7CiAgICAgICAgICBjb2x1bW5JbmRleDogY29sdW1uSW5kZXgsCiAgICAgICAgICByb3dJbmRleDogaW5kZXgsCiAgICAgICAgICBzdHlsZTogewogICAgICAgICAgICBkaXNwbGF5OiAiaW5saW5lLWJsb2NrIiwKICAgICAgICAgICAgd2lkdGg6IGNvbHVtbi53aWR0aAogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9KSk7CiAgICB9OwoKICAgIF90aGlzLnJlbmRlclJvdzIgPSBmdW5jdGlvbiAoYXJncykgewogICAgICBjb25zb2xlLmxvZygicmVuZGVyUm93OiIsIGFyZ3MpOwogICAgICB2YXIgY29sdW1ucyA9IF90aGlzLnByb3BzLmNvbHVtbnMgfHwgW107CiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICAgICAgX19zb3VyY2U6IHsKICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgICAgICBsaW5lTnVtYmVyOiAxNzYKICAgICAgICB9LAogICAgICAgIF9fc2VsZjogdGhpcwogICAgICB9LCBhcmdzLnJvd0luZGV4LCAiLCIsIGFyZ3MuY29sdW1uSW5kZXgpOwogICAgfTsKCiAgICBfdGhpcy5zY3JvbGxUbyA9IGZ1bmN0aW9uIChwb3MpIHsKICAgICAgX3RoaXMuZ3JpZFJlZi5jdXJyZW50ICYmIF90aGlzLmdyaWRSZWYuY3VycmVudC5zY3JvbGxUbyhwb3MpOwogICAgfTsKCiAgICBfdGhpcy5vblNjcm9sbCA9IGZ1bmN0aW9uIChfcmVmMykgewogICAgICB2YXIgc2Nyb2xsTGVmdCA9IF9yZWYzLnNjcm9sbExlZnQsCiAgICAgICAgICBzY3JvbGxUb3AgPSBfcmVmMy5zY3JvbGxUb3A7CiAgICAgIGNvbnNvbGUubG9nKCJvblNjcm9sbDoiKTsKCiAgICAgIGlmICh0eXBlb2YgX3RoaXMucHJvcHMub25TY3JvbGwgPT09ICJmdW5jdGlvbiIpIHsKICAgICAgICBfdGhpcy5wcm9wcy5vblNjcm9sbCh7CiAgICAgICAgICBzY3JvbGxMZWZ0OiBzY3JvbGxMZWZ0LAogICAgICAgICAgc2Nyb2xsVG9wOiBzY3JvbGxUb3AKICAgICAgICB9KTsKICAgICAgfQogICAgfTsKCiAgICByZXR1cm4gX3RoaXM7CiAgfQoKICBfY3JlYXRlQ2xhc3MoVGFibGVCb2R5LCBbewogICAga2V5OiAicmVuZGVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdmFyIF90aGlzJHByb3BzMiA9IHRoaXMucHJvcHMsCiAgICAgICAgICBjb2x1bW5zID0gX3RoaXMkcHJvcHMyLmNvbHVtbnMsCiAgICAgICAgICBjb2x1bW5MZWFmcyA9IF90aGlzJHByb3BzMi5jb2x1bW5MZWFmcywKICAgICAgICAgIGRhdGFTb3VyY2UgPSBfdGhpcyRwcm9wczIuZGF0YVNvdXJjZSwKICAgICAgICAgIHN0eWxlID0gX3RoaXMkcHJvcHMyLnN0eWxlOwogICAgICB2YXIgY29sdW1uV2lkdGggPSAwOwogICAgICBjb2x1bW5MZWFmcy5mb3JFYWNoKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgY29sdW1uV2lkdGggKz0gZC53aWR0aCB8fCAxMDA7CiAgICAgIH0pOwogICAgICB2YXIgcm93Q291bnQgPSBkYXRhU291cmNlLmxlbmd0aDsKICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQXV0b1NpemVyLCB7CiAgICAgICAgX19zb3VyY2U6IHsKICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgICAgICBsaW5lTnVtYmVyOiAyMDAKICAgICAgICB9LAogICAgICAgIF9fc2VsZjogdGhpcwogICAgICB9LCBmdW5jdGlvbiAoX3JlZjQpIHsKICAgICAgICB2YXIgaGVpZ2h0ID0gX3JlZjQuaGVpZ2h0LAogICAgICAgICAgICB3aWR0aCA9IF9yZWY0LndpZHRoOwogICAgICAgIHZhciBsZW4gPSBjb2x1bW5MZWFmcy5sZW5ndGg7CgogICAgICAgIGlmICh3aWR0aCA+IGNvbHVtbldpZHRoKSB7CiAgICAgICAgICBsZW4gPSBsZW4gKyAxOwogICAgICAgIH0KCiAgICAgICAgaWYgKGRhdGFTb3VyY2UubGVuZ3RoID09PSAwKSB7CiAgICAgICAgICByb3dDb3VudCA9IDE7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSZWFjdC5GcmFnbWVudCwgbnVsbCwgUmVhY3QuY3JlYXRlRWxlbWVudChHcmlkLCB7CiAgICAgICAgICBzdHlsZTogX29iamVjdFNwcmVhZCh7fSwgc3R5bGUpLAogICAgICAgICAgY29sdW1uQ291bnQ6IGxlbiwKICAgICAgICAgIGNvbHVtbldpZHRoOiBmdW5jdGlvbiBjb2x1bW5XaWR0aChpKSB7CiAgICAgICAgICAgIHJldHVybiBfdGhpczIuY29sdW1uV2lkdGgoaSwgd2lkdGgpOwogICAgICAgICAgfSwKICAgICAgICAgIGhlaWdodDogaGVpZ2h0LAogICAgICAgICAgcm93Q291bnQ6IHJvd0NvdW50LAogICAgICAgICAgcm93SGVpZ2h0OiBmdW5jdGlvbiByb3dIZWlnaHQoKSB7CiAgICAgICAgICAgIHJldHVybiAzNTsKICAgICAgICAgIH0sCiAgICAgICAgICB3aWR0aDogd2lkdGgsCiAgICAgICAgICBvblNjcm9sbDogX3RoaXMyLm9uU2Nyb2xsLAogICAgICAgICAgcmVmOiBfdGhpczIuZ3JpZFJlZiwKICAgICAgICAgIF9fc291cmNlOiB7CiAgICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgICAgICAgIGxpbmVOdW1iZXI6IDIxNAogICAgICAgICAgfSwKICAgICAgICAgIF9fc2VsZjogdGhpcwogICAgICAgIH0sIF90aGlzMi5yZW5kZXJDZWxsKSk7CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogIl9fcmVhY3RzdGFuZGluX19yZWdlbmVyYXRlQnlFdmFsIiwKICAgIC8vIEB0cy1pZ25vcmUKICAgIHZhbHVlOiBmdW5jdGlvbiBfX3JlYWN0c3RhbmRpbl9fcmVnZW5lcmF0ZUJ5RXZhbChrZXksIGNvZGUpIHsKICAgICAgLy8gQHRzLWlnbm9yZQogICAgICB0aGlzW2tleV0gPSBldmFsKGNvZGUpOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIFRhYmxlQm9keTsKfShSZWFjdC5Db21wb25lbnQpOwoKVGFibGVCb2R5LmRlZmF1bHRQcm9wcyA9IHsKICBjb2x1bW5zOiBbXSwKICBjb2x1bW5MZWFmczogW10sCiAgZGF0YVNvdXJjZTogW10sCiAgcm93SW5kZW50OiAyMCwKICBleHBhbmRlZEtleXM6IFtdLAogIGxvYWRpbmdLZXlzOiBbXSwKICBzY3JvbGxiYXJXaWR0aDogNgp9OwpUYWJsZUJvZHkucHJvcFR5cGVzID0gewogIC8qKg0KICAgKiDkuLvopoHnlKjkuo7ooYzlsZXlvIANCiAgICovCiAgcm93S2V5OiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsCiAgY29sdW1uczogUHJvcFR5cGVzLmFycmF5LmlzUmVxdWlyZWQsCiAgY29sdW1uTGVhZnM6IFByb3BUeXBlcy5hcnJheS5pc1JlcXVpcmVkLAogIGRhdGFTb3VyY2U6IFByb3BUeXBlcy5hcnJheS5pc1JlcXVpcmVkLAogIG9uU2Nyb2xsOiBQcm9wVHlwZXMuZnVuYywKCiAgLyoqDQogICAqIEBpc0V4cGFuZCDmmK/lkKblsZXlvIANCiAgICogQGtleSDlj5flvbHlk43nmoTooYzmlbDmja5rZXkNCiAgICovCiAgb25FeHBhbmRDaGFuZ2U6IFByb3BUeXBlcy5mdW5jLAogIHJvd0luZGVudDogUHJvcFR5cGVzLm51bWJlciwKICBleHBhbmRlZEtleXM6IFByb3BUeXBlcy5hcnJheSwKICBsb2FkaW5nS2V5czogUHJvcFR5cGVzLmFycmF5LAogIHNjcm9sbGJhcldpZHRoOiBQcm9wVHlwZXMubnVtYmVyCn07CnZhciBfZGVmYXVsdCA9IFRhYmxlQm9keTsKZXhwb3J0IGRlZmF1bHQgX2RlZmF1bHQ7CgppZiAodHlwZW9mIFRhYmxlQm9keSAhPT0gJ3VuZGVmaW5lZCcgJiYgVGFibGVCb2R5ICYmIFRhYmxlQm9keSA9PT0gT2JqZWN0KFRhYmxlQm9keSkgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZShUYWJsZUJvZHkpKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFRhYmxlQm9keSwgJ19fZmlsZW1ldGEnLCB7CiAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgdmFsdWU6IHsKICAgICAgbmFtZTogIlRhYmxlQm9keSIsCiAgICAgIGZpbGVuYW1lOiAic3JjXFxiYXNlXFxib2R5LmpzIgogICAgfQogIH0pOwp9Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciByZWFjdEhvdExvYWRlciA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmRlZmF1bHQ7CgogIGlmICghcmVhY3RIb3RMb2FkZXIpIHsKICAgIHJldHVybjsKICB9CgogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKFRhYmxlQm9keSwgIlRhYmxlQm9keSIsICJFOlxcV2ViUm9vdFxcdGFibGV4XFxzcmNcXGJhc2VcXGJvZHkuanMiKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihfZGVmYXVsdCwgImRlZmF1bHQiLCAiRTpcXFdlYlJvb3RcXHRhYmxleFxcc3JjXFxiYXNlXFxib2R5LmpzIik7Cn0pKCk7Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciBsZWF2ZU1vZHVsZSA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmxlYXZlTW9kdWxlOwogIGxlYXZlTW9kdWxlICYmIGxlYXZlTW9kdWxlKG1vZHVsZSk7Cn0pKCk7"},{"version":3,"sources":["E:\\WebRoot\\tablex\\src\\base\\body.js"],"names":["React","PropTypes","VariableSizeGrid","Grid","AutoSizer","LoadingIcon","TableBody","gridRef","createRef","getColumn","index","columnLeafs","props","getColumnWidth","cw","forEach","d","width","columnWidth","column","sw","scrollbarWidth","isLoadingChildren","key","loadingKeys","indexOf","expandableEl","columnIndex","rowIndex","row","rowIndent","expandedKeys","rowKey","indent","__depth","isLoading","isExpand","icon","iconFlag","children","onExpandChange","marginLeft","renderCell","style","dataSource","length","attr","c","dataIndex","cellData","table_cell","render","borderRight","renderRow","console","log","columns","map","display","renderRow2","args","scrollTo","pos","current","onScroll","scrollLeft","scrollTop","rowCount","height","len","i","Component","defaultProps","propTypes","string","isRequired","array","func","number"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { VariableSizeGrid as Grid } from \"react-window\";\r\nimport AutoSizer from \"react-virtualized-auto-sizer\";\r\nimport LoadingIcon from \"../components/loadingIcon\";\r\n\r\nclass TableBody extends React.Component {\r\n  gridRef = React.createRef();\r\n\r\n  getColumn = index => {\r\n    let { columnLeafs } = this.props;\r\n\r\n    return columnLeafs[index];\r\n  };\r\n\r\n  getColumnWidth = () => {\r\n    let { columnLeafs } = this.props;\r\n\r\n    let cw = 0;\r\n    columnLeafs.forEach(d => {\r\n      cw += d.width || 100;\r\n    });\r\n\r\n    return cw;\r\n  };\r\n\r\n  columnWidth = (index, width) => {\r\n    let column = this.getColumn(index);\r\n    let cw = this.getColumnWidth();\r\n    let sw = this.props.scrollbarWidth;\r\n\r\n    if (column) {\r\n      return column.width || 100;\r\n    }\r\n\r\n    return width - cw - sw;\r\n  };\r\n\r\n  /**\r\n   * 行是否正在加载子级\r\n   */\r\n  isLoadingChildren = key => {\r\n    let { loadingKeys } = this.props;\r\n\r\n    return loadingKeys.indexOf(key) > -1;\r\n  };\r\n\r\n  expandableEl = (columnIndex, rowIndex, row) => {\r\n    let { rowIndent, expandedKeys = [], rowKey } = this.props;\r\n\r\n    let indent = (row.__depth || 0) * rowIndent;\r\n\r\n    let key = row[rowKey];\r\n\r\n    let isLoading = this.isLoadingChildren(key);\r\n\r\n    let isExpand = false;\r\n    let icon = \"+\";\r\n\r\n    if (expandedKeys.indexOf(key) > -1) {\r\n      isExpand = true;\r\n      icon = \"-\";\r\n    } else {\r\n      isExpand = false;\r\n      icon = \"+\";\r\n    }\r\n\r\n    let iconFlag = <span className=\"tablex-row-expand-placeholder\" />;\r\n\r\n    if (row.children) {\r\n      iconFlag = (\r\n        <span\r\n          className=\"tablex-row-expand-icon\"\r\n          onClick={() => {\r\n            this.props.onExpandChange(isExpand, key);\r\n          }}\r\n        >\r\n          {icon}\r\n        </span>\r\n      );\r\n    }\r\n\r\n    if (isLoading === true) {\r\n      iconFlag = <LoadingIcon />;\r\n    }\r\n\r\n    if (columnIndex === 0) {\r\n      return (\r\n        <>\r\n          {indent > 0 ? (\r\n            <span\r\n              className=\"tablex-row-indent\"\r\n              style={{ marginLeft: indent }}\r\n            />\r\n          ) : null}\r\n          {iconFlag}\r\n        </>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  renderCell = ({ columnIndex, rowIndex, style }) => {\r\n    let { dataSource } = this.props;\r\n\r\n    if (dataSource.length === 0) {\r\n      return <div />;\r\n    }\r\n\r\n    let column = this.getColumn(columnIndex);\r\n\r\n    let attr = {};\r\n\r\n    // if (columnIndex===0) {\r\n    //   attr={\r\n    //     position:\"sticky\",\r\n    //     zIndex:1,\r\n    //     left:0\r\n    //   }\r\n    // }\r\n\r\n    if (column) {\r\n      let c = column.dataIndex;\r\n      let row = dataSource[rowIndex];\r\n\r\n      let expandableEl = this.expandableEl(columnIndex, rowIndex, row);\r\n\r\n      let cellData = row[c];\r\n\r\n      let table_cell = null;\r\n\r\n      if (typeof column.render === \"function\") {\r\n        table_cell = (\r\n          <div className=\"tablex-cell\" style={style}>\r\n            {expandableEl} {column.render(cellData, row, rowIndex)}\r\n          </div>\r\n        );\r\n      } else {\r\n        table_cell = (\r\n          <div className=\"tablex-cell\" style={{ ...style, ...attr }}>\r\n            {expandableEl}\r\n            {cellData}\r\n          </div>\r\n        );\r\n      }\r\n\r\n      return table_cell;\r\n    }\r\n\r\n    return (\r\n      <div className=\"tablex-cell\" style={{ ...style, borderRight: \"none\" }} />\r\n    );\r\n  };\r\n\r\n  renderRow = ({ index, style }) => {\r\n    console.log(\"renderRow\")\r\n    let columns = this.props.columns || [];\r\n    return (\r\n      <div className=\"tablex-row\" style={{ ...style }}>\r\n        {columns.map((column, columnIndex) => {\r\n          return this.renderCell({\r\n            columnIndex,\r\n            rowIndex: index,\r\n            style: { display: \"inline-block\", width: column.width }\r\n          });\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n  \r\n  renderRow2 = (args) => {\r\n    console.log(\"renderRow:\",args)\r\n    let columns = this.props.columns || [];\r\n    return <div>{args.rowIndex},{args.columnIndex}</div>\r\n  };\r\n\r\n  scrollTo = pos => {\r\n    this.gridRef.current && this.gridRef.current.scrollTo(pos);\r\n  };\r\n\r\n  onScroll = ({ scrollLeft, scrollTop }) => {\r\n    console.log(\"onScroll:\");\r\n    if (typeof this.props.onScroll === \"function\") {\r\n      this.props.onScroll({ scrollLeft, scrollTop });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { columns, columnLeafs, dataSource, style } = this.props;\r\n    let columnWidth = 0;\r\n    columnLeafs.forEach(d => {\r\n      columnWidth += d.width || 100;\r\n    });\r\n\r\n    let rowCount = dataSource.length;\r\n\r\n    return (\r\n      <AutoSizer>\r\n        {({ height, width }) => {\r\n          let len = columnLeafs.length;\r\n\r\n          if (width > columnWidth) {\r\n            len = len + 1;\r\n          }\r\n\r\n          if (dataSource.length === 0) {\r\n            rowCount = 1;\r\n          }\r\n\r\n          return (\r\n            <>\r\n              <Grid\r\n                style={{ ...style }}\r\n                columnCount={len}\r\n                columnWidth={i => this.columnWidth(i, width)}\r\n                height={height}\r\n                rowCount={rowCount}\r\n                rowHeight={() => 35}\r\n                width={width}\r\n                onScroll={this.onScroll}\r\n                ref={this.gridRef}\r\n              >\r\n                {this.renderCell}\r\n              </Grid>\r\n            </>\r\n          );\r\n        }}\r\n      </AutoSizer>\r\n    );\r\n  }\r\n}\r\n\r\nTableBody.defaultProps = {\r\n  columns: [],\r\n  columnLeafs: [],\r\n  dataSource: [],\r\n  rowIndent: 20,\r\n  expandedKeys: [],\r\n  loadingKeys: [],\r\n  scrollbarWidth: 6\r\n};\r\n\r\nTableBody.propTypes = {\r\n  /**\r\n   * 主要用于行展开\r\n   */\r\n  rowKey: PropTypes.string.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n  columnLeafs: PropTypes.array.isRequired,\r\n  dataSource: PropTypes.array.isRequired,\r\n  onScroll: PropTypes.func,\r\n\r\n  /**\r\n   * @isExpand 是否展开\r\n   * @key 受影响的行数据key\r\n   */\r\n  onExpandChange: PropTypes.func,\r\n  rowIndent: PropTypes.number,\r\n  expandedKeys: PropTypes.array,\r\n  loadingKeys: PropTypes.array,\r\n  scrollbarWidth: PropTypes.number\r\n};\r\n\r\nexport default TableBody;\r\n"]}]}