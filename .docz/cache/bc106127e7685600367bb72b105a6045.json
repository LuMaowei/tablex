{"remainingRequest":"E:\\WebRoot\\tablex\\node_modules\\thread-loader\\dist\\cjs.js??ref--5-1!E:\\WebRoot\\tablex\\node_modules\\babel-loader\\lib\\index.js??ref--5-2!E:\\WebRoot\\tablex\\node_modules\\source-map-loader\\index.js!E:\\WebRoot\\tablex\\src\\base\\body.js","dependencies":[{"path":"E:\\WebRoot\\tablex\\src\\base\\body.js","mtime":1559209907565},{"path":"E:\\WebRoot\\tablex\\node_modules\\umi-library\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1559204841349},{"path":"E:\\WebRoot\\tablex\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1554780430526},{"path":"E:\\WebRoot\\tablex\\node_modules\\babel-loader\\lib\\index.js","mtime":1551944504366},{"path":"E:\\WebRoot\\tablex\\node_modules\\source-map-loader\\index.js","mtime":1551944506105}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["E:\\WebRoot\\tablex\\src\\base\\body.js"],"names":["React","VariableSizeGrid","Grid","AutoSizer","LoadingIcon","TableBody","gridRef","createRef","getColumn","index","columnLeafs","props","getColumnWidth","cw","forEach","d","width","columnWidth","column","sw","scrollbarWidth","isLoadingChildren","key","loadingKeys","indexOf","expandableEl","columnIndex","rowIndex","row","rowIndent","expandedKeys","rowKey","indent","__depth","isLoading","isExpand","icon","iconFlag","children","onExpandChange","marginLeft","renderCell","style","dataSource","length","attr","c","dataIndex","cellData","table_cell","render","borderRight","renderRow","columns","whiteSpace","map","display","scrollTo","pos","current","onScroll","rowCount","height","len","i","Component","defaultProps"],"mappings":"goCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,gBAAgB,GAAIC,CAAAA,IAA7B,KAAyC,cAAzC,CACA,MAAOC,CAAAA,SAAP,KAAsB,8BAAtB,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,C,GAEMC,CAAAA,S,uZACJC,O,CAAUN,KAAK,CAACO,SAAN,E,OAEVC,S,CAAY,SAAAC,KAAK,CAAI,IACbC,CAAAA,WADa,CACG,MAAKC,KADR,CACbD,WADa,CAGnB,MAAOA,CAAAA,WAAW,CAACD,KAAD,CAAlB,CACD,C,OAEDG,c,CAAiB,UAAM,IACfF,CAAAA,WADe,CACC,MAAKC,KADN,CACfD,WADe,CAGrB,GAAIG,CAAAA,EAAE,CAAG,CAAT,CACAH,WAAW,CAACI,OAAZ,CAAoB,SAAAC,CAAC,CAAI,CACvBF,EAAE,EAAIE,CAAC,CAACC,KAAF,EAAW,GAAjB,CACD,CAFD,EAIA,MAAOH,CAAAA,EAAP,CACD,C,OAEDI,W,CAAc,SAACR,KAAD,CAAQO,KAAR,CAAkB,CAC9B,GAAIE,CAAAA,MAAM,CAAG,MAAKV,SAAL,CAAeC,KAAf,CAAb,CACA,GAAII,CAAAA,EAAE,CAAG,MAAKD,cAAL,EAAT,CACA,GAAIO,CAAAA,EAAE,CAAG,MAAKR,KAAL,CAAWS,cAApB,CAEA,GAAIF,MAAJ,CAAY,CACV,MAAOA,CAAAA,MAAM,CAACF,KAAP,EAAgB,GAAvB,CACD,CAED,MAAOA,CAAAA,KAAK,CAAGH,EAAR,CAAaM,EAApB,CACD,C,OAKDE,iB,CAAoB,SAAAC,GAAG,CAAI,IACnBC,CAAAA,WADmB,CACH,MAAKZ,KADF,CACnBY,WADmB,CAGzB,MAAOA,CAAAA,WAAW,CAACC,OAAZ,CAAoBF,GAApB,EAA2B,CAAC,CAAnC,CACD,C,OAEDG,Y,CAAe,SAACC,WAAD,CAAcC,QAAd,CAAwBC,GAAxB,CAAgC,iBACE,MAAKjB,KADP,CACvCkB,SADuC,aACvCA,SADuC,mCAC5BC,YAD4B,CAC5BA,YAD4B,gCACb,EADa,uBACTC,MADS,aACTA,MADS,CAG7C,GAAIC,CAAAA,MAAM,CAAG,CAACJ,GAAG,CAACK,OAAJ,EAAe,CAAhB,EAAqBJ,SAAlC,CAEA,GAAIP,CAAAA,GAAG,CAAGM,GAAG,CAACG,MAAD,CAAb,CAEA,GAAIG,CAAAA,SAAS,CAAG,MAAKb,iBAAL,CAAuBC,GAAvB,CAAhB,CAEA,GAAIa,CAAAA,QAAQ,CAAG,KAAf,CACA,GAAIC,CAAAA,IAAI,CAAG,GAAX,CAEA,GAAIN,YAAY,CAACN,OAAb,CAAqBF,GAArB,EAA4B,CAAC,CAAjC,CAAoC,CAClCa,QAAQ,CAAG,IAAX,CACAC,IAAI,CAAG,GAAP,CACD,CAHD,IAGO,CACLD,QAAQ,CAAG,KAAX,CACAC,IAAI,CAAG,GAAP,CACD,CAED,GAAIC,CAAAA,QAAQ,CAAG,4BAAM,SAAS,CAAC,+BAAhB,EAAf,CAEA,GAAIT,GAAG,CAACU,QAAR,CAAkB,CAChBD,QAAQ,CACN,4BACE,SAAS,CAAC,wBADZ,CAEE,OAAO,CAAE,kBAAM,CACb,MAAK1B,KAAL,CAAW4B,cAAX,CAA0BJ,QAA1B,CAAoCb,GAApC,EACD,CAJH,EAMGc,IANH,CADF,CAUD,CAED,GAAIF,SAAS,GAAK,IAAlB,CAAwB,CACtBG,QAAQ,CAAG,oBAAC,WAAD,MAAX,CACD,CAED,GAAIX,WAAW,GAAK,CAApB,CAAuB,CACrB,MACE,yCACGM,MAAM,CAAG,CAAT,CACC,4BACE,SAAS,CAAC,mBADZ,CAEE,KAAK,CAAE,CAAEQ,UAAU,CAAER,MAAd,CAFT,EADD,CAKG,IANN,CAOGK,QAPH,CADF,CAWD,CACD,MAAO,KAAP,CACD,C,OAEDI,U,CAAa,cAAsC,IAAnCf,CAAAA,WAAmC,MAAnCA,WAAmC,CAAtBC,QAAsB,MAAtBA,QAAsB,CAAZe,KAAY,MAAZA,KAAY,IAC3CC,CAAAA,UAD2C,CAC5B,MAAKhC,KADuB,CAC3CgC,UAD2C,CAGjD,GAAIA,UAAU,CAACC,MAAX,GAAsB,CAA1B,CAA6B,CAC3B,MAAO,gCAAP,CACD,CAED,GAAI1B,CAAAA,MAAM,CAAG,MAAKV,SAAL,CAAekB,WAAf,CAAb,CAEA,GAAImB,CAAAA,IAAI,CAAG,EAAX,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAI3B,MAAJ,CAAY,CACV,GAAI4B,CAAAA,CAAC,CAAG5B,MAAM,CAAC6B,SAAf,CACA,GAAInB,CAAAA,GAAG,CAAGe,UAAU,CAAChB,QAAD,CAApB,CAEA,GAAIF,CAAAA,YAAY,CAAG,MAAKA,YAAL,CAAkBC,WAAlB,CAA+BC,QAA/B,CAAyCC,GAAzC,CAAnB,CAEA,GAAIoB,CAAAA,QAAQ,CAAGpB,GAAG,CAACkB,CAAD,CAAlB,CAEA,GAAIG,CAAAA,UAAU,CAAG,IAAjB,CAEA,GAAI,MAAO/B,CAAAA,MAAM,CAACgC,MAAd,GAAyB,UAA7B,CAAyC,CACvCD,UAAU,CACR,2BAAK,SAAS,CAAC,aAAf,CAA6B,KAAK,CAAEP,KAApC,EACGjB,YADH,KACkBP,MAAM,CAACgC,MAAP,CAAcF,QAAd,CAAwBpB,GAAxB,CAA6BD,QAA7B,CADlB,CADF,CAKD,CAND,IAMO,CACLsB,UAAU,CACR,2BAAK,SAAS,CAAC,aAAf,CAA6B,KAAK,kBAAOP,KAAP,CAAiBG,IAAjB,CAAlC,EACGpB,YADH,CAEGuB,QAFH,CADF,CAMD,CAED,MAAOC,CAAAA,UAAP,CACD,CAED,MACE,4BAAK,SAAS,CAAC,aAAf,CAA6B,KAAK,kBAAOP,KAAP,EAAcS,WAAW,CAAE,MAA3B,EAAlC,EADF,CAGD,C,OAEDC,S,CAAY,eAAsB,IAAnB3C,CAAAA,KAAmB,OAAnBA,KAAmB,CAAZiC,KAAY,OAAZA,KAAY,CAChC,GAAIW,CAAAA,OAAO,CAAG,MAAK1C,KAAL,CAAW0C,OAAX,EAAsB,EAApC,CACA,MACE,4BAAK,SAAS,CAAC,YAAf,CAA4B,KAAK,kBAAOX,KAAP,EAAcY,UAAU,CAAE,QAA1B,EAAjC,EACGD,OAAO,CAACE,GAAR,CAAY,SAACrC,MAAD,CAASQ,WAAT,CAAyB,CACpC,MAAO,OAAKe,UAAL,CAAgB,CACrBf,WAAW,CAAXA,WADqB,CAErBC,QAAQ,CAAElB,KAFW,CAGrBiC,KAAK,CAAE,CAAEc,OAAO,CAAE,cAAX,CAA2BxC,KAAK,CAAEE,MAAM,CAACF,KAAzC,CAHc,CAAhB,CAAP,CAKD,CANA,CADH,CADF,CAWD,C,OAEDyC,Q,CAAW,SAAAC,GAAG,CAAI,CAChB,MAAKpD,OAAL,CAAaqD,OAAb,EAAwB,MAAKrD,OAAL,CAAaqD,OAAb,CAAqBF,QAArB,CAA8BC,GAA9B,CAAxB,CACD,C,4EAEQ,kCACqD,KAAK/C,KAD1D,CACD0C,OADC,cACDA,OADC,CACQ3C,WADR,cACQA,WADR,CACqBiC,UADrB,cACqBA,UADrB,CACiCiB,QADjC,cACiCA,QADjC,CAC2ClB,KAD3C,cAC2CA,KAD3C,CAEP,GAAIzB,CAAAA,WAAW,CAAG,CAAlB,CACAP,WAAW,CAACI,OAAZ,CAAoB,SAAAC,CAAC,CAAI,CACvBE,WAAW,EAAIF,CAAC,CAACC,KAAF,EAAW,GAA1B,CACD,CAFD,EAIA,GAAI6C,CAAAA,QAAQ,CAAGlB,UAAU,CAACC,MAA1B,CAEA,MACE,qBAAC,SAAD,MACG,eAAuB,IAApBkB,CAAAA,MAAoB,OAApBA,MAAoB,CAAZ9C,KAAY,OAAZA,KAAY,CACtB,GAAI+C,CAAAA,GAAG,CAAGrD,WAAW,CAACkC,MAAtB,CAEA,GAAI5B,KAAK,CAAGC,WAAZ,CAAyB,CACvB8C,GAAG,CAAGA,GAAG,CAAG,CAAZ,CACD,CAED,GAAIpB,UAAU,CAACC,MAAX,GAAsB,CAA1B,CAA6B,CAC3BiB,QAAQ,CAAG,CAAX,CACD,CAED,MACE,yCACE,oBAAC,IAAD,EACE,KAAK,CAAEnB,KADT,CAEE,WAAW,CAAEqB,GAFf,CAGE,WAAW,CAAE,qBAAAC,CAAC,QAAI,CAAA,MAAI,CAAC/C,WAAL,CAAiB+C,CAAjB,CAAoBhD,KAApB,CAAJ,EAHhB,CAIE,MAAM,CAAE8C,MAJV,CAKE,QAAQ,CAAED,QALZ,CAME,SAAS,CAAE,mBAAApD,KAAK,QAAI,GAAJ,EANlB,CAOE,KAAK,CAAEO,KAPT,CAQE,QAAQ,CAAE4C,QARZ,CASE,GAAG,CAAE,MAAI,CAACtD,OATZ,EAWG,MAAI,CAACmC,UAXR,CADF,CADF,CAiBD,CA7BH,CADF,CAiCD,C,uBAjNqBzC,KAAK,CAACiE,S,EAoN9B5D,SAAS,CAAC6D,YAAV,CAAyB,CACvBb,OAAO,CAAE,EADc,CAEvB3C,WAAW,CAAE,EAFU,CAGvBiC,UAAU,CAAE,EAHW,CAIvBd,SAAS,CAAE,EAJY,CAKvBC,YAAY,CAAE,EALS,CAMvBP,WAAW,CAAE,EANU,CAOvBH,cAAc,CAAE,CAPO,CAAzB,CA+BA,cAAef,CAAAA,SAAf,C","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { VariableSizeGrid as Grid } from \"react-window\";\r\nimport AutoSizer from \"react-virtualized-auto-sizer\";\r\nimport LoadingIcon from \"../components/loadingIcon\";\r\n\r\nclass TableBody extends React.Component {\r\n  gridRef = React.createRef();\r\n\r\n  getColumn = index => {\r\n    let { columnLeafs } = this.props;\r\n\r\n    return columnLeafs[index];\r\n  };\r\n\r\n  getColumnWidth = () => {\r\n    let { columnLeafs } = this.props;\r\n\r\n    let cw = 0;\r\n    columnLeafs.forEach(d => {\r\n      cw += d.width || 100;\r\n    });\r\n\r\n    return cw;\r\n  };\r\n\r\n  columnWidth = (index, width) => {\r\n    let column = this.getColumn(index);\r\n    let cw = this.getColumnWidth();\r\n    let sw = this.props.scrollbarWidth;\r\n\r\n    if (column) {\r\n      return column.width || 100;\r\n    }\r\n\r\n    return width - cw - sw;\r\n  };\r\n\r\n  /**\r\n   * 行是否正在加载子级\r\n   */\r\n  isLoadingChildren = key => {\r\n    let { loadingKeys } = this.props;\r\n\r\n    return loadingKeys.indexOf(key) > -1;\r\n  };\r\n\r\n  expandableEl = (columnIndex, rowIndex, row) => {\r\n    let { rowIndent, expandedKeys = [], rowKey } = this.props;\r\n\r\n    let indent = (row.__depth || 0) * rowIndent;\r\n\r\n    let key = row[rowKey];\r\n\r\n    let isLoading = this.isLoadingChildren(key);\r\n\r\n    let isExpand = false;\r\n    let icon = \"+\";\r\n\r\n    if (expandedKeys.indexOf(key) > -1) {\r\n      isExpand = true;\r\n      icon = \"-\";\r\n    } else {\r\n      isExpand = false;\r\n      icon = \"+\";\r\n    }\r\n\r\n    let iconFlag = <span className=\"tablex-row-expand-placeholder\" />;\r\n\r\n    if (row.children) {\r\n      iconFlag = (\r\n        <span\r\n          className=\"tablex-row-expand-icon\"\r\n          onClick={() => {\r\n            this.props.onExpandChange(isExpand, key);\r\n          }}\r\n        >\r\n          {icon}\r\n        </span>\r\n      );\r\n    }\r\n\r\n    if (isLoading === true) {\r\n      iconFlag = <LoadingIcon />;\r\n    }\r\n\r\n    if (columnIndex === 0) {\r\n      return (\r\n        <>\r\n          {indent > 0 ? (\r\n            <span\r\n              className=\"tablex-row-indent\"\r\n              style={{ marginLeft: indent }}\r\n            />\r\n          ) : null}\r\n          {iconFlag}\r\n        </>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  renderCell = ({ columnIndex, rowIndex, style }) => {\r\n    let { dataSource } = this.props;\r\n\r\n    if (dataSource.length === 0) {\r\n      return <div />;\r\n    }\r\n\r\n    let column = this.getColumn(columnIndex);\r\n\r\n    let attr = {};\r\n\r\n    // if (columnIndex===0) {\r\n    //   attr={\r\n    //     position:\"sticky\",\r\n    //     zIndex:1,\r\n    //     left:0\r\n    //   }\r\n    // }\r\n\r\n    if (column) {\r\n      let c = column.dataIndex;\r\n      let row = dataSource[rowIndex];\r\n\r\n      let expandableEl = this.expandableEl(columnIndex, rowIndex, row);\r\n\r\n      let cellData = row[c];\r\n\r\n      let table_cell = null;\r\n\r\n      if (typeof column.render === \"function\") {\r\n        table_cell = (\r\n          <div className=\"tablex-cell\" style={style}>\r\n            {expandableEl} {column.render(cellData, row, rowIndex)}\r\n          </div>\r\n        );\r\n      } else {\r\n        table_cell = (\r\n          <div className=\"tablex-cell\" style={{ ...style, ...attr }}>\r\n            {expandableEl}\r\n            {cellData}\r\n          </div>\r\n        );\r\n      }\r\n\r\n      return table_cell;\r\n    }\r\n\r\n    return (\r\n      <div className=\"tablex-cell\" style={{ ...style, borderRight: \"none\" }} />\r\n    );\r\n  };\r\n\r\n  renderRow = ({ index, style }) => {\r\n    let columns = this.props.columns || [];\r\n    return (\r\n      <div className=\"tablex-row\" style={{ ...style, whiteSpace: \"nowrap\" }}>\r\n        {columns.map((column, columnIndex) => {\r\n          return this.renderCell({\r\n            columnIndex,\r\n            rowIndex: index,\r\n            style: { display: \"inline-block\", width: column.width }\r\n          });\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  scrollTo = pos => {\r\n    this.gridRef.current && this.gridRef.current.scrollTo(pos);\r\n  };\r\n\r\n  render() {\r\n    let { columns, columnLeafs, dataSource, onScroll, style } = this.props;\r\n    let columnWidth = 0;\r\n    columnLeafs.forEach(d => {\r\n      columnWidth += d.width || 100;\r\n    });\r\n\r\n    let rowCount = dataSource.length;\r\n\r\n    return (\r\n      <AutoSizer>\r\n        {({ height, width }) => {\r\n          let len = columnLeafs.length;\r\n\r\n          if (width > columnWidth) {\r\n            len = len + 1;\r\n          }\r\n\r\n          if (dataSource.length === 0) {\r\n            rowCount = 1;\r\n          }\r\n\r\n          return (\r\n            <>\r\n              <Grid\r\n                style={style}\r\n                columnCount={len}\r\n                columnWidth={i => this.columnWidth(i, width)}\r\n                height={height}\r\n                rowCount={rowCount}\r\n                rowHeight={index => 35}\r\n                width={width}\r\n                onScroll={onScroll}\r\n                ref={this.gridRef}\r\n              >\r\n                {this.renderCell}\r\n              </Grid>\r\n            </>\r\n          );\r\n        }}\r\n      </AutoSizer>\r\n    );\r\n  }\r\n}\r\n\r\nTableBody.defaultProps = {\r\n  columns: [],\r\n  columnLeafs: [],\r\n  dataSource: [],\r\n  rowIndent: 20,\r\n  expandedKeys: [],\r\n  loadingKeys: [],\r\n  scrollbarWidth: 6\r\n};\r\n\r\nTableBody.propTypes = {\r\n  /**\r\n   * 主要用于行展开\r\n   */\r\n  rowKey: PropTypes.string.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n  columnLeafs: PropTypes.array.isRequired,\r\n  dataSource: PropTypes.array.isRequired,\r\n  onScroll: PropTypes.func,\r\n\r\n  /**\r\n   * @isExpand 是否展开\r\n   * @key 受影响的行数据key\r\n   */\r\n  onExpandChange: PropTypes.func,\r\n  rowIndent: PropTypes.number,\r\n  expandedKeys: PropTypes.array,\r\n  loadingKeys: PropTypes.array,\r\n  scrollbarWidth: PropTypes.number\r\n};\r\n\r\nexport default TableBody;\r\n"]}]}