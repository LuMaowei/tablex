{"remainingRequest":"/home/nexx/develop/tablex/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/nexx/develop/tablex/node_modules/babel-loader/lib/index.js??ref--5-2!/home/nexx/develop/tablex/node_modules/source-map-loader/index.js!/home/nexx/develop/tablex/examples/stickyGrid.js","dependencies":[{"path":"/home/nexx/develop/tablex/examples/stickyGrid.js","mtime":1556698768032},{"path":"/home/nexx/develop/tablex/node_modules/cache-loader/dist/cjs.js","mtime":1555838893487},{"path":"/home/nexx/develop/tablex/node_modules/thread-loader/dist/cjs.js","mtime":1555838894922},{"path":"/home/nexx/develop/tablex/node_modules/babel-loader/lib/index.js","mtime":1555838893306},{"path":"/home/nexx/develop/tablex/node_modules/source-map-loader/index.js","mtime":1555838894829}],"contextDependencies":[],"result":["import React from\"react\";import ReactDOM from\"react-dom\";import{FixedSizeGrid as Grid}from\"react-window\";import\"./styles.css\";var Cell=function Cell(_ref){var columnIndex=_ref.columnIndex,rowIndex=_ref.rowIndex,style=_ref.style;return React.createElement(\"div\",{className:columnIndex%2?rowIndex%2===0?\"GridItemOdd\":\"GridItemEven\":rowIndex%2?\"GridItemOdd\":\"GridItemEven\",style:style},\"r\",rowIndex,\", c\",columnIndex);};var Example=function Example(){var staticGrid=React.useRef(null);var onScroll=React.useCallback(function(_ref2){var scrollTop=_ref2.scrollTop,scrollUpdateWasRequested=_ref2.scrollUpdateWasRequested;if(!scrollUpdateWasRequested){staticGrid.current.scrollTo({scrollLeft:0,scrollTop:scrollTop});}});return React.createElement(\"div\",{style:{display:\"flex\",flexDirection:\"row\"}},React.createElement(Grid,{ref:staticGrid,style:{overflowY:\"hidden\"},className:\"Grid\",columnCount:2,columnWidth:100,height:150,rowCount:1000,rowHeight:35,width:200},Cell),React.createElement(Grid,{onScroll:onScroll,className:\"Grid\",columnCount:1000,columnWidth:100,height:150,rowCount:1000,rowHeight:35,width:300},Cell));};export default Example;if(typeof Example!=='undefined'&&Example&&Example===Object(Example)&&Object.isExtensible(Example)){Object.defineProperty(Example,'__filemeta',{enumerable:true,configurable:true,value:{name:\"Example\",filename:\"examples/stickyGrid.js\"}});}",{"version":3,"sources":["/home/nexx/develop/tablex/examples/stickyGrid.js"],"names":["React","ReactDOM","FixedSizeGrid","Grid","Cell","columnIndex","rowIndex","style","Example","staticGrid","useRef","onScroll","useCallback","scrollTop","scrollUpdateWasRequested","current","scrollTo","scrollLeft","display","flexDirection","overflowY"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,OAASC,aAAa,GAAIC,CAAAA,IAA1B,KAAsC,cAAtC,CAEA,MAAO,cAAP,CAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,UAAGC,CAAAA,WAAH,MAAGA,WAAH,CAAgBC,QAAhB,MAAgBA,QAAhB,CAA0BC,KAA1B,MAA0BA,KAA1B,OACX,4BACE,SAAS,CACPF,WAAW,CAAG,CAAd,CACIC,QAAQ,CAAG,CAAX,GAAiB,CAAjB,CACE,aADF,CAEE,cAHN,CAIIA,QAAQ,CAAG,CAAX,CACA,aADA,CAEA,cARR,CAUE,KAAK,CAAEC,KAVT,MAYID,QAZJ,OAYiBD,WAZjB,CADW,EAAb,CAiBA,GAAMG,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpB,GAAMC,CAAAA,UAAU,CAAGT,KAAK,CAACU,MAAN,CAAa,IAAb,CAAnB,CACA,GAAMC,CAAAA,QAAQ,CAAGX,KAAK,CAACY,WAAN,CACf,eAA6C,IAA1CC,CAAAA,SAA0C,OAA1CA,SAA0C,CAA/BC,wBAA+B,OAA/BA,wBAA+B,CAC3C,GAAI,CAACA,wBAAL,CAA+B,CAC7BL,UAAU,CAACM,OAAX,CAAmBC,QAAnB,CAA4B,CAAEC,UAAU,CAAE,CAAd,CAAiBJ,SAAS,CAATA,SAAjB,CAA5B,EACD,CACF,CALc,CAAjB,CAOA,MACE,4BACE,KAAK,CAAE,CACLK,OAAO,CAAE,MADJ,CAELC,aAAa,CAAE,KAFV,CADT,EAME,oBAAC,IAAD,EACE,GAAG,CAAEV,UADP,CAEE,KAAK,CAAE,CAAEW,SAAS,CAAE,QAAb,CAFT,CAGE,SAAS,CAAC,MAHZ,CAIE,WAAW,CAAE,CAJf,CAKE,WAAW,CAAE,GALf,CAME,MAAM,CAAE,GANV,CAOE,QAAQ,CAAE,IAPZ,CAQE,SAAS,CAAE,EARb,CASE,KAAK,CAAE,GATT,EAWGhB,IAXH,CANF,CAmBE,oBAAC,IAAD,EACE,QAAQ,CAAEO,QADZ,CAEE,SAAS,CAAC,MAFZ,CAGE,WAAW,CAAE,IAHf,CAIE,WAAW,CAAE,GAJf,CAKE,MAAM,CAAE,GALV,CAME,QAAQ,CAAE,IANZ,CAOE,SAAS,CAAE,EAPb,CAQE,KAAK,CAAE,GART,EAUGP,IAVH,CAnBF,CADF,CAkCD,CA3CD,CA8CA,cAAeI,CAAAA,OAAf,C","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { FixedSizeGrid as Grid } from \"react-window\";\n\nimport \"./styles.css\";\n\nconst Cell = ({ columnIndex, rowIndex, style }) => (\n  <div\n    className={\n      columnIndex % 2\n        ? rowIndex % 2 === 0\n          ? \"GridItemOdd\"\n          : \"GridItemEven\"\n        : rowIndex % 2\n        ? \"GridItemOdd\"\n        : \"GridItemEven\"\n    }\n    style={style}\n  >\n    r{rowIndex}, c{columnIndex}\n  </div>\n);\n\nconst Example = () => {\n  const staticGrid = React.useRef(null);\n  const onScroll = React.useCallback(\n    ({ scrollTop, scrollUpdateWasRequested }) => {\n      if (!scrollUpdateWasRequested) {\n        staticGrid.current.scrollTo({ scrollLeft: 0, scrollTop });\n      }\n    }\n  );\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\"\n      }}\n    >\n      <Grid\n        ref={staticGrid}\n        style={{ overflowY: \"hidden\" }}\n        className=\"Grid\"\n        columnCount={2}\n        columnWidth={100}\n        height={150}\n        rowCount={1000}\n        rowHeight={35}\n        width={200}\n      >\n        {Cell}\n      </Grid>\n      <Grid\n        onScroll={onScroll}\n        className=\"Grid\"\n        columnCount={1000}\n        columnWidth={100}\n        height={150}\n        rowCount={1000}\n        rowHeight={35}\n        width={300}\n      >\n        {Cell}\n      </Grid>\n    </div>\n  );\n};\n\n\nexport default Example;\n\n"]}]}