{"remainingRequest":"E:\\WebRoot\\tablex\\tablex\\node_modules\\thread-loader\\dist\\cjs.js??ref--5-1!E:\\WebRoot\\tablex\\tablex\\node_modules\\docz-core\\node_modules\\babel-loader\\lib\\index.js??ref--5-2!E:\\WebRoot\\tablex\\tablex\\node_modules\\source-map-loader\\index.js!E:\\WebRoot\\tablex\\tablex\\src\\base\\fixedHead.js","dependencies":[{"path":"E:\\WebRoot\\tablex\\tablex\\src\\base\\fixedHead.js","mtime":1559355624900},{"path":"E:\\WebRoot\\tablex\\tablex\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1553685911267},{"path":"E:\\WebRoot\\tablex\\tablex\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1554538856109},{"path":"E:\\WebRoot\\tablex\\tablex\\node_modules\\docz-core\\node_modules\\babel-loader\\lib\\index.js","mtime":1553685910943},{"path":"E:\\WebRoot\\tablex\\tablex\\node_modules\\source-map-loader\\index.js","mtime":1553685912297}],"contextDependencies":[],"result":["import _classCallCheck from \"E:\\\\WebRoot\\\\tablex\\\\tablex\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\WebRoot\\\\tablex\\\\tablex\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\WebRoot\\\\tablex\\\\tablex\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\WebRoot\\\\tablex\\\\tablex\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\WebRoot\\\\tablex\\\\tablex\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\WebRoot\\\\tablex\\\\tablex\\\\src\\\\base\\\\fixedHead.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableHead from \"./head\";\nimport { treeToList } from \"../helper\";\n\nvar TableHeadWithFixed =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TableHeadWithFixed, _React$Component);\n\n  function TableHeadWithFixed() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TableHeadWithFixed);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TableHeadWithFixed)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.headRef = React.createRef();\n\n    _this.getColumns = function (arr) {\n      var DEFAULT_COLUMN_WIDTH = 100;\n      var left = [];\n      var leftWidth = 0;\n      var middle = [];\n      var middleWidth = 0;\n      var right = [];\n      var rightWidth = 0;\n\n      for (var i = 0; i < arr.length; i++) {\n        var d = arr[i];\n\n        if (d.fixed === \"left\") {\n          left.push(d);\n        } else if (d.fixed === \"right\") {\n          right.push(d);\n        } else {\n          middle.push(d);\n        }\n      }\n\n      var _treeToList = treeToList(left),\n          leftColumnLeafs = _treeToList.leafs;\n\n      var _treeToList2 = treeToList(middle),\n          middleColumnLeafs = _treeToList2.leafs;\n\n      var _treeToList3 = treeToList(right),\n          rightColumnLeafs = _treeToList3.leafs;\n\n      leftColumnLeafs.forEach(function (d) {\n        leftWidth = leftWidth + (d.width || DEFAULT_COLUMN_WIDTH);\n      });\n      middleColumnLeafs.forEach(function (d) {\n        middleWidth = middleWidth + (d.width || DEFAULT_COLUMN_WIDTH);\n      });\n      rightColumnLeafs.forEach(function (d) {\n        rightWidth = rightWidth + (d.width || DEFAULT_COLUMN_WIDTH);\n      });\n      return {\n        leftColumns: left.concat(middle, right),\n        leftColumnLeafs: leftColumnLeafs.concat(middleColumnLeafs, rightColumnLeafs),\n        leftColumnsWidth: leftWidth,\n        middleColumns: middle.concat(left, right),\n        middleColumnsWidth: middleWidth,\n        middleColumnLeafs: middleColumnLeafs.concat(leftColumnLeafs, rightColumnLeafs),\n        rightColumns: right.concat(left, middle),\n        rightColumnsWidth: rightWidth,\n        rightColumnLeafs: rightColumnLeafs.concat(leftColumnLeafs, middleColumnLeafs)\n      };\n    };\n\n    _this.onMiddleScroll = function (_ref) {\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop;\n\n      _this.refs.leftTable.scrollTo({\n        scrollLeft: 0,\n        scrollTop: scrollTop\n      });\n\n      if (typeof _this.props.onScroll === \"function\") {\n        _this.props.onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    };\n\n    _this.scrollTo = function (_ref2) {\n      var scrollLeft = _ref2.scrollLeft;\n\n      _this.headRef.current.scrollTo(scrollLeft, 0);\n    };\n\n    return _this;\n  }\n\n  _createClass(TableHeadWithFixed, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (typeof this.props.initRef === \"function\") {\n        this.props.initRef(this);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          columns = _this$props.columns,\n          scrollbarWidth = _this$props.scrollbarWidth;\n\n      var _this$getColumns = this.getColumns(columns),\n          leftColumns = _this$getColumns.leftColumns,\n          leftColumnsWidth = _this$getColumns.leftColumnsWidth,\n          leftColumnLeafs = _this$getColumns.leftColumnLeafs,\n          middleColumns = _this$getColumns.middleColumns,\n          middleColumnsWidth = _this$getColumns.middleColumnsWidth,\n          middleColumnLeafs = _this$getColumns.middleColumnLeafs,\n          rightColumns = _this$getColumns.rightColumns,\n          rightColumnsWidth = _this$getColumns.rightColumnsWidth,\n          rightColumnLeafs = _this$getColumns.rightColumnLeafs;\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"tablex-head-left\",\n        style: {\n          width: leftColumnsWidth\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        columns: leftColumns,\n        columnLeafs: leftColumnLeafs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"tablex-head-middle\",\n        ref: this.headRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        columns: middleColumns,\n        columnLeafs: middleColumnLeafs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"tablex-head-right\",\n        style: {\n          width: rightColumnsWidth\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        columns: rightColumns,\n        columnLeafs: rightColumnLeafs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return TableHeadWithFixed;\n}(React.Component);\n\nvar _default = TableHeadWithFixed;\nexport default _default;\n\nif (typeof TableHeadWithFixed !== 'undefined' && TableHeadWithFixed && TableHeadWithFixed === Object(TableHeadWithFixed) && Object.isExtensible(TableHeadWithFixed)) {\n  Object.defineProperty(TableHeadWithFixed, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"TableHeadWithFixed\",\n      filename: \"src\\\\base\\\\fixedHead.js\"\n    }\n  });\n}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(TableHeadWithFixed, \"TableHeadWithFixed\", \"E:\\\\WebRoot\\\\tablex\\\\tablex\\\\src\\\\base\\\\fixedHead.js\");\n  reactHotLoader.register(_default, \"default\", \"E:\\\\WebRoot\\\\tablex\\\\tablex\\\\src\\\\base\\\\fixedHead.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["E:\\WebRoot\\tablex\\tablex\\src\\base\\fixedHead.js"],"names":["React","PropTypes","TableHead","treeToList","TableHeadWithFixed","headRef","createRef","getColumns","arr","DEFAULT_COLUMN_WIDTH","left","leftWidth","middle","middleWidth","right","rightWidth","i","length","d","fixed","push","leftColumnLeafs","leafs","middleColumnLeafs","rightColumnLeafs","forEach","width","leftColumns","concat","leftColumnsWidth","middleColumns","middleColumnsWidth","rightColumns","rightColumnsWidth","onMiddleScroll","scrollLeft","scrollTop","refs","leftTable","scrollTo","props","onScroll","current","initRef","columns","scrollbarWidth","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TableHead from \"./head\";\r\nimport { treeToList } from \"../helper\";\r\n\r\nclass TableHeadWithFixed extends React.Component {\r\n  headRef = React.createRef();\r\n\r\n  getColumns = arr => {\r\n    let DEFAULT_COLUMN_WIDTH = 100;\r\n\r\n    let left = [];\r\n    let leftWidth = 0;\r\n\r\n    let middle = [];\r\n    let middleWidth = 0;\r\n\r\n    let right = [];\r\n    let rightWidth = 0;\r\n\r\n    for (let i = 0; i < arr.length; i++) {\r\n      const d = arr[i];\r\n\r\n      if (d.fixed === \"left\") {\r\n        left.push(d);\r\n      } else if (d.fixed === \"right\") {\r\n        right.push(d);\r\n      } else {\r\n        middle.push(d);\r\n      }\r\n    }\r\n\r\n    let { leafs: leftColumnLeafs } = treeToList(left);\r\n    let { leafs: middleColumnLeafs } = treeToList(middle);\r\n    let { leafs: rightColumnLeafs } = treeToList(right);\r\n\r\n    leftColumnLeafs.forEach(d => {\r\n      leftWidth = leftWidth + (d.width || DEFAULT_COLUMN_WIDTH);\r\n    });\r\n\r\n    middleColumnLeafs.forEach(d => {\r\n      middleWidth = middleWidth + (d.width || DEFAULT_COLUMN_WIDTH);\r\n    });\r\n\r\n    rightColumnLeafs.forEach(d => {\r\n      rightWidth = rightWidth + (d.width || DEFAULT_COLUMN_WIDTH);\r\n    });\r\n\r\n    return {\r\n      leftColumns: left.concat(middle, right),\r\n      leftColumnLeafs: leftColumnLeafs.concat(\r\n        middleColumnLeafs,\r\n        rightColumnLeafs\r\n      ),\r\n      leftColumnsWidth: leftWidth,\r\n      middleColumns: middle.concat(left, right),\r\n      middleColumnsWidth: middleWidth,\r\n      middleColumnLeafs: middleColumnLeafs.concat(\r\n        leftColumnLeafs,\r\n        rightColumnLeafs\r\n      ),\r\n      rightColumns: right.concat(left, middle),\r\n      rightColumnsWidth: rightWidth,\r\n      rightColumnLeafs: rightColumnLeafs.concat(\r\n        leftColumnLeafs,\r\n        middleColumnLeafs\r\n      )\r\n    };\r\n  };\r\n\r\n  onMiddleScroll = ({ scrollLeft, scrollTop }) => {\r\n    this.refs.leftTable.scrollTo({ scrollLeft: 0, scrollTop });\r\n\r\n    if (typeof this.props.onScroll === \"function\") {\r\n      this.props.onScroll({ scrollLeft, scrollTop });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (typeof this.props.initRef === \"function\") {\r\n      this.props.initRef(this);\r\n    }\r\n  }\r\n\r\n  scrollTo = ({scrollLeft}) => {\r\n \r\n    this.headRef.current.scrollTo(scrollLeft,0);\r\n  };\r\n\r\n  render() {\r\n    let { columns, scrollbarWidth } = this.props;\r\n\r\n    let {\r\n      leftColumns,\r\n      leftColumnsWidth,\r\n      leftColumnLeafs,\r\n      middleColumns,\r\n      middleColumnsWidth,\r\n      middleColumnLeafs,\r\n      rightColumns,\r\n      rightColumnsWidth,\r\n      rightColumnLeafs\r\n    } = this.getColumns(columns);\r\n\r\n    return (\r\n      <>\r\n        <div className=\"tablex-head-left\" style={{ width: leftColumnsWidth }}>\r\n          <TableHead columns={leftColumns} columnLeafs={leftColumnLeafs} />\r\n        </div>\r\n        <div\r\n          className=\"tablex-head-middle\"\r\n        \r\n          ref={this.headRef}\r\n        >\r\n          <TableHead\r\n            columns={middleColumns}\r\n            columnLeafs={middleColumnLeafs}\r\n           \r\n          />\r\n        </div>\r\n        <div className=\"tablex-head-right\" style={{ width: rightColumnsWidth }}>\r\n          <TableHead columns={rightColumns} columnLeafs={rightColumnLeafs} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeadWithFixed;\r\n"]}]}