{"remainingRequest":"/media/nexx/DevelopEnvironment/WebRoot/tablex/tablex/node_modules/thread-loader/dist/cjs.js??ref--5-1!/media/nexx/DevelopEnvironment/WebRoot/tablex/tablex/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/media/nexx/DevelopEnvironment/WebRoot/tablex/tablex/node_modules/source-map-loader/index.js!/media/nexx/DevelopEnvironment/WebRoot/tablex/tablex/src/components/body.js","dependencies":[{"path":"/media/nexx/DevelopEnvironment/WebRoot/tablex/tablex/src/components/body.js","mtime":1555730596843},{"path":"/media/nexx/DevelopEnvironment/WebRoot/tablex/tablex/node_modules/cache-loader/dist/cjs.js","mtime":1555737869369},{"path":"/media/nexx/DevelopEnvironment/WebRoot/tablex/tablex/node_modules/thread-loader/dist/cjs.js","mtime":1555737872026},{"path":"/media/nexx/DevelopEnvironment/WebRoot/tablex/tablex/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1555737864633},{"path":"/media/nexx/DevelopEnvironment/WebRoot/tablex/tablex/node_modules/source-map-loader/index.js","mtime":1555737871137}],"contextDependencies":[],"result":["import _classCallCheck from \"/media/nexx/DevelopEnvironment/WebRoot/tablex/tablex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/media/nexx/DevelopEnvironment/WebRoot/tablex/tablex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/media/nexx/DevelopEnvironment/WebRoot/tablex/tablex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/media/nexx/DevelopEnvironment/WebRoot/tablex/tablex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/media/nexx/DevelopEnvironment/WebRoot/tablex/tablex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/media/nexx/DevelopEnvironment/WebRoot/tablex/tablex/src/components/body.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport { VariableSizeGrid as Grid } from 'react-window';\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport \"./index.css\";\n\nvar Cell = function Cell(_ref) {\n  var columnIndex = _ref.columnIndex,\n      rowIndex = _ref.rowIndex,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Item \", rowIndex, \",\", columnIndex);\n};\n\nvar columnWidths = new Array(1000).fill(true).map(function () {\n  return 75 + Math.round(Math.random() * 50);\n});\nvar rowHeights = new Array(1000).fill(true).map(function () {\n  return 25 + Math.round(Math.random() * 50);\n});\n\nvar TableBody =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TableBody, _React$Component);\n\n  function TableBody() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TableBody);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TableBody)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      dataSource: [],\n      columns: [{}]\n    };\n\n    _this.columnWidth = function (index, width) {\n      var _this$props = _this.props,\n          columns = _this$props.columns,\n          dataSource = _this$props.dataSource;\n      var cw = 0;\n      columns.forEach(function (d) {\n        cw += d.width || 100;\n      });\n      var column = columns[index];\n\n      if (column) {\n        return column.width || 100;\n      }\n\n      return width - cw;\n    };\n\n    _this.renderCell = function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          style = _ref2.style;\n      var _this$props2 = _this.props,\n          columns = _this$props2.columns,\n          dataSource = _this$props2.dataSource;\n      var column = columns[index];\n\n      if (column) {\n        var c = column.dataIndex;\n        var row = dataSource[rowIndex];\n        return React.createElement(\"div\", {\n          className: \"__cell\",\n          style: style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, row[c]);\n      }\n\n      return React.createElement(\"div\", {\n        className: \"__cell\",\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TableBody, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          columns = _this$props3.columns,\n          dataSource = _this$props3.dataSource; // let cols = columns.concat([{\n      //   __placeholdercolumn:true\n      // }])\n\n      return React.createElement(AutoSizer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, function (_ref3) {\n        var height = _ref3.height,\n            width = _ref3.width;\n        return React.createElement(Grid, {\n          columnCount: columns.length + 1,\n          columnWidth: function columnWidth(i) {\n            return _this2.columnWidth(i, width);\n          },\n          height: height,\n          rowCount: dataSource.length,\n          rowHeight: function rowHeight() {\n            return 35;\n          },\n          width: width,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, _this2.renderCell);\n      });\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return TableBody;\n}(React.Component);\n\nvar _default = TableBody;\nexport default _default;\n\nif (typeof TableBody !== 'undefined' && TableBody && TableBody === Object(TableBody) && Object.isExtensible(TableBody)) {\n  Object.defineProperty(TableBody, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"TableBody\",\n      filename: \"src/components/body.js\"\n    }\n  });\n}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Cell, \"Cell\", \"/media/nexx/DevelopEnvironment/WebRoot/tablex/tablex/src/components/body.js\");\n  reactHotLoader.register(columnWidths, \"columnWidths\", \"/media/nexx/DevelopEnvironment/WebRoot/tablex/tablex/src/components/body.js\");\n  reactHotLoader.register(rowHeights, \"rowHeights\", \"/media/nexx/DevelopEnvironment/WebRoot/tablex/tablex/src/components/body.js\");\n  reactHotLoader.register(TableBody, \"TableBody\", \"/media/nexx/DevelopEnvironment/WebRoot/tablex/tablex/src/components/body.js\");\n  reactHotLoader.register(_default, \"default\", \"/media/nexx/DevelopEnvironment/WebRoot/tablex/tablex/src/components/body.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["/media/nexx/DevelopEnvironment/WebRoot/tablex/tablex/src/components/body.js"],"names":["React","VariableSizeGrid","Grid","AutoSizer","Cell","columnIndex","rowIndex","style","columnWidths","Array","fill","map","Math","round","random","rowHeights","TableBody","state","dataSource","columns","columnWidth","index","width","props","cw","forEach","d","column","renderCell","c","dataIndex","row","height","length","i","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { VariableSizeGrid as Grid } from 'react-window';\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport \"./index.css\"\n\nconst Cell = ({ columnIndex, rowIndex, style }) => (\n\n    <div style={style}>\n\n        Item {rowIndex},{columnIndex}\n\n    </div>\n\n);\n\n\nconst columnWidths = new Array(1000)\n    .fill(true)\n    .map(() => 75 + Math.round(Math.random() * 50));\nconst rowHeights = new Array(1000)\n    .fill(true)\n    .map(() => 25 + Math.round(Math.random() * 50));\n\n\nclass TableBody extends React.Component {\n\n\n\n    state = {\n        dataSource: [],\n        columns: [{\n\n        }]\n    }\n\n\n    columnWidth = (index,width) => {\n\n        let { columns, dataSource } = this.props;\n\n        let cw = 0\n        columns.forEach(d => {\n            cw += (d.width || 100)\n        });\n\n\n        let column=columns[index];\n\n        if (column) {\n            return column.width || 100 \n        }\n\n        return width-cw\n\n      \n    }\n\n    renderCell = ({ columnIndex, rowIndex, style }) => {\n\n        let { columns, dataSource } = this.props;\n\n       \n\n        let column=columns[index];\n\n        if (column) {\n            let c = column.dataIndex;\n            let row = dataSource[rowIndex];\n\n            return <div className=\"__cell\" style={style}>\n\n            {row[c]}\n\n        </div>\n        }\n\n        return <div className=\"__cell\" style={style}>\n\n\n    </div>\n    }\n\n\n    render() {\n\n        let { columns, dataSource } = this.props;\n\n    \n\n        // let cols = columns.concat([{\n        //   __placeholdercolumn:true\n        // }])\n\n        return <AutoSizer>\n            {({ height, width }) => (\n                <Grid\n\n                    columnCount={columns.length+1}\n\n                    columnWidth={(i)=>this.columnWidth(i,width)}\n\n                    height={height}\n\n                    rowCount={dataSource.length}\n\n                    rowHeight={() => 35}\n\n                    width={width}\n\n                >\n\n                    {this.renderCell}\n\n                </Grid>\n            )}\n        </AutoSizer>\n\n\n    }\n}\n\n\nexport default TableBody;"]}]}