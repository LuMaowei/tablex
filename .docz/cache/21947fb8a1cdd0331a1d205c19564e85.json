{"remainingRequest":"/home/nexx/develop/tablex/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/nexx/develop/tablex/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/home/nexx/develop/tablex/node_modules/source-map-loader/index.js!/home/nexx/develop/tablex/src/components/body.js","dependencies":[{"path":"/home/nexx/develop/tablex/src/components/body.js","mtime":1555836040894},{"path":"/home/nexx/develop/tablex/node_modules/cache-loader/dist/cjs.js","mtime":1555737869369},{"path":"/home/nexx/develop/tablex/node_modules/thread-loader/dist/cjs.js","mtime":1555737872026},{"path":"/home/nexx/develop/tablex/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1555737864633},{"path":"/home/nexx/develop/tablex/node_modules/source-map-loader/index.js","mtime":1555737871137}],"contextDependencies":[],"result":["import _objectSpread from \"/home/nexx/develop/tablex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/nexx/develop/tablex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nexx/develop/tablex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nexx/develop/tablex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nexx/develop/tablex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nexx/develop/tablex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nexx/develop/tablex/src/components/body.js\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { VariableSizeGrid as Grid } from \"react-window\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport LoadingIcon from \"./loadingIcon\";\nimport NoDataMsg from \"./noDataMsg\";\n\nvar TableBody =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TableBody, _React$Component);\n\n  function TableBody() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TableBody);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TableBody)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getColumn = function (index) {\n      var columnLeafs = _this.props.columnLeafs;\n      return columnLeafs[index];\n    };\n\n    _this.getColumnWidth = function () {\n      var columnLeafs = _this.props.columnLeafs;\n      var cw = 0;\n      columnLeafs.forEach(function (d) {\n        cw += d.width || 100;\n      });\n      return cw;\n    };\n\n    _this.columnWidth = function (index, width) {\n      var column = _this.getColumn(index);\n\n      var cw = _this.getColumnWidth();\n\n      if (column) {\n        return column.width || 100;\n      }\n\n      return width - cw - 6;\n    };\n\n    _this.isLoadingChildren = function (key) {\n      var loadingKeys = _this.props.loadingKeys;\n      return loadingKeys.indexOf(key) > -1;\n    };\n\n    _this.expandableEl = function (columnIndex, rowIndex, row) {\n      var _this$props = _this.props,\n          rowIndent = _this$props.rowIndent,\n          _this$props$expandedK = _this$props.expandedKeys,\n          expandedKeys = _this$props$expandedK === void 0 ? [] : _this$props$expandedK,\n          rowKey = _this$props.rowKey;\n      var indent = (row.__depth || 0) * rowIndent;\n      var key = row[rowKey];\n\n      var isLoading = _this.isLoadingChildren(key);\n\n      var isExpand = false;\n      var icon = \"+\";\n\n      if (expandedKeys.indexOf(key) > -1) {\n        isExpand = true;\n        icon = \"-\";\n      } else {\n        isExpand = false;\n        icon = \"+\";\n      }\n\n      var iconFlag = React.createElement(\"span\", {\n        className: \"tablex-row-expand-placeholder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      });\n\n      if (row.children) {\n        iconFlag = React.createElement(\"span\", {\n          className: \"tablex-row-expand-icon\",\n          onClick: function onClick() {\n            _this.props.onExpandChange(isExpand, key);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, icon);\n      }\n\n      if (isLoading === true) {\n        iconFlag = React.createElement(LoadingIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        });\n      }\n\n      if (columnIndex === 0) {\n        return React.createElement(React.Fragment, null, indent > 0 ? React.createElement(\"span\", {\n          className: \"tablex-row-indent\",\n          style: {\n            marginLeft: indent\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }) : null, iconFlag);\n      }\n\n      return null;\n    };\n\n    _this.renderCell = function (_ref) {\n      var columnIndex = _ref.columnIndex,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style;\n      var dataSource = _this.props.dataSource;\n\n      if (dataSource.length === 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        });\n      }\n\n      var column = _this.getColumn(columnIndex);\n\n      if (column) {\n        var c = column.dataIndex;\n        var row = dataSource[rowIndex];\n\n        var expandableEl = _this.expandableEl(columnIndex, rowIndex, row);\n\n        var cellData = row[c];\n\n        if (typeof column.render === \"function\") {\n          return React.createElement(\"div\", {\n            className: \"tablex-cell\",\n            style: style,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }, expandableEl, \" \", column.render(cellData, row, rowIndex));\n        } else {\n          return React.createElement(\"div\", {\n            className: \"tablex-cell\",\n            style: style,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          }, expandableEl, cellData);\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"tablex-cell\",\n        style: _objectSpread({}, style, {\n          borderRight: \"none\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TableBody, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          columns = _this$props2.columns,\n          columnLeafs = _this$props2.columnLeafs,\n          dataSource = _this$props2.dataSource,\n          onScroll = _this$props2.onScroll;\n      var columnWidth = 0;\n      columnLeafs.forEach(function (d) {\n        columnWidth += d.width || 100;\n      });\n      var rowCount = dataSource.length;\n      return React.createElement(AutoSizer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, function (_ref2) {\n        var height = _ref2.height,\n            width = _ref2.width;\n        var len = columnLeafs.length;\n\n        if (width > columnWidth) {\n          len = len + 1;\n        }\n\n        var NoData = null;\n\n        if (dataSource.length === 0) {\n          rowCount = 1;\n          NoData = React.createElement(NoDataMsg, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 162\n            },\n            __self: this\n          });\n        }\n\n        return React.createElement(React.Fragment, null, NoData, React.createElement(Grid, {\n          columnCount: len,\n          columnWidth: function columnWidth(i) {\n            return _this2.columnWidth(i, width);\n          },\n          height: height,\n          rowCount: rowCount,\n          rowHeight: function rowHeight() {\n            return 35;\n          },\n          width: width,\n          onScroll: onScroll,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, _this2.renderCell));\n      });\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return TableBody;\n}(React.Component);\n\nTableBody.defaultProps = {\n  columns: [],\n  columnLeafs: [],\n  dataSource: [],\n  rowIndent: 20,\n  expandedKeys: [],\n  loadingKeys: []\n};\nTableBody.propTypes = {\n  /**\n   * 主要用于行展开\n   */\n  rowKey: PropTypes.string.isRequired,\n  columns: PropTypes.array.isRequired,\n  columnLeafs: PropTypes.array.isRequired,\n  dataSource: PropTypes.array.isRequired,\n  onScroll: PropTypes.func,\n\n  /**\n   * @isExpand 是否展开\n   * @key 受影响的行数据key\n   */\n  onExpandChange: PropTypes.func,\n  rowIndent: PropTypes.number,\n  expandedKeys: PropTypes.array,\n  loadingKeys: PropTypes.array\n};\nvar _default = TableBody;\nexport default _default;\n\nif (typeof TableBody !== 'undefined' && TableBody && TableBody === Object(TableBody) && Object.isExtensible(TableBody)) {\n  Object.defineProperty(TableBody, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"TableBody\",\n      filename: \"src/components/body.js\"\n    }\n  });\n}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(TableBody, \"TableBody\", \"/home/nexx/develop/tablex/src/components/body.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/nexx/develop/tablex/src/components/body.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["/home/nexx/develop/tablex/src/components/body.js"],"names":["React","PropTypes","VariableSizeGrid","Grid","AutoSizer","LoadingIcon","NoDataMsg","TableBody","getColumn","index","columnLeafs","props","getColumnWidth","cw","forEach","d","width","columnWidth","column","isLoadingChildren","key","loadingKeys","indexOf","expandableEl","columnIndex","rowIndex","row","rowIndent","expandedKeys","rowKey","indent","__depth","isLoading","isExpand","icon","iconFlag","children","onExpandChange","marginLeft","renderCell","style","dataSource","length","c","dataIndex","cellData","render","borderRight","columns","onScroll","rowCount","height","len","NoData","i","Component","defaultProps","propTypes","string","isRequired","array","func","number"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { VariableSizeGrid as Grid } from \"react-window\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport LoadingIcon from \"./loadingIcon\";\nimport NoDataMsg from \"./noDataMsg\";\n\nclass TableBody extends React.Component {\n  getColumn = index => {\n    let { columnLeafs } = this.props;\n\n    return columnLeafs[index];\n  };\n\n  getColumnWidth = () => {\n    let { columnLeafs } = this.props;\n\n    let cw = 0;\n    columnLeafs.forEach(d => {\n      cw += d.width || 100;\n    });\n\n    return cw;\n  };\n\n  columnWidth = (index, width) => {\n    let column = this.getColumn(index);\n    let cw = this.getColumnWidth();\n\n    if (column) {\n      return column.width || 100;\n    }\n\n    return width - cw - 6;\n  };\n\n  /**\n   * 行是否正在加载子级\n   */\n  isLoadingChildren = key => {\n    let { loadingKeys } = this.props;\n\n    return loadingKeys.indexOf(key) > -1;\n  };\n\n  expandableEl = (columnIndex, rowIndex, row) => {\n    let { rowIndent, expandedKeys = [], rowKey } = this.props;\n\n    let indent = (row.__depth || 0) * rowIndent;\n\n    let key = row[rowKey];\n\n    let isLoading = this.isLoadingChildren(key);\n\n    let isExpand = false;\n    let icon = \"+\";\n\n    if (expandedKeys.indexOf(key) > -1) {\n      isExpand = true;\n      icon = \"-\";\n    } else {\n      isExpand = false;\n      icon = \"+\";\n    }\n\n    let iconFlag = <span className=\"tablex-row-expand-placeholder\" />;\n\n    if (row.children) {\n      iconFlag = (\n        <span\n          className=\"tablex-row-expand-icon\"\n          onClick={() => {\n            this.props.onExpandChange(isExpand, key);\n          }}\n        >\n          {icon}\n        </span>\n      );\n    }\n\n    if (isLoading === true) {\n      iconFlag = <LoadingIcon />;\n    }\n\n    if (columnIndex === 0) {\n      return (\n        <>\n          {indent > 0 ? (\n            <span\n              className=\"tablex-row-indent\"\n              style={{ marginLeft: indent }}\n            />\n          ) : null}\n          {iconFlag}\n        </>\n      );\n    }\n    return null;\n  };\n\n  renderCell = ({ columnIndex, rowIndex, style }) => {\n    let { dataSource } = this.props;\n\n    if (dataSource.length === 0) {\n      return <div />;\n    }\n\n    let column = this.getColumn(columnIndex);\n\n    if (column) {\n      let c = column.dataIndex;\n      let row = dataSource[rowIndex];\n\n      let expandableEl = this.expandableEl(columnIndex, rowIndex, row);\n\n      let cellData = row[c];\n\n      if (typeof column.render === \"function\") {\n        return (\n          <div className=\"tablex-cell\" style={style}>\n            {expandableEl} {column.render(cellData, row, rowIndex)}\n          </div>\n        );\n      } else {\n        return (\n          <div className=\"tablex-cell\" style={style}>\n            {expandableEl}\n            {cellData}\n          </div>\n        );\n      }\n    }\n\n    return (\n      <div className=\"tablex-cell\" style={{ ...style, borderRight: \"none\" }} />\n    );\n  };\n\n  render() {\n    let { columns, columnLeafs, dataSource, onScroll } = this.props;\n\n    let columnWidth = 0;\n    columnLeafs.forEach(d => {\n      columnWidth += d.width || 100;\n    });\n\n    let rowCount = dataSource.length;\n\n    return (\n      <AutoSizer>\n        {({ height, width }) => {\n          let len = columnLeafs.length;\n\n          if (width > columnWidth) {\n            len = len + 1;\n          }\n\n          let NoData = null;\n\n          if (dataSource.length === 0) {\n            rowCount = 1;\n            NoData = <NoDataMsg />;\n          }\n\n          return (\n            <>\n              {NoData}\n              <Grid\n                columnCount={len}\n                columnWidth={i => this.columnWidth(i, width)}\n                height={height}\n                rowCount={rowCount}\n                rowHeight={() => 35}\n                width={width}\n                onScroll={onScroll}\n              >\n                {this.renderCell}\n              </Grid>\n            </>\n          );\n        }}\n      </AutoSizer>\n    );\n  }\n}\n\nTableBody.defaultProps = {\n  columns: [],\n  columnLeafs: [],\n  dataSource: [],\n  rowIndent: 20,\n  expandedKeys: [],\n  loadingKeys: []\n};\n\nTableBody.propTypes = {\n  /**\n   * 主要用于行展开\n   */\n  rowKey: PropTypes.string.isRequired,\n  columns: PropTypes.array.isRequired,\n  columnLeafs: PropTypes.array.isRequired,\n  dataSource: PropTypes.array.isRequired,\n  onScroll: PropTypes.func,\n\n  /**\n   * @isExpand 是否展开\n   * @key 受影响的行数据key\n   */\n  onExpandChange: PropTypes.func,\n  rowIndent: PropTypes.number,\n  expandedKeys: PropTypes.array,\n  loadingKeys: PropTypes.array\n};\n\nexport default TableBody;\n"]}]}