{"remainingRequest":"/home/nexx/develop/tablex/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/nexx/develop/tablex/node_modules/babel-loader/lib/index.js??ref--5-2!/home/nexx/develop/tablex/node_modules/source-map-loader/index.js!/home/nexx/develop/tablex/examples/stickyRow.js","dependencies":[{"path":"/home/nexx/develop/tablex/examples/stickyRow.js","mtime":1556698802304},{"path":"/home/nexx/develop/tablex/node_modules/cache-loader/dist/cjs.js","mtime":1555838893487},{"path":"/home/nexx/develop/tablex/node_modules/thread-loader/dist/cjs.js","mtime":1555838894922},{"path":"/home/nexx/develop/tablex/node_modules/babel-loader/lib/index.js","mtime":1555838893306},{"path":"/home/nexx/develop/tablex/node_modules/source-map-loader/index.js","mtime":1555838894829}],"contextDependencies":[],"result":["import _objectWithoutProperties from\"/home/nexx/develop/tablex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{createContext,forwardRef,useContext}from\"react\";import{render}from\"react-dom\";import\"./styles.css\";import{FixedSizeList as List}from\"react-window\";var StickyListContext=createContext();StickyListContext.displayName=\"StickyListContext\";var ItemWrapper=function ItemWrapper(_ref){var data=_ref.data,index=_ref.index,style=_ref.style;var ItemRenderer=data.ItemRenderer,stickyIndices=data.stickyIndices;if(stickyIndices&&stickyIndices.includes(index)){return null;}return React.createElement(ItemRenderer,{index:index,style:style});};var Row=function Row(_ref2){var index=_ref2.index,style=_ref2.style;return React.createElement(\"div\",{className:\"row\",style:style},\"Row \",index);};var StickyRow=function StickyRow(_ref3){var index=_ref3.index,style=_ref3.style;return React.createElement(\"div\",{className:\"sticky\",style:style},\"Sticky Row \",index);};var innerElementType=forwardRef(function(_ref4,ref){var children=_ref4.children,rest=_objectWithoutProperties(_ref4,[\"children\"]);return React.createElement(StickyListContext.Consumer,null,function(_ref5){var stickyIndices=_ref5.stickyIndices;return React.createElement(\"div\",Object.assign({ref:ref},rest),stickyIndices.map(function(index){return React.createElement(StickyRow,{index:index,key:index,style:{top:index*35,left:0,width:\"100%\",height:35}});}),children);});});var StickyList=function StickyList(_ref6){var children=_ref6.children,stickyIndices=_ref6.stickyIndices,rest=_objectWithoutProperties(_ref6,[\"children\",\"stickyIndices\"]);return React.createElement(StickyListContext.Provider,{value:{ItemRenderer:children,stickyIndices:stickyIndices}},React.createElement(List,Object.assign({itemData:{ItemRenderer:children,stickyIndices:stickyIndices}},rest),ItemWrapper));};var Example=function Example(){return React.createElement(StickyList,{height:150,innerElementType:innerElementType,itemCount:1000,itemSize:35,stickyIndices:[0,1],width:300},Row);};export default Example;if(typeof Example!=='undefined'&&Example&&Example===Object(Example)&&Object.isExtensible(Example)){Object.defineProperty(Example,'__filemeta',{enumerable:true,configurable:true,value:{name:\"Example\",filename:\"examples/stickyRow.js\"}});}",{"version":3,"sources":["/home/nexx/develop/tablex/examples/stickyRow.js"],"names":["React","createContext","forwardRef","useContext","render","FixedSizeList","List","StickyListContext","displayName","ItemWrapper","data","index","style","ItemRenderer","stickyIndices","includes","Row","StickyRow","innerElementType","ref","children","rest","map","top","left","width","height","StickyList","Example"],"mappings":"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","sourcesContent":["import React, { createContext, forwardRef, useContext } from \"react\";\nimport { render } from \"react-dom\";\nimport \"./styles.css\";\nimport { FixedSizeList as List } from \"react-window\";\n\nconst StickyListContext = createContext();\nStickyListContext.displayName = \"StickyListContext\";\n\nconst ItemWrapper = ({ data, index, style }) => {\n  const { ItemRenderer, stickyIndices } = data;\n  if (stickyIndices && stickyIndices.includes(index)) {\n    return null;\n  }\n  return <ItemRenderer index={index} style={style} />;\n};\n\nconst Row = ({ index, style }) => (\n  <div className=\"row\" style={style}>\n    Row {index}\n  </div>\n);\n\nconst StickyRow = ({ index, style }) => (\n  <div className=\"sticky\" style={style}>\n    Sticky Row {index}\n  </div>\n);\n\nconst innerElementType = forwardRef(({ children, ...rest }, ref) => (\n  <StickyListContext.Consumer>\n    {({ stickyIndices }) => (\n      <div ref={ref} {...rest}>\n        {stickyIndices.map(index => (\n          <StickyRow\n            index={index}\n            key={index}\n            style={{ top: index * 35, left: 0, width: \"100%\", height: 35 }}\n          />\n        ))}\n\n        {children}\n      </div>\n    )}\n  </StickyListContext.Consumer>\n));\n\nconst StickyList = ({ children, stickyIndices, ...rest }) => (\n  <StickyListContext.Provider value={{ ItemRenderer: children, stickyIndices }}>\n    <List itemData={{ ItemRenderer: children, stickyIndices }} {...rest}>\n      {ItemWrapper}\n    </List>\n  </StickyListContext.Provider>\n);\n\n\nconst Example=()=>{\n\n  return <StickyList\n  height={150}\n  innerElementType={innerElementType}\n  itemCount={1000}\n  itemSize={35}\n  stickyIndices={[0, 1]}\n  width={300}\n>\n  {Row}\n</StickyList>\n}\n\n \n\nexport default Example;"]}]}